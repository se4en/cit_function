{"algorithms":{"#text":"\n","@version":"110505","algorithm":{"#tail":"\n","@name":"ParsCit","#text":"\n","@version":"110505","citationList":{"#tail":"\n","#text":"\n","citation":[{"#tail":"\n","date":{"#tail":"\n","#text":"1999"},"rawString":{"#tail":"\n","#text":"Kiefer, B., Krieger, H.-U., Carroll, J., & Malouf, R. (1999). A bag of useful techniques for efficient and robust parsing. In Proceedings of the 37th Meeting of the Association for Computational Linguistics (pp. 473-480). College Park, MD."},"#text":"\n","pages":{"#tail":"\n","#text":"473--480"},"marker":{"#tail":"\n","#text":"Kiefer, Krieger, Carroll, Malouf, 1999"},"location":{"#tail":"\n","#text":"College Park, MD."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" be equal, but could stand in a subtype-supertype relationship. In addition, the feature structure subsumption test is potentially expensive since feature structures are large, typically containing hundreds of nodes. It is therefore an open question whether parsing systems using grammars of this type can gain any advantage from local ambiguity packing. The question is becoming increasingly important, though, as wide-coverage HPSG grammars are starting to be deployed in practical applications\u2014 for example for 'deep' analysis in the VerbMobil speech-to-speech translation system (Wahlster, 1997; Kiefer, Krieger, Carroll, & Malouf, 1999).1 In this paper we answer the question by demonstrating that (a) subsumption- and equivalence-based feature structure packing is applicable to large HPSG grammars, and (b) average complexity and time taken for the parsing task can be greatly reduced. In Section 2 we present a new, linear-time, bidirec1A significant body of work on efficient processing with such grammars has been building up recently, with investigations into efficient feature structure operations, abstractmachine-based compilation, CF backbone computation, and finite-state approximation of HPSG derivations, amongst others (F","@endWordPosition":"592","@position":"3957","annotationId":"T1","@startWordPosition":"587","@citStr":"Kiefer, Krieger, Carroll, & Malouf, 1999"},{"#tail":"\n","#text":"pro- and retroactive packing are well-suited to achieve optimal packing; furthermore, experimental results obtained with a publicly-available HPSG processing platform confirm that ambiguity packing can greatly reduce average parse complexity for this type of grammars. In related work, Miyao (1999) describes an approach to packing in which alternative feature structures are represented as packed, distributed disjunctions of feature structure fragments. Although the approach may have potential, the shifting of complex accounting into the unification algorithm is at variance with the findings of Kiefer et al. (1999), who report large speed-ups from the elimination of disjunction processing during unification. Unfortunately, the reported evaluation measures and lack of discussion of parser control issues are insufficient to allow a precise comparison. We intend to develop the approach presented in this paper in several directions. Firstly, we will enhance the unpacking phase to take advantage of the large number of equivalence packings we observe. This will significantly reduce the amount of work it needs to do. Secondly, many application contexts and subsequent layers of semantic processing will not requ","@endWordPosition":"5212","@position":"32232","annotationId":"T2","@startWordPosition":"5209","@citStr":"Kiefer et al. (1999)"}]},"title":{"#tail":"\n","#text":"A bag of useful techniques for efficient and robust parsing."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 37th Meeting of the Association for Computational Linguistics"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"B Kiefer"},{"#tail":"\n","#text":"H-U Krieger"},{"#tail":"\n","#text":"J Carroll"},{"#tail":"\n","#text":"R Malouf"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1999"},"rawString":{"#tail":"\n","#text":"Miyao, Y. (1999). Packing of feature structures for efficient unification of disjunctive feature structures. In Proceedings of the 37th Meeting of the Association for Computational Linguistics (pp. 579 - 84). College Park, MD."},"#text":"\n","pages":{"#tail":"\n","#text":"579--84"},"marker":{"#tail":"\n","#text":"Miyao, 1999"},"publisher":{"#tail":"\n","#text":"College Park, MD."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"ro- and retroactive local ambiguity packing with large feature structures, and have provided strong empirical evidence that our approach can be applied beneficially to chart parsing with a large, broad-coverage HPSG of English. By comparison to previous work in unification-based parsing we have demonstrated that pro- and retroactive packing are well-suited to achieve optimal packing; furthermore, experimental results obtained with a publicly-available HPSG processing platform confirm that ambiguity packing can greatly reduce average parse complexity for this type of grammars. In related work, Miyao (1999) describes an approach to packing in which alternative feature structures are represented as packed, distributed disjunctions of feature structure fragments. Although the approach may have potential, the shifting of complex accounting into the unification algorithm is at variance with the findings of Kiefer et al. (1999), who report large speed-ups from the elimination of disjunction processing during unification. Unfortunately, the reported evaluation measures and lack of discussion of parser control issues are insufficient to allow a precise comparison. We intend to develop the approach pres","@endWordPosition":"5162","@position":"31910","annotationId":"T3","@startWordPosition":"5161","@citStr":"Miyao (1999)"}},"title":{"#tail":"\n","#text":"Packing of feature structures for efficient unification of disjunctive feature structures."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 37th Meeting of the Association for Computational Linguistics"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Y Miyao"}}}]}}}}
