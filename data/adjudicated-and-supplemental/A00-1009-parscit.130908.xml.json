{"algorithms":{"#text":"\n","@version":"110505","algorithm":{"#tail":"\n","@name":"ParsCit","#text":"\n","@version":"110505","citationList":{"#tail":"\n","#text":"\n","citation":[{"volume":{"#tail":"\n","#text":"20"},"#tail":"\n","date":{"#tail":"\n","#text":"1994"},"rawString":{"#tail":"\n","#text":"Don, B. J. (1994) Machine translation divergences: A formal description and proposed solution. In Computational Linguistics, vol. 20, no. 4, pp. 597-635."},"journal":{"#tail":"\n","#text":"In Computational Linguistics,"},"#text":"\n","pages":{"#tail":"\n","#text":"597--635"},"marker":{"#tail":"\n","#text":"Don, 1994"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"fl:+] Figure 7: Lexico-Structural Transfer of English Lexeme MOVE to French More general lexico-structural rules for transfer can also be implemented using our grammar rule formalism. Figure 8 gives an English-French transfer rule applied to a weather domain for the transfer of a verb modified by the adverb ALMOST: It almost rained. Il a failli pleuvoir. TRANSFER-RULE: $X [ class :verb ] ( ATTR ALMOST ) FAILLIR [ class:verb ] ( II $X [ mood:inf ] ) Figure 8: English to French Lexico-Structural Transfer Rule with Verb Modifier ALMOST More details on how the structural divergences described in (Don, 1994) can be accounted for using our formalism can be found in (Nasr et al., 1998). 5 The Rule Processing Before being processed, the rules are first compiled and indexed for optimisation. Each module applies the following processing. The rules are assumed to be ordered from most specific to least specific. The application of the rules to the structures is top-down in a recursive way from the first rule to the last. For the main grammar, before applying a grammar rule to a given node, dictionary lookup is carried out in order to first apply the lexeme- or conceptspecific rules associated with this ","@endWordPosition":"2332","@position":"15487","annotationId":"T1","@startWordPosition":"2331","@citStr":"Don, 1994"}},"title":{"#tail":"\n","#text":"Machine translation divergences: A formal description and proposed solution."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"B J Don"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1997"},"rawString":{"#tail":"\n","#text":"Lavoie, B. and Rambow, 0. (1997) A Fast and Portable Realizer for Text Generation Systems. In Proceedings of the Fifth Conference on Applied Natural Language Processing, Washington, DC., pp. 265-268."},"#text":"\n","pages":{"#tail":"\n","#text":"265--268"},"marker":{"#tail":"\n","#text":"Lavoie, Rambow, 1997"},"location":{"#tail":"\n","#text":"Washington, DC.,"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" a DSyntS only includes full meaning-bearing lexemes while a SSyntS also contains function words such as determiners, auxiliaries, and strongly governed prepositions. In the implemented applications, the DSyntSs are the pivotal representations involved in most transformations, as this is also often the case in practice in linguistic-based MT (Hutchins and Somers, 1997). Figure 2 illustrates a DSyntS from a meteorological application, MeteoCogent (Kittredge and Lavoie, 1998), represented using the standard graphical notation and also the RealPro ASCII notation used internally in the framework (Lavoie and Rambow, 1997). As Figure 2 illustrates, there is a straightforward mapping between the graphical notation and the ASCII notation supported in the framework. This also applies for all the transformation rules in the framework which illustrates the declarative nature of our approach. Figure 2: DSyntS (Graphical and ASCII Notation) The ConcSs correspond to the standard framelike structures used in knowledge representation, with labeled arcs corresponding to slots. We have used them only for a very limited meteorological domain (in MeteoCogent), and we imagine that they will typically be defined in a domain-sp","@endWordPosition":"1105","@position":"7770","annotationId":"T2","@startWordPosition":"1102","@citStr":"Lavoie and Rambow, 1997"},{"#tail":"\n","#text":"ed statistically while preserving the valid handcrafted changes and deleting the invalid ones. In general, a better integration of linguistically based and statistical methods during all the development phases is greatly needed. 8 History of the Framework and Comparison with Other Systems The framework represents a generalization of several predecessor NLG systems based on Meaning-Text Theory: FoG (Kittredge and Polguere, 1991), LFS (Iordanskaja et al., 1992), and JOYCE (Rambow and Korelsky, 1992). The framework was originally developed for the realization of deep-syntactic structures in NLG (Lavoie and Rambow, 1997). It was later extended for generation of deep-syntactic structures from conceptual interlingua (Kittredge and Lavoie, 1998). Finally, it was applied to MT for transfer between deep-syntactic structures of different languages (Palmer et al., 1998). The current framework encompasses the full spectrum of such transformations, i.e. from the processing of conceptual structures to the processing of deep-syntactic structures, either for NLG or MT. Compared to its predecessors (Fog, LFS, JOYCE), our approach has obvious advantages in uniformity, declarativity and portability. The framework has been u","@endWordPosition":"3417","@position":"22521","annotationId":"T3","@startWordPosition":"3414","@citStr":"Lavoie and Rambow, 1997"}]},"title":{"#tail":"\n","#text":"A Fast and Portable Realizer for Text Generation Systems."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the Fifth Conference on Applied Natural Language Processing,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"B Lavoie"},{"#tail":"\n","#text":"Rambow"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1997"},"rawString":{"#tail":"\n","#text":"Lavoie, B. and Rambow, 0. (1997) A Fast and Portable Realizer for Text Generation Systems. In Proceedings of the Fifth Conference on Applied Natural Language Processing, Washington, DC., pp. 265-268."},"#text":"\n","pages":{"#tail":"\n","#text":"265--268"},"marker":{"#tail":"\n","#text":"Lavoie, Rambow, 1997"},"location":{"#tail":"\n","#text":"Washington, DC.,"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" a DSyntS only includes full meaning-bearing lexemes while a SSyntS also contains function words such as determiners, auxiliaries, and strongly governed prepositions. In the implemented applications, the DSyntSs are the pivotal representations involved in most transformations, as this is also often the case in practice in linguistic-based MT (Hutchins and Somers, 1997). Figure 2 illustrates a DSyntS from a meteorological application, MeteoCogent (Kittredge and Lavoie, 1998), represented using the standard graphical notation and also the RealPro ASCII notation used internally in the framework (Lavoie and Rambow, 1997). As Figure 2 illustrates, there is a straightforward mapping between the graphical notation and the ASCII notation supported in the framework. This also applies for all the transformation rules in the framework which illustrates the declarative nature of our approach. Figure 2: DSyntS (Graphical and ASCII Notation) The ConcSs correspond to the standard framelike structures used in knowledge representation, with labeled arcs corresponding to slots. We have used them only for a very limited meteorological domain (in MeteoCogent), and we imagine that they will typically be defined in a domain-sp","@endWordPosition":"1105","@position":"7770","annotationId":"T4","@startWordPosition":"1102","@citStr":"Lavoie and Rambow, 1997"},{"#tail":"\n","#text":"ed statistically while preserving the valid handcrafted changes and deleting the invalid ones. In general, a better integration of linguistically based and statistical methods during all the development phases is greatly needed. 8 History of the Framework and Comparison with Other Systems The framework represents a generalization of several predecessor NLG systems based on Meaning-Text Theory: FoG (Kittredge and Polguere, 1991), LFS (Iordanskaja et al., 1992), and JOYCE (Rambow and Korelsky, 1992). The framework was originally developed for the realization of deep-syntactic structures in NLG (Lavoie and Rambow, 1997). It was later extended for generation of deep-syntactic structures from conceptual interlingua (Kittredge and Lavoie, 1998). Finally, it was applied to MT for transfer between deep-syntactic structures of different languages (Palmer et al., 1998). The current framework encompasses the full spectrum of such transformations, i.e. from the processing of conceptual structures to the processing of deep-syntactic structures, either for NLG or MT. Compared to its predecessors (Fog, LFS, JOYCE), our approach has obvious advantages in uniformity, declarativity and portability. The framework has been u","@endWordPosition":"3417","@position":"22521","annotationId":"T5","@startWordPosition":"3414","@citStr":"Lavoie and Rambow, 1997"}]},"title":{"#tail":"\n","#text":"A Fast and Portable Realizer for Text Generation Systems."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the Fifth Conference on Applied Natural Language Processing,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"B Lavoie"},{"#tail":"\n","#text":"Rambow"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1997"},"rawString":{"#tail":"\n","#text":"Lavoie, B., Rambow, 0. and Reiter, E. (1997) Customizable Descriptions of Object-Oriented Models. In Proceedings of the Fifth Conference on Applied Natural Language Processing, Washington, DC., pp. 253-256."},"#text":"\n","pages":{"#tail":"\n","#text":"253--256"},"marker":{"#tail":"\n","#text":"Lavoie, Rambow, 1997"},"location":{"#tail":"\n","#text":"Washington, DC.,"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" a DSyntS only includes full meaning-bearing lexemes while a SSyntS also contains function words such as determiners, auxiliaries, and strongly governed prepositions. In the implemented applications, the DSyntSs are the pivotal representations involved in most transformations, as this is also often the case in practice in linguistic-based MT (Hutchins and Somers, 1997). Figure 2 illustrates a DSyntS from a meteorological application, MeteoCogent (Kittredge and Lavoie, 1998), represented using the standard graphical notation and also the RealPro ASCII notation used internally in the framework (Lavoie and Rambow, 1997). As Figure 2 illustrates, there is a straightforward mapping between the graphical notation and the ASCII notation supported in the framework. This also applies for all the transformation rules in the framework which illustrates the declarative nature of our approach. Figure 2: DSyntS (Graphical and ASCII Notation) The ConcSs correspond to the standard framelike structures used in knowledge representation, with labeled arcs corresponding to slots. We have used them only for a very limited meteorological domain (in MeteoCogent), and we imagine that they will typically be defined in a domain-sp","@endWordPosition":"1105","@position":"7770","annotationId":"T6","@startWordPosition":"1102","@citStr":"Lavoie and Rambow, 1997"},{"#tail":"\n","#text":"ed statistically while preserving the valid handcrafted changes and deleting the invalid ones. In general, a better integration of linguistically based and statistical methods during all the development phases is greatly needed. 8 History of the Framework and Comparison with Other Systems The framework represents a generalization of several predecessor NLG systems based on Meaning-Text Theory: FoG (Kittredge and Polguere, 1991), LFS (Iordanskaja et al., 1992), and JOYCE (Rambow and Korelsky, 1992). The framework was originally developed for the realization of deep-syntactic structures in NLG (Lavoie and Rambow, 1997). It was later extended for generation of deep-syntactic structures from conceptual interlingua (Kittredge and Lavoie, 1998). Finally, it was applied to MT for transfer between deep-syntactic structures of different languages (Palmer et al., 1998). The current framework encompasses the full spectrum of such transformations, i.e. from the processing of conceptual structures to the processing of deep-syntactic structures, either for NLG or MT. Compared to its predecessors (Fog, LFS, JOYCE), our approach has obvious advantages in uniformity, declarativity and portability. The framework has been u","@endWordPosition":"3417","@position":"22521","annotationId":"T7","@startWordPosition":"3414","@citStr":"Lavoie and Rambow, 1997"}]},"title":{"#tail":"\n","#text":"Customizable Descriptions of Object-Oriented Models."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the Fifth Conference on Applied Natural Language Processing,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"B Lavoie"},{"#tail":"\n","#text":"Rambow"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1997"},"rawString":{"#tail":"\n","#text":"Lavoie, B., Rambow, 0. and Reiter, E. (1997) Customizable Descriptions of Object-Oriented Models. In Proceedings of the Fifth Conference on Applied Natural Language Processing, Washington, DC., pp. 253-256."},"#text":"\n","pages":{"#tail":"\n","#text":"253--256"},"marker":{"#tail":"\n","#text":"Lavoie, Rambow, 1997"},"location":{"#tail":"\n","#text":"Washington, DC.,"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" a DSyntS only includes full meaning-bearing lexemes while a SSyntS also contains function words such as determiners, auxiliaries, and strongly governed prepositions. In the implemented applications, the DSyntSs are the pivotal representations involved in most transformations, as this is also often the case in practice in linguistic-based MT (Hutchins and Somers, 1997). Figure 2 illustrates a DSyntS from a meteorological application, MeteoCogent (Kittredge and Lavoie, 1998), represented using the standard graphical notation and also the RealPro ASCII notation used internally in the framework (Lavoie and Rambow, 1997). As Figure 2 illustrates, there is a straightforward mapping between the graphical notation and the ASCII notation supported in the framework. This also applies for all the transformation rules in the framework which illustrates the declarative nature of our approach. Figure 2: DSyntS (Graphical and ASCII Notation) The ConcSs correspond to the standard framelike structures used in knowledge representation, with labeled arcs corresponding to slots. We have used them only for a very limited meteorological domain (in MeteoCogent), and we imagine that they will typically be defined in a domain-sp","@endWordPosition":"1105","@position":"7770","annotationId":"T8","@startWordPosition":"1102","@citStr":"Lavoie and Rambow, 1997"},{"#tail":"\n","#text":"ed statistically while preserving the valid handcrafted changes and deleting the invalid ones. In general, a better integration of linguistically based and statistical methods during all the development phases is greatly needed. 8 History of the Framework and Comparison with Other Systems The framework represents a generalization of several predecessor NLG systems based on Meaning-Text Theory: FoG (Kittredge and Polguere, 1991), LFS (Iordanskaja et al., 1992), and JOYCE (Rambow and Korelsky, 1992). The framework was originally developed for the realization of deep-syntactic structures in NLG (Lavoie and Rambow, 1997). It was later extended for generation of deep-syntactic structures from conceptual interlingua (Kittredge and Lavoie, 1998). Finally, it was applied to MT for transfer between deep-syntactic structures of different languages (Palmer et al., 1998). The current framework encompasses the full spectrum of such transformations, i.e. from the processing of conceptual structures to the processing of deep-syntactic structures, either for NLG or MT. Compared to its predecessors (Fog, LFS, JOYCE), our approach has obvious advantages in uniformity, declarativity and portability. The framework has been u","@endWordPosition":"3417","@position":"22521","annotationId":"T9","@startWordPosition":"3414","@citStr":"Lavoie and Rambow, 1997"}]},"title":{"#tail":"\n","#text":"Customizable Descriptions of Object-Oriented Models."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the Fifth Conference on Applied Natural Language Processing,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"B Lavoie"},{"#tail":"\n","#text":"Rambow"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1992"},"rawString":{"#tail":"\n","#text":"Rambow, 0. and Korelsky, T. (1992) Applied Text Generation. In Proceedings of the 6th International Workshop on Natural Language Generation, Trento, Italy, pp. 40-47."},"#text":"\n","pages":{"#tail":"\n","#text":"40--47"},"marker":{"#tail":"\n","#text":"Korelsky, 1992"},"location":{"#tail":"\n","#text":"Trento, Italy,"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ral processing&quot;). We describe how this framework has been used in practical NLG and MT applications, and report the lessons learned. 1 Introduction In this paper we present a linguistically motivated framework for uniform lexicostructural processing. It has been used for transformations of conceptual and syntactic structures during generation in monolingual and multilingual natural language generation (NLG) and for transfer in machine translation (MT). Our work extends directions taken in systems such as Ariane (Vauquois and Boitet, 1985), FoG (Kittredge and Polguere, 1991), JOYCE (Rambow and Korelsky, 1992), and LFS (Iordanskaja et al., 1992). Although it adopts the general principles found in the abovementioned systems, the approach presented in this paper is more practical, and we believe, would eventually integrate better with emerging statistics-based approaches to MT. * The work performed on the framework by this coauthor was done while at CoGenTex, Inc. The framework consists of a portable Java environment for building NLG or MT applications by defining modules using a core tree transduction engine and single declarative ASCII specification language for conceptual or syntactic dependency t","@endWordPosition":"203","@position":"1497","annotationId":"T10","@startWordPosition":"202","@citStr":"Korelsky, 1992"},{"#tail":"\n","#text":"les manually. The current framework offers no support for merging handcrafted rules with new lexical rules obtained statistically while preserving the valid handcrafted changes and deleting the invalid ones. In general, a better integration of linguistically based and statistical methods during all the development phases is greatly needed. 8 History of the Framework and Comparison with Other Systems The framework represents a generalization of several predecessor NLG systems based on Meaning-Text Theory: FoG (Kittredge and Polguere, 1991), LFS (Iordanskaja et al., 1992), and JOYCE (Rambow and Korelsky, 1992). The framework was originally developed for the realization of deep-syntactic structures in NLG (Lavoie and Rambow, 1997). It was later extended for generation of deep-syntactic structures from conceptual interlingua (Kittredge and Lavoie, 1998). Finally, it was applied to MT for transfer between deep-syntactic structures of different languages (Palmer et al., 1998). The current framework encompasses the full spectrum of such transformations, i.e. from the processing of conceptual structures to the processing of deep-syntactic structures, either for NLG or MT. Compared to its predecessors (Fo","@endWordPosition":"3400","@position":"22399","annotationId":"T11","@startWordPosition":"3399","@citStr":"Korelsky, 1992"}]},"title":{"#tail":"\n","#text":"Applied Text Generation."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 6th International Workshop on Natural Language Generation,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"T Korelsky"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1992"},"rawString":{"#tail":"\n","#text":"Rambow, 0. and Korelsky, T. (1992) Applied Text Generation. In Proceedings of the 6th International Workshop on Natural Language Generation, Trento, Italy, pp. 40-47."},"#text":"\n","pages":{"#tail":"\n","#text":"40--47"},"marker":{"#tail":"\n","#text":"Korelsky, 1992"},"location":{"#tail":"\n","#text":"Trento, Italy,"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ral processing&quot;). We describe how this framework has been used in practical NLG and MT applications, and report the lessons learned. 1 Introduction In this paper we present a linguistically motivated framework for uniform lexicostructural processing. It has been used for transformations of conceptual and syntactic structures during generation in monolingual and multilingual natural language generation (NLG) and for transfer in machine translation (MT). Our work extends directions taken in systems such as Ariane (Vauquois and Boitet, 1985), FoG (Kittredge and Polguere, 1991), JOYCE (Rambow and Korelsky, 1992), and LFS (Iordanskaja et al., 1992). Although it adopts the general principles found in the abovementioned systems, the approach presented in this paper is more practical, and we believe, would eventually integrate better with emerging statistics-based approaches to MT. * The work performed on the framework by this coauthor was done while at CoGenTex, Inc. The framework consists of a portable Java environment for building NLG or MT applications by defining modules using a core tree transduction engine and single declarative ASCII specification language for conceptual or syntactic dependency t","@endWordPosition":"203","@position":"1497","annotationId":"T12","@startWordPosition":"202","@citStr":"Korelsky, 1992"},{"#tail":"\n","#text":"les manually. The current framework offers no support for merging handcrafted rules with new lexical rules obtained statistically while preserving the valid handcrafted changes and deleting the invalid ones. In general, a better integration of linguistically based and statistical methods during all the development phases is greatly needed. 8 History of the Framework and Comparison with Other Systems The framework represents a generalization of several predecessor NLG systems based on Meaning-Text Theory: FoG (Kittredge and Polguere, 1991), LFS (Iordanskaja et al., 1992), and JOYCE (Rambow and Korelsky, 1992). The framework was originally developed for the realization of deep-syntactic structures in NLG (Lavoie and Rambow, 1997). It was later extended for generation of deep-syntactic structures from conceptual interlingua (Kittredge and Lavoie, 1998). Finally, it was applied to MT for transfer between deep-syntactic structures of different languages (Palmer et al., 1998). The current framework encompasses the full spectrum of such transformations, i.e. from the processing of conceptual structures to the processing of deep-syntactic structures, either for NLG or MT. Compared to its predecessors (Fo","@endWordPosition":"3400","@position":"22399","annotationId":"T13","@startWordPosition":"3399","@citStr":"Korelsky, 1992"}]},"title":{"#tail":"\n","#text":"Applied Text Generation."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 6th International Workshop on Natural Language Generation,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"T Korelsky"}}}]}}}}
