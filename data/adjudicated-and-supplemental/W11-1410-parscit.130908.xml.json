{"algorithms":{"#text":"\n","@version":"110505","algorithm":{"#tail":"\n","@name":"ParsCit","#text":"\n","@version":"110505","citationList":{"#tail":"\n","#text":"\n","citation":[{"#tail":"\n","date":{"#tail":"\n","#text":"2010"},"rawString":{"#tail":"\n","#text":"Tagyoung Chung, Matt Post, and Daniel Gildea. 2010. Factors affecting the accuracy of korean parsing. In Proceedings of the NAACL HLT 2010 First Workshop on Statistical Parsing of Morphologically-Rich Languages, pages 49\u201357. Los Angeles, CA, USA."},"#text":"\n","pages":{"#tail":"\n","#text":"49--57"},"marker":{"#tail":"\n","#text":"Chung, Post, Gildea, 2010"},"location":{"#tail":"\n","#text":"Los Angeles, CA, USA."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"s there a particle? (Yes/No); and 2) What is the exact particle? Using two steps eases the task of actual particle prediction: with a successful classification of negative and positive instances, there is no need to handle nominals that have no particle in step 2. To evaluate our parameters for obtaining the most relevant instances, we keep the task simple and perform only step 1, as this step provides information about the usability of the training data. For actual system performance, we evaluate both steps. In selecting features for Korean, we have to account for relatively free word order (Chung et al., 2010). We follow our previous work (Dickinson et al., 2010) in our feature choices, using a fiveword window that includes the target stem and two words on either side for context (see also Tetreault and Chodorow, 2008). Each word is broken down into: stem, affixes, stem POS, and affixes POS. We also have features for the preceding and following noun and verb, thereby approximating relevant selectional properties. Although these are relatively shallow features, they provide enough lexical and grammatical context to help select better or worse training data (section 3) and to provide a basis for a pr","@endWordPosition":"852","@position":"5372","annotationId":"T1","@startWordPosition":"849","@citStr":"Chung et al., 2010"}},"title":{"#tail":"\n","#text":"Factors affecting the accuracy of korean parsing."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the NAACL HLT 2010 First Workshop on Statistical Parsing of Morphologically-Rich Languages,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Tagyoung Chung"},{"#tail":"\n","#text":"Matt Post"},{"#tail":"\n","#text":"Daniel Gildea"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2010"},"rawString":{"#tail":"\n","#text":"Markus Dickinson, Ross Israel, and Sun-Hee Lee. 2010. Building a korean web corpus for analyzing learner language. In Proceedings of the 6th Workshop on the Web as Corpus (WAC-6). Los Angeles."},"#text":"\n","marker":{"#tail":"\n","#text":"Dickinson, Israel, Lee, 2010"},"location":{"#tail":"\n","#text":"Los Angeles."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ean data and sampling instances to better match the particle distribution. Our evaluation shows that, while the data selection is effective, there is much work to be done with preprocessing and system optimization. 1 Introduction A growing area of research in analyzing learner language is to detect errors in function words, namely categories such as prepositions and articles (see Leacock et al., 2010, and references therein). This work has mostly been for English, and there are issues, such as greater morphological complexity, in moving to other languages (see, e.g., de Ilarraza et al., 2008; Dickinson et al., 2010). Our goal is to build a machine learning system for detecting errors in postpositional particles in Korean, a significant source of learner errors (Ko et al., 2004; Lee et al., 2009b). Korean postpositional particles are morphemes that attach to a preceding nominal to indicate a range of linguistic functions, including grammatical functions, e.g., subject and object; semantic roles; and discourse functions. In (1), for instance, ka marks the subject (function) and agent (semantic role).1 Similar to English prepositions, particles can also have modifier functions, adding meanings of time, loca","@endWordPosition":"158","@position":"1065","annotationId":"T2","@startWordPosition":"155","@citStr":"Dickinson et al., 2010"},{"#tail":"\n","#text":"k of particle error detection as one of particle selection, and we use machine learning because it has proven effective in similar tasks for other languages (e.g., Chodorow et al., 2007; Oyama, 2010). Training on a corpus of well-formed Korean, we predict which particle should appear after a given nominal; if this is different from the learner\u2019s, we have detected an error. Using a machine learner has the advantage of being able to perform well without a researcher having to specify rules, especially with the complex set of linguistic relationships motivating particle selection.2 We build from Dickinson et al. (2010) in two main ways: first, we implement a presence-selection pipeline that has proven effective for English preposition error detection (cf. Gamon et al., 2008). As the task is understudied, the work is preliminary, but it nonetheless is able to highlight the primary areas of focus for future work. Secondly, we improve upon the training data, in particular doing a better job of selecting relevant instances for the machine learner. Obtaining better-quality training data is a major issue for machine learning applied to learner language, as the domain of writing is different from news-heavy traini","@endWordPosition":"390","@position":"2540","annotationId":"T3","@startWordPosition":"387","@citStr":"Dickinson et al. (2010)"},{"#tail":"\n","#text":"xact particle? Using two steps eases the task of actual particle prediction: with a successful classification of negative and positive instances, there is no need to handle nominals that have no particle in step 2. To evaluate our parameters for obtaining the most relevant instances, we keep the task simple and perform only step 1, as this step provides information about the usability of the training data. For actual system performance, we evaluate both steps. In selecting features for Korean, we have to account for relatively free word order (Chung et al., 2010). We follow our previous work (Dickinson et al., 2010) in our feature choices, using a fiveword window that includes the target stem and two words on either side for context (see also Tetreault and Chodorow, 2008). Each word is broken down into: stem, affixes, stem POS, and affixes POS. We also have features for the preceding and following noun and verb, thereby approximating relevant selectional properties. Although these are relatively shallow features, they provide enough lexical and grammatical context to help select better or worse training data (section 3) and to provide a basis for a preliminary system (section 4). 3 Obtaining the most rel","@endWordPosition":"861","@position":"5426","annotationId":"T4","@startWordPosition":"858","@citStr":"Dickinson et al., 2010"},{"#tail":"\n","#text":" as this allows us to find data similar to learner language, and using web as corpus (WaC) tools allows us to adjust parameters for new data (Dickinson et al., 2010). However, the methodology outlined in Dickinson et al. (2010) can be improved in at least three ways, outlined next. 3.1 Using sub-corpora Web corpora can be built by searching for a set of seed terms, extracting documents with those terms (Baroni and Bernardini, 2004). One way to improve such corpora is to use better seeds, namely, those which are: 1) domain-appropriate (e.g., about traveling), and 2) of an appropriate level. In Dickinson et al. (2010), we show that basic terms result in poor quality Korean, but slightly more advanced terms on the same topics result in better-formed data. Rather than use all of the seed terms to create a single corpus, we divide the seed terms into 13 separate sets, based on the individual topics from our learner corpus. The sub-corpora are then combined to create a cohesive corpus covering all the topics. For example, we use 10 Travel words to build a subcorpus, 10 Learning Korean words for a different subcorpus, and so forth. This means that terms appropriate for one topic are not mixed with terms for a d","@endWordPosition":"1086","@position":"6775","annotationId":"T5","@startWordPosition":"1083","@citStr":"Dickinson et al. (2010)"},{"#tail":"\n","#text":"particle attached to a noun, we propose to downsample our corpora for the machine learning experiments, by removing a randomly-selected proportion of (negative) instances. Instance sampling has been effective for other NLP tasks, e.g., anaphora resolution (Wunsch et al., 2009), when the number of negative instances is much greater than the positive ones. In our web corpora, nouns have a greater than 50% chance of having no particle; in section 3.4, we thus downsample to varying amounts of negative instances from about 45% to as little as 10% of the total corpus. 3.4 Training data selection In Dickinson et al. (2010), we used a Korean learner data set from Lee et al. (2009b) for development. It contains 3198 ecels, 1842 of which are nominals, and 1271 (P70%) of those have particles. We use this same corpus for development, to evaluate filtering and down-sampling. Evaluating on (yes/no) particle presence, in tables 1 and 2, recall is the percentage of positive instances we correctly find and precision is the percentage of instances that we classify as positive that actually are. A baseline of always guessing a particle gives 100% recall, 69% precision, and 81.7% F-score. Table 1 shows the results of the Ma","@endWordPosition":"1480","@position":"9093","annotationId":"T6","@startWordPosition":"1477","@citStr":"Dickinson et al. (2010)"},{"#tail":"\n","#text":" P/N ratio 10/1 4/1 2/1 1.3/1 1/1.05 Instances 3.1m 3.5m 4.3m 5m 5.8m Accuracy 74.75 77.85 80.23 81.59 81.11 Precision 73.38 76.72 80.75 84.26 86.14 Recall 99.53 97.48 93.71 90.17 86.55 F-score 84.47 85.86 86.74 87.12 86.34 Table 2: Step 1 (presence) results with instance sampling One goal has been to improve the web as corpus corpus methodology for training a machine learning system. The results in tables 1 and 2 reinforce our earlier finding that size is not necessarily the most important variable in determining the usefulness or overall quality of data collected from the web for NLP tasks (Dickinson et al., 2010). Indeed, the corpus producing best results (90% filter, 1.3:1 downsampling) is more than 3 million instances smaller than the unfiltered, unsampled corpus. 4 Initial system evaluation We have obtained an annotated corpus of 25 essays from heritage intermediate learners,3 with 299 sentences and 2515 ecels (2676 ecels after correcting spacing errors). There are 1138 nominals, with 93 particle errors (5 added particles, 35 omissions, 53 substitutions)\u2014in other words, less than 10% of particles are errors. There are 979 particles after correction. We focus on 38 particles that intermediate 3Herit","@endWordPosition":"1866","@position":"11379","annotationId":"T7","@startWordPosition":"1863","@citStr":"Dickinson et al., 2010"}]},"title":{"#tail":"\n","#text":"Building a korean web corpus for analyzing learner language."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 6th Workshop on the Web as Corpus (WAC-6)."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Markus Dickinson"},{"#tail":"\n","#text":"Ross Israel"},{"#tail":"\n","#text":"Sun-Hee Lee"}]}}]}}}}
