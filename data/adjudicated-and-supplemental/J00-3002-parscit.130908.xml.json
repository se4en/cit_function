{"algorithms":{"#text":"\n","@version":"110505","algorithm":{"#tail":"\n","@name":"ParsCit","#text":"\n","@version":"110505","citationList":{"#tail":"\n","#text":"\n","citation":[{"#tail":"\n","date":{"#tail":"\n","#text":"1989"},"rawString":{"#tail":"\n","#text":"Hepple, Mark and Glyn Morrill. 1989. Parsing and Derivational Equivalence. Proceedings of the Fourth Conference of the European Chapter of the Association for Computational Linguistics, pages 10-18, Manchester."},"#text":"\n","pages":{"#tail":"\n","#text":"10--18"},"marker":{"#tail":"\n","#text":"Hepple, Morrill, 1989"},"location":{"#tail":"\n","#text":"Manchester."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":") c. A\\B,B\\C A\\C CIB,BIA CIA By a result of Zielonka (1981), the Lambek calculus is not axiomatizable by any finite set of combinatory schemata, so no such combinatory presentation can constitute the logic of concatenation in the sense of Lambek calculus. Combinatory categorial grammar does not concern itself with the capture of all (or only) the concatenatively valid combinatory schemata, but rather with incrementality, for example, on a shiftreduce design. An approach (also based on regulation of the succession of rule application) to the associated problem of spurious ambiguity is given in Hepple and Morrill (1989) but again, to our knowledge, there is no predictive relation between incremental combinatory processing and the kind of processing phenomena cited in the introduction. 3. Proof Nets Lambek categorial derivations are often presented in the style of natural deduction or sequent calculus. Here we are concerned with categorial proof nets (Roorda 1991) as the fundamental structures of proof in categorial logic, in the same sense that linear proof nets were originally introduced by Girard (1987) as the fundamental structures of proof in linear logic. (Cut-free) proof nets exhibit no spurious ambigu","@endWordPosition":"1559","@position":"9430","annotationId":"T1","@startWordPosition":"1556","@citStr":"Hepple and Morrill (1989)"}},"title":{"#tail":"\n","#text":"Parsing and Derivational Equivalence."},"booktitle":{"#tail":"\n","#text":"Proceedings of the Fourth Conference of the European Chapter of the Association for Computational Linguistics,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Mark Hepple"},{"#tail":"\n","#text":"Glyn Morrill"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1989"},"institution":{"#tail":"\n","#text":"Vancouver. Association for Computational Linguistics."},"rawString":{"#tail":"\n","#text":"Konig, Esther. 1989. Parsing as natural deduction. Proceedings of the 27th Annual Meeting, pages 272-279, Vancouver. Association for Computational Linguistics."},"#text":"\n","pages":{"#tail":"\n","#text":"272--279"},"marker":{"#tail":"\n","#text":"Konig, 1989"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"ning proof search in the Cut-free fragment. The nonatomic instances of the id axiom are derivable from atomic instances by the rules for the connectives. But even in the Cut-free atomic-id calculus there is spurious ambiguity: equivalent derivations differing only in irrelevant rule ordering. For example, composition as above has the following alternative derivation: (15) AA BB \\L A, A\\B B c=c A, A\\B, B\\C C \\R L A\\B , B\\C A\\C One approach to this problem consists in defining, within the Cut-free atomic-id space, normal form derivations in which the succession of rule application is regulated (Konig 1989, Hepple 1990, Hendriks 1993). Each sequent has a distinguished category formula (underlined) on which rule applications are keyed: (16) a. P=P id A(A) B r A A(13) C \\L A (F , A\\B) C FzzA A(11) C /L A (B/A,F) C A, F B \\R r A\\B F, A B /R F B/A ArrA F B In the regulated calculus there is no spurious ambiguity, and provided there is no explicit or implicit antecedent product, i.e., provided .1_, is not needed, r = A is a theorem of the Lambek calculus iff F = is a theorem of the regulated calculus. However, apart from the issue regarding .L, there is a general cause for dissatisfaction with this ","@endWordPosition":"1187","@position":"7246","annotationId":"T2","@startWordPosition":"1186","@citStr":"Konig 1989"}},"title":{"#tail":"\n","#text":"Parsing as natural deduction."},"booktitle":{"#tail":"\n","#text":"Proceedings of the 27th Annual Meeting,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Esther Konig"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1999"},"rawString":{"#tail":"\n","#text":"Morrill, Glyn. 1999. Geometry of Lexico-Syntactic Interaction. Proceedings of the Ninth Conference of the European Chapter of the Association for Computational Linguistics, Bergen, pages 61-70."},"#text":"\n","pages":{"#tail":"\n","#text":"61--70"},"marker":{"#tail":"\n","#text":"Morrill, 1999"},"location":{"#tail":"\n","#text":"Bergen,"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"al derivations are often presented in the style of natural deduction or sequent calculus. Here we are concerned with categorial proof nets (Roorda 1991) as the fundamental structures of proof in categorial logic, in the same sense that linear proof nets were originally introduced by Girard (1987) as the fundamental structures of proof in linear logic. (Cut-free) proof nets exhibit no spurious ambiguity and play the role in categorial grammar that parse trees play in phrase structure grammar. Surveys and articles on the topic include Lamarche and Retord (1996), de Groote and Retord (1996), and Morrill (1999). Still, at the risk of proceeding at a slightly slower pace, we aim nonetheless to include here enough details to make the present paper self-contained. A polar category formula is a Lambek categorial type labeled with input (') or output (°) polarity. A polar category formula tree is a binary ordered tree in which the leaves are labeled with polar atoms (literals) and each local tree is one of the following (logical) links: A° ii 13* B° A' i (18) a. A\\ 13' A\\B° B\u2022 A°.. A' B°. b. B I A B I A° 1 A° B°B° A° ii c. A .B\u2022 i A-B° Without polarities, a formula tree is a kind of formation tree of the","@endWordPosition":"1687","@position":"10242","annotationId":"T3","@startWordPosition":"1686","@citStr":"Morrill (1999)"}},"title":{"#tail":"\n","#text":"Geometry of Lexico-Syntactic Interaction."},"booktitle":{"#tail":"\n","#text":"Proceedings of the Ninth Conference of the European Chapter of the Association for Computational Linguistics,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Glyn Morrill"}}}]}}}}
