 contextual interpretation of pronouns, definites, ellipsis, focus, and quantifier scope. There is far more to say about each of these phenomena, of course, and the analyses here are by no means claimed to be definitive. The aim is merely to show that we can, to a first approximation, provide a reasonably fully worked out description of these phenomena in a truly bidirectional way. We then go on to compare the current approach with that of some other theories with similar aims: the &quot;standard&quot; version of quasi-logical form implemented in the Core Language Engine, as rationally reconstructed by Alshawi and Crouch (1992) and Crouch and Pulman (1994); underspecified Discourse Representation Theory (Reyle 1993); and the &quot;glue language&quot; approach of Dalrymple et al. (1996). Finally, we discuss some of the semantic and logical issues raised by the approach described here, in particular the extent to which the theory meets the desiderata for accounts of underspecification outlined by van Eijck and Jaspars (1996), and the extent to which the theory supplies a methodologically satisfactory account of truth and interpretation for sentences involving contextually dependent constructs. 2. Contextual Interpretation The m
terpretation mechanism, assuming only that the same grammatical description is used in both the analysis and generation direction. What is required is that QLFs are, as here, expressed in a typed higher-order logic, augmented with constructs representing the interpretation of context-dependent elements (pronouns, ellipsis, focus, etc.). These constructs correspond as directly as possible to properties of the linguistic structure that express them and are, to as small an extent as possible, dependent on the requirements of contextual resolution (unlike, say, the metavariables of standard QLFs [Alshawi and Crouch 1992], or the labels of UDRS [Reyle 1996], which are motivated entirely by the mechanisms that operate on them after grammatical processing). Syntactic properties relevant for binding constraints, parallelism, scope constraints, and so on, are not directly represented at QLF (again unlike standard QLFs) but are assumed to be available as components of the linguistic context.' The context-independent meanings of sentences, which we refer to as resolved logical forms (RLFs), are expressed in the &quot;ordinary&quot; subset of the QLF language. A fully resolved RLF can be directly evaluated for truth: it conta
making this a general restriction on admissible solutions, as we have already been doing implicitly.3 Of course, this analysis of pronoun reference will cover only the simplest possible cases of intersentential anaphora. Before going on to more complex cases, we will also show how to deal with intrasentential anaphora, including reflexives, and binding of a pronoun by a quantifier. The relevant equivalence is: Pron-he-intra Rest(_„„(Ay.Pred(y,he)) <4= Rest.„( Pred(y,y)) if binding_conditions_hold.... This equivalence is doing essentially the same job as Pereira's pronoun abstraction schema in Pereira (1990). It will identify a pronoun with any term of type e elsewhere in the QLF, relying on the binding conditions to prevent impossible associations. 3 For this case, and for many other types of restrictions currently handled by conditions, more elegant solutions are available using the &quot;sorted&quot; and &quot;colored&quot; versions of higher-order unification developed by Michael Kohlhase and colleagues (Gardent and Kohlhase 1996b, 1997; Gardent Kohlhase, and van Leusen 1996; Gardent, Kohlhase, and Konrad 1999). 503 Computational Linguistics Volume 26, Number 4 We illustrate this equivalence with the relevant in
didates for parallel elements and the value of the Predicate that corresponds to the Ellipsis variable in the description of DSP above. Some sortal conditions within both the equivalence and the predicate parallel are necessary to make sure that the variables PolarityTenseEtc are appropriately instantiated, since there are many possibilities consistent with their type requirements. But no extralogical mechanisms are needed, apart from the definition of &quot;parallel,&quot; which is intended to correspond to the notion discussed in Dalrymple, Shieber, and Pereira (1991), Priist (1992), Hobbs and Kehler (1997), and Gardent and Kohlhase (1997), among others. Parallelism may involve syntactic, semantic, pragmatic, and discourse components, depending on the construction involved. VP deletion, for example, requires the parallel element to be the subject of the preceding conjunct as well as being in the same domain of quantification as the remnant; whereas phrasal ellipsis like and John merely requires the antecedent to be in the same domain of quantification. Now given a sequence like: (15) Smith liked Sandy. Jones didn't. where the antecedent logical form and the QLF to be resolved are respectively: e
e latter two reiata can be incompletely specified without preventing interpretation of the former. Any analysis of focus should be able to capture this phenomenon. The vital ingredient of the analysis here is the nondirectionality of inference provided by higher-order unification, supplemented by abduction. 3.5 Quantifier Scope We can implement a deductive theory of quantifier scope using the conditional equivalence mechanism. The version proposed here combines a basic insight from Lewin (1990) with higher-order unification to give an analysis that has a strong resemblance to that proposed in Pereira (1990, 1991), with some differences that are commented on below. Like Pereira's approach, it avoids the need for a free variable constraint, nor does it need the explicit recursion on the quantifier restriction imposed by Lewin. We analyze quantified NPs at the QLF level as illustrated in the QLF for: (19) Every manager uses a computer. ex istsl ( e. pos( pres( u se(e,eve ry( m a na ger), a c.,„„(com put er)))) We assume that every determiner has its own equivalence, which resolves it as a quantifier: sometimes this can be quite a complicated matter, as with any (Alshawi 1990), which will resolve i
e to that proposed in Pereira (1990, 1991), with some differences that are commented on below. Like Pereira's approach, it avoids the need for a free variable constraint, nor does it need the explicit recursion on the quantifier restriction imposed by Lewin. We analyze quantified NPs at the QLF level as illustrated in the QLF for: (19) Every manager uses a computer. ex istsl ( e. pos( pres( u se(e,eve ry( m a na ger), a c.,„„(com put er)))) We assume that every determiner has its own equivalence, which resolves it as a quantifier: sometimes this can be quite a complicated matter, as with any (Alshawi 1990), which will resolve in different ways depending on its linguistic context, but here we avoid this complexity' 6 Separate equivalences might also make it easier to encode determiner-specific preferences, such as that of each for wide scope. A referee points out that the lack of any explicit ordering of application of equivalences makes one natural way of doing this unavailable. But I am not convinced that this would have been the right way in any case. These preferences are just that, not hard and fast rules, so we need to be able to permit all permutations where the context, or the structure,
een below, we need in any case something like the pair quantifier notation of Dalrymple, Shieber, and Pereira (1991), which would also solve this problem. With this addition we are able to produce both scopings for examples like: (20) Every manager in some company disappeared. This is a rather oversimplified treatment of quantifier scope, which we will refine a little shortly, but even as it stands the treatment has several advantages: • in classic examples like: (21) Every representative in a company saw most samples. only the available five relative scopings of the quantifiers are produced (Hobbs and Shieber 1987, 47), but without the need for a free variable constraint—the HOU algorithm will not produce any solutions in which a previously bound variable becomes free; • the equivalences are reversible, and thus the above sentences cart be generated from scoped logical forms; • partial scopings are permitted (see Reyle [19961) • scoping can be freely interleaved with other types of reference resolution; • unscoped or partially scoped forms are available for inference or for generation at every stage. 3.6 Comparison with Deductive Interpretation It is interesting to compare this analysis with that descr
straint—the HOU algorithm will not produce any solutions in which a previously bound variable becomes free; • the equivalences are reversible, and thus the above sentences cart be generated from scoped logical forms; • partial scopings are permitted (see Reyle [19961) • scoping can be freely interleaved with other types of reference resolution; • unscoped or partially scoped forms are available for inference or for generation at every stage. 3.6 Comparison with Deductive Interpretation It is interesting to compare this analysis with that described in Dalrymple, Shieber, and Pereira (1991) and Pereira (1990, 1991). Recall that in their treatment, quantified noun phrases are treated in two stages: firstly, what they call a &quot;free variable&quot; of type e is introduced in the NP position, with an associated &quot;quantifier assumption,&quot; which is added as a kind of premise. At a later stage the quantifier assumption is &quot;discharged,&quot; capturing all occurrences of the free variable. Thus their analysis of something like every manager disappeared would proceed as follows: every manager --= every(x,manager(x)) x disappeared disappear every manager disappeared every(x,manager(x)) disappear(x) - discharge the assump
forall(C--and(manager(C),in(C,B)), D--exists1(E--pos(pres(own(E,D,A))))))), no The missing combination which is correctly excluded is every - a - some. Clearly, these are small beginnings. But this small scale implementation demonstrates that the approach is computationally viable in principle. Issues to do with how to scale up to wider coverage are addressed later. 5. Comparison with Alternative Approaches 5.1 Core Language Engine Quasi-Logical Form The starting point for the approach followed here was a dissatisfaction with certain aspects of the theory of quasi-logical form as described in Alshawi (1990, 1992), and implemented in SRI's Core Language Engine (CLE). In the CLE-QLF approach, as ra519 Computational Linguistics Volume 26, Number 4 tionally reconstructed by Alshawi and Crouch (1992) and Crouch and Putman (1994), the context-independent meaning of a sentence is given by one or more QLFs that are built directly from syntactic and semantic rules. Just as here, these QLFs represent the basic predicate argument structure of the sentence, and contain constructs which represent those aspects of the meaning of the sentence that are dependent on context. The effects of contextual resolution
nnings. But this small scale implementation demonstrates that the approach is computationally viable in principle. Issues to do with how to scale up to wider coverage are addressed later. 5. Comparison with Alternative Approaches 5.1 Core Language Engine Quasi-Logical Form The starting point for the approach followed here was a dissatisfaction with certain aspects of the theory of quasi-logical form as described in Alshawi (1990, 1992), and implemented in SRI's Core Language Engine (CLE). In the CLE-QLF approach, as ra519 Computational Linguistics Volume 26, Number 4 tionally reconstructed by Alshawi and Crouch (1992) and Crouch and Putman (1994), the context-independent meaning of a sentence is given by one or more QLFs that are built directly from syntactic and semantic rules. Just as here, these QLFs represent the basic predicate argument structure of the sentence, and contain constructs which represent those aspects of the meaning of the sentence that are dependent on context. The effects of contextual resolution are uniformly represented via the instantiation of metavariables. This instantiation is brought about by the operation of resolution rules, which are essentially user-defined Prolog predicates
erm(q,every,+1,philosopher), term(chsome,+2,book)) RQLF = L+1,+2]:like(term(q,every,+1,philosopher), term(q,some,+2,book)) % every some ... [+2,+1]:1ike(term(q,every,+1,philosopher), term(q,some,+2,book)) % some ... every ... The denotational semantics of RQLF structures involving instantiated scope and referent metavariables is given in terms of simple interpretation rules that have the effect of interpreting the quantifiers as having the scopes indicated by the lists of indices, and the pronouns as having the interpretation of the instantiation of the metavariable (in these cases at least). Alshawi and Crouch (1992) present an illustrative first-order fragment along these lines and are able to supply a coherent formal semantics for the CLF-QLFs themselves, using a technique essentially equivalent to supervaluations: a QLF is true iff all its possible RQLFs are, false iff they are all false, and undefined otherwise. There are many good things about this approach. It has proved itself amenable to a large-scale implementation of impressive coverage, generality, and relative efficiency (Alsha.wi 1992). It has the theoretically desirable property of monotonicity and, 520 Pulman Bidirectional Contextual Resolu
lication system in a context-dependent way quite difficult: rather than being related to an RQLF, this output has to be related to a QLF that is sufficiently instantiated for a contextually unambiguous sentence to be generated from it. The resolution mechanism is not intended to be reversible, although by redefining resolution rules, reversibility is achievable to some extent within the limitations just discussed (Hurst 1994). A third problem arises with the approach to the semantics of QLFs that this notion of the relationship between QLF and RQLF encourages one to adopt: it is that taken by Alshawi and Crouch (1992). This describes the semantics of QLFs via a supervaluation over the semantics of the RQLFs that they subsume. Although the problem does not arise for the simple fragment they illustrate there, if their approach were extended to cover a wider range of constructions, it would be found that many QLFs subsumed RQLFs that are not actually permitted by the resolution rules: for example, those that can only arise via a violation of scoping or binding constraints. The role of resolution rules (for perfectly good presentational reasons) is completely ignored by their treatment. However, it is really t
rtial orders of scoping relations. Secondly, it should be able in effect to emulate the DRT treatment of donkey sentences (p. 243) (a somewhat parochial requirement, given that the case is not yet closed on whether this treatment is correct: see Elworthy [19951, among others). Thirdly, the theory should not need anything like the free variable constraint. 526 Pulman Bidirectional Contextual Resolution Clearly, UDRS meets these requirements, as does our own QLF-based approach. There are some similarities between the UDRS and the glue language approaches, as detailed in Crouch and van Geriabith (1997). There are also some differences: unlike our approach, or the glue language approach, UDRS does not have the problem of how to represent the meaning of quantified NPs as things of different type at different levels. However, it achieves this at the cost of not representing the meanings of quantified NPs as independent units at all: determiner and restriction are separate components that have no close connection to each other until the inclusion constraints are imposed. It remains to be seen whether this unconstrained approach to semantic assembly can be implemented on a large scale, given tha
s of the utterance support both of these contexts. To summarize, on our theory, if we interpret as logical equivalence, then we are committed to the claim that no utterance (where the context is fully specified) is truly ambiguous. (This does not entail that particular speakers must be able to fully resolve all utterances.) That is to say, there must be some feature of the form and content of the utterance, or the context in which it is produced, that exclude all but one of the possible interpretations. 6.2 Truth and Consequence In van Deemter (1996), van Eijck and Jaspars (1996), and Jaspars (1997), criteria for a notion of ambiguous consequence are outlined. In the following, R1 and Rz are (all) the resolutions of Q, and is an ambiguous consequence relation. We can summarize these requirements as follows: Q k, RI or R2 Ri and R2 Q Q ja -R1 Or -7R2 -,R1 and -,R2 =a -Q Q Ri and R2 Ri or R2 Q and -,R2 -,E.1 or -1R2 -Q If an ambiguous expression is true then at least one of its readings is true (1). But the stronger version, that all readings are true, is not plausible (5). This would mean that any expression with mutually contradictory readings would lead to inconsistency. (The CLE-QLF su
find complete grammatical analyses for every sentence, let alone full contextual interpretations, information extraction proceeds by reasoning from partial or underspecified representations that are in most logical respects the same kind of animal as the unresolved QLFs we have been talking about. Information extraction systems typically carry out such reasoning in a way that is, in Jerry Hobbs' phrase, unhindered by theory. Developing a calculus for reasoning with QLFs is too large a task to be undertaken here. But the general outlines are reasonably clear, and we can adapt some of the UDRS (Reyle 1995) work to our own framework. Reyle points out that many of the inferences involving underspecified representations that we would like to capture rely on the assumption that whatever context disambiguates the premise also disambiguates the conclusion, even if we do not know what that context or disambiguation is. His example is: If the students get £10 then they buy books. The students get .£10. They buy books. Our treatment of the interpretation of QLFs makes it a tautology that if one resolved form implies another, then the corresponding QLFs also do, given a fixed context. The other common pa
tion in the fully general case, because it is quite conceivable that lexical disambiguation could require some contextual disambiguation first. Likewise, many PP attachment decisions have to be made on contextual grounds. There are several stategies that might be pursued. One is to adopt Pinkal's &quot;radical underspecification&quot; approach (Pirikal 1995) and use underspecified representations for all types of ambiguity, even syntactic ambiguity. The more conservative approach is to try to integrate existing statistical disambiguation schemes for QLFs, either individually or in a &quot;packed&quot; structure (Alshawi and Carter 1994), with the resolution process as described here. Alternatively, I believe it is worth exploring the approach to disambiguation described in Pulman (2000), which would mesh nicely with the theory presented here. Efficiency. Extending coverage of linguistic constructs, and trying to achieve robustness or integrate with disambiguation schemes each pose the further problem of the efficiency of the HOLT-based resolution process itself. While efficiency is acceptable for the short, simple sentences illustrated earlier, the computational properties of HOU mean that processing times increase in a high
