{"algorithms":{"#text":"\n","@version":"110505","algorithm":[{"#tail":"\n","@name":"SectLabel","#text":"\n","@version":"110505","variant":{"@no":"0","figure":[{"#tail":"\n","@confidence":"0.746973846153846","#text":"\nNovelle, a collaborative open source writing tool software\nFederico Gobbo\nDICOM\n21100, Insubria University\nVarese, Italy\nfederico.gobbo@uninsubria.it\nMichele Chinosi\nDICOM\n21100, Insubria University\nVarese, Italy\nmichele.chinosi@gmail.com\nMassimiliano Pepe\nDICOM\n"},{"#tail":"\n","@confidence":"0.968635142857143","#text":"\ncreation\na very old\nversion\nthe document\nhistory timeline\nan old\nversion\nthe current\nversion\nthe last\nversion\na restorean edit\ndestruction\nsandbox\n"},{"#tail":"\n","@confidence":"0.962963636363636","#text":"\ncreation\nthe document\nhistory timeline\nan old\nversion\nthe current\nversion\ncreation of a\nderivative work\na new document\nhistory timeline\n"},{"#tail":"\n","@confidence":"0.917625625","#text":"\nthe document\nhistory timeline\nthe current\nversion\nan other document\nhistory timeline\na freezed quotation\ntransclusion\n"},{"#tail":"\n","@confidence":"0.946381272727273","#text":"\nthe document\nhistory timeline\nan old\nversion\nan other document\nhistory timeline\nan up-to-date\nquotation\ntransclusion\nthe current\nversion\n"},{"#tail":"\n","@confidence":"0.966996","#text":"\nAJAX\nRuby on Rails\nRDBMS\nXML\nDBMS / Filesystem\nGUI\n"}],"subsectionHeader":[{"#tail":"\n","@confidence":"0.94981","#text":"\n1.2 Known problems\n"},{"#tail":"\n","@confidence":"0.98311","#text":"\n2.1 The Problem of Ownership\n"},{"#tail":"\n","@confidence":"0.999654","#text":"\n2.2 The Representation of Context\n"},{"#tail":"\n","@confidence":"0.971384","#text":"\n2.3 Contents and the Typology of Links\n"},{"#tail":"\n","@confidence":"0.997232","#text":"\n3.1 XML repository\n"},{"#tail":"\n","@confidence":"0.991299","#text":"\n3.2 eXtensible Markup Language\n"},{"#tail":"\n","@confidence":"0.994385","#text":"\n3.3 Ruby on Rails\n"},{"#tail":"\n","@confidence":"0.998741","#text":"\n3.4 Asyncronous Javascript And XML\n"},{"#tail":"\n","@confidence":"0.980064","#text":"\n3.5 Access points\n"}],"@confidence":"0.000158","#tail":"\n","reference":{"#tail":"\n","@confidence":"0.999318642857143","#text":"\nRoland Barthes. 1970. S/Z. Editions du Seuil, Paris.\nTim Berners-Lee. 1999. Weaving the Web. Harper,\nSan Francisco.\nJay David Bolter. 1991. Writing Space: the Computer,\nHypertext, and the History of Writing. Erlbaum As-\nsociates, Hillsdale, N.J.\nRonald Bourret. 2006. XML Database Products. Url:\nhttp://www.rpbourret.com/xml/. Retrieved the 3rd\nof January.\nBuilder library.for example 2006. Project: Builder.\nProvide a simple way to create XML markup and\ndata structures. Url: http://builder.rubyforege.org/.\nRetrieved the 4th of January.\nTony Buzan and Barry Buzan. 2000. The Mind Map\nBook. BBC Worldwide Limited, London.\nWard Cunningham and Bo Leuf. 2001. The Wiki Way\n- Quick Collaboration on the Web. Addison-Wesley,\nBoston.\nEastgate 2005. Storyspace. Url:\nhttp://www.eastgate.com/storyspace. Retrieved\nthe 31st of December.\nEastgate 2006. Tinderbox. Url:\nhttp://www.eastgate.com/tinderbox. Retrieved\nthe 2nd of January.\nUmberto Eco. 1962. Opera aperta. Bompiani, Milan,\nItaly.\nElizabeth L. Eisenstein. 1983. The Printing Revolu-\ntion in Early Modern Europe. Cambridge Univer-\nsity Press, Cambridge, UK.\nJesse James Garrett. 2005. Ajax: A New\nApproach to Web Applications. Url:\nhttp://www.adaptivepath.com/publications/essays/\n/archives/000385.php. Retrieved the 22nd of\nDecember.\nGblog 2.0. 2005. Gblog 2.0. Blog, reloaded. Url:\nhttp://gblog.com/. Retrieved the 27th of December.\nGdiff/Gpatch library. 2005. Gdiff/Gpatch. An\nimplementation of the W3C gdiff protocol. Url:\nhttp://ruby.brian-schroeder.de/gdiff/. Retrieved the\n28th of December.\nGeorge P. Landow 1994. Hypertext 2.0. The Conver-\ngence of Contemporary Critical Theory and Tech-\nnology. The Johns Hopkins University Press, Balti-\nmore, Maryland.\nLawrence Lessig 2004. Free Culture: How Big Media\nUses Technology and the Law to Lock Down Culture\nand Control Creativity. Penguin Books.\nScott McCloud. 2001. Understanding Comics. Para-\ndox Press, NY.\nLaurie McNeill. 2005. Genre Under Construction:\nThe Diary on the Internet. Language@Internet, 1.\nJoerg Mueller. 2000. FreeMind. Url:\nhttp://freemind.sourceforge.net. Retrieved the\n31st of December 2005.\nTheodor Holm Nelson. 1992. Literary Machines 90.0.\nMuzzio, Padua, Italy.\nJoseph Donald Novak. 1998. Learning, Creating,\nand Using Knowledge: Concept Maps As Facilita-\ntive Tools in Schools and Corporations. Lawrence\nErlbaum Associates.\nOzone Database Project. 2006. Ozone Database\nProject open initative. Url: http://ozone-db.org/. Re-\ntrieved the 03rd of January.\nRuby on Rails. 2006. Ruby on Rails.\nWeb developement that doesn?t hurt. Url:\nhttp://www.rubyonrails.org/. Retrieved the 03rd of\nJanuary.\nRichard M. Stallman. 2001. Free Software, Free Soci-\nety: Selected Essays of Richard M. Stallman. GNU\nPress, Cambridge, Massachusetts.\nSigmar-Olaf Tergan and Tanja Kellers. 2005. Knowl-\nedge And Information Visualization: Searching for\nSynergies. Springer, Berlin.\nDave Thomas and David Heinemeier Hansson. 2005.\nAgile Web Development with Rails - A pragmatic\nguide. Pragmatic Bookshelf.\nWikipedia. 2005. Wikipedia. From\nWikipedia, the free encyclopedia. Url:\nhttp://en.wikipedia.org/wiki/Wikipedia. Retrieved\nthe 31st of December.\nXML, eXtensible Markup Language. 2005.\nExtensible Markup Language (XML). Url:\nhttp://www.w3.org/XML/. Retrieved the 27th\nof December.\n"},"bodyText":[{"#tail":"\n","@confidence":"0.990586","#text":"\nIn this paper we discuss the notions of hy-\npertext, blog, wiki and cognitive mapping\nin order to find a solution to the main prob-\nlems of processing text data stored in these\nforms. We propose the structure and archi-\ntecture of Novelle as a new environment\nto compose texts. Its flexible model al-\nlows the collaboration for contents and a\ndetailed description of ownership. Data\nare stored in a XML repository, so as to\nuse the capabilities of this language. To\ndevelop quickly and efficiently we choose\nAJAX technology over the Ruby on Rails\nframework.\n"},{"#tail":"\n","@confidence":"0.988021239130435","#text":"\nComputational linguists are facing the explosion\nof new forms of writing as a mass phenomenon.\nTelling personal and collaborative stories throught\nweb technologies is known under the etiquettes of\n?blog? and ?wiki?. It therefore brings new chal-\nlenges to the field of natural language processing.\nWe are trying to address them by rendering explic-\nitly the structure of these new forms of text in a\nway suitable for linguistic computation. In order\nto do so, we are building an open source writing\ntool software, called Novelle.\n1.1 Hypertext as a New Writing Space\nBolter (1991) was the first scholar who stressed\nthe impact of the digital revolution to the medium\nof writing. Terms as ?chapter?, ?page? or ?foot-\nnote? simply become meaningless in the new texts,\nor they highly change their meaning. When\nGutenberg invented the printing press and Aldo\nManuzio invented the book as we know it, new\nforms of writings arose. For example, when books\nshouldn?t be copied by hand any longer, authors\ntook the advantage and start writing original books\nand evaluation ? i.e. literary criticism ? unlike in\nthe previous times (Eisenstein, 1983). Nowadays\nthe use of computers for writing has drammati-\ncally changed, expecially after their interconnec-\ntion via the internet, since at least the foundation\nof the web (Berners-Lee, 1999). For example, a\n?web page? is more similar to an infinite canvas\nthan a written page (McCloud, 2001). Moreover,\nwhat seems to be lost is the relations, like the tex-\nture underpinning the text itself. From a positive\npoint of view these new forms of writing may real-\nize the postmodernist and decostructionist dreams\nof an ?opera aperta? (open work), as Eco would\ndefine it (1962). From a more pessimistic one, an\nauthor may feel to have lost power in this open-\nness. Henceforth the collaborative traits of blogs\nand wikis (McNeill, 2005) emphasize annotation,\ncomment, and strong editing. They give more\npower to readers, eventually filling the gap - the\nso-called active readers become authors as well.\nThis situation could make new problems rise up:\nWho owns the text? Which role is suitable for au-\nthors? We have to analyse them before presenting\nthe architecture of Novelle.\n"},{"#tail":"\n","@confidence":"0.991543555555555","#text":"\nIt is certainly true that wikis and blogs are new\nforms of text. It is also true that we have already\nmet these problems in the first form of purely dig-\nital texts ? hypertexts. Now we are facing the\nsame question during processing texts in blogs and\nwikis. We consider hypertexts as parents of blogs\nand wikis. Our aim is to use the analysis of hyper-\ntexts for interesting insights, useful for blogs and\nwikis too.\n"},{"#tail":"\n","@confidence":"0.999188736842105","#text":"\nFollowing the example of Landow (1994), we\nwill call the autonomous units of a hypertext lex-\nias (from ?lexicon?), a word coined by Roland\nBarthes (1970). Consequently, a hypertext is a set\nof lexias. In hypertexts transitions from one lexia\nto another are not necessarily sequential, but nav-\nigational. The main problems of hypertexts, ac-\nknowledged since the beginning, have been traced\nas follows (Nelson, 1992):\n? The framing problem, i.e. creating arbitrary\nclosed contexts of very large document col-\nlections. When extracting sub-collections,\nsome links may be cut off.\n? Comparing complex alternatives, i.e. to get\nparallel or alternate versions of the same doc-\nument in a simple and effective way, one of\nthe main goal of Xanadu, the ultimate ?global\nhypertext? dreamt by Nelson.\n? Typology of links, i.e. when links become too\nmany, we need a typology for links, avoiding\nconfusion to the reader/author.\n? Version control, as the system should keep\ntrack of the history of every document, sav-\ning differences and pointing out correspon-\ndencies.\nWe take from wikis the concept of document\nhistory and its consequences. We consider it as a\ngood approximation of the ?version control? con-\ncept as shown above.\nIn wikis every document keeps track of its own\nhistory: creating a document means to start a his-\ntory, editing a document to move ahead, restoring\nto move back onto the history timeline, destroying\na document to stop the history itself. Moreover,\na sandbox is a temporary view of a document it-\nself - i.e. a sandbox can not cause a change in the\nhistory (Cunningham and Leuf, 2001). Figure 1\nshows the model.\n"},{"#tail":"\n","@confidence":"0.988463285714286","#text":"\nHistory snapshots of the timeline may be con-\nsidered as permanent views, i.e. views with a\ntimestamp. Consequently, except in the case of\nsandboxes, every change in the document cannot\nbe erased. This model will have a strong impact\non the role of links and on the underpinning struc-\nture of Novelle itself.\n"},{"#tail":"\n","@confidence":"0.999673826086957","#text":"\nOur aim is to create an open source hypertext mod-\neling software, called Novelle. ?Novelle? is an Ital-\nian old-fashioned word meaning ?novels?, and in\nGerman it means ?novel? too. It resembles the En-\nglish word ?novel? and the French word ?nuovelle?.\nWe believe that this name is clearly understable to\nevery people educated in a European-based cul-\nture, and this is why we have chosen it.\nThe emphasis on narrativity takes into account\nthe use of blogs as public diaries on the web, that\nis still the main current interpretation of this lit-\nerary genre, or metagenre (McNeill, 2005). Fur-\nthermore we noticed that blogs and wikis are cur-\nrently subjected to osmosis, because they have in\ncommon the underlying core technology. So blogs\nare a literary metagenre which started as authored\npersonal diaries or journals. Now they try to col-\nlect themselves in so-called ?blogspheres?. On the\nother side, wikis started as collective works where\neach entry is not owned by a single author - e.g.\nWikipedia (2005). Now personal wiki tools are\narising for brainstorming and mind mapping. See\nSection 4 for further aspects.\n"},{"#tail":"\n","@confidence":"0.999462705882353","#text":"\nThe main difference between blogs and wikis is\nin the ownership of documents. Most blogs fol-\nlow the annotation model, where a single lexia is\ncentral and the others are comments, sometimes\nin threads. Every lexia is authored and changes\nare minimal. People prefer commenting instead of\nediting. The paradigm is ?write once, read many?.\nOn the contrary, in wikis no lexia is authored\nand there is no hierarchy between lexias. In fact\na document is still a set of lexias, but every docu-\nment is only the set of historical versions of the\ndocument itself. Generally, people avoid com-\nmenting, preferring to edit each document. The\nparadigm is ?write many, read many? (Cunning-\nham and Leuf, 2001).\nWe believe that ownership has an important role\nand we do not want to force our users to take a\n"},{"#tail":"\n","@confidence":"0.998289571428571","#text":"\nnon-attributive copyright licence to their work. We\nconsider the Creative Commons model as the most\nsuitable one to let each author choose the rights\nto reserve (Lessig, 2004). Narrative writings or\nessays are creative works and they generally treat\nownership as authorship, even for the most enthu-\nsiastic fellows of free culture (Stallman, 2001).\n"},{"#tail":"\n","@confidence":"0.991239321428572","#text":"\nIn the structure of Novelle we are trying to retain\nauthorship and the core concept of document his-\ntory of wikis through a typology of links, taking\nwhat we consider the best of the two worlds of\nblogs and wikis.\nIn Novelle each user owns his own lexias, and\nthe relations between them, i.e. links. Further-\nmore authors are free to read and to link other\nusers? lexias. In other words, each user does per-\nmit everyone to link its own lexias for free, at the\ncondition that the others do the same. Every user\nmay recall the link list on each element (e.g. a sin-\ngle word) of his lexias at every time, but he can not\ndestroy them. Lexias may be commented by every\nuser, but the author may retain for himself the right\nto edit. This decision has to be taken when a lexia\nis created.\nIf a user lets others edit some lexias, he has the\nright to retain or refuse the attribution when other\nusers have edited it. In the first instance, the edited\nversion simply moves ahead the document history.\nIn the second one, the last user, who has edited the\nlexia, may claim the attribution for himself. The\nlexia will be marked as a derivative work from the\noriginal one, and a new document history time-\nline will start (see Figure 2). Authors may choose\nthis right with the No-Deriv option of the Creative\nCommons licences (Lessig, 2004).\n"},{"#tail":"\n","@confidence":"0.987699","#text":"\nIf nobody claims the document for himself, it\nwill fall in the public domain. The set of lexias in\nthe public domain will form a special document,\nowned by a special user, called Public Domain. If\nthe author refuses the permission to create deriva-\ntive works, i.e. to edit his own lexias, users still\nhave the right to comment the author?s work. So\nas to come to terms with this idea, we need a con-\ncept invented by Nelson (1992), i.e. transclusion.\n"},{"#tail":"\n","@confidence":"0.9786684375","#text":"\nRather than copy-and-paste contents from a\nlexia, a user may recall a quotation of the au-\nthor?s lexia and write a comment in the surround-\nings. In doing so, the link list of the author?s\nlexia will be updated with a special citation link\nmarker, called quotation link (see later for details).\nUsually, the quotation will be ?frozen?, as in the\nmoment where it was transcluded (see Figure 3).\nConsequently the transclusion resembles a copied-\nand-pasted text chunk, but the link to the original\ndocument will always be consistent, i.e. neither it\nexpires nor it returns an error. Otherwise the user\nwho has transcluded the quotation may choose to\nkeep updated the links to the original document.\nThis choice has to be made when the transclusion\nis done.\n"},{"#tail":"\n","@confidence":"0.992604666666667","#text":"\nIf so, the transcluded quotation will update au-\ntomatically, following the history timeline of the\noriginal document. For example, if the original\n"},{"#tail":"\n","@confidence":"0.986764666666667","#text":"\ndocument changes topic from stars to pentagons,\nthe quotation transcluded will change topic too\n(see Figure 4).\n"},{"#tail":"\n","@confidence":"0.998729931818182","#text":"\nFollowing our model of ownership, there are at\nleast two categories of links: shallow links and\ndeep links. By shallow links we mean visual links\noccurring in a single canvas, usually owned by the\nsame author. These will represent iconically the\nrelationship space of lexias, as explained by Mc-\nCloud, talking about web comics (2001). They are\nparticularly useful when comparing parallel ver-\nsions of the same text, e.g. digital variants (see\nConclusions).\nWe consider a web page, or better a web can-\nvas, as a view of lexias, i.e. a group of lexias and\ntheir relations visually shown with shallow links.\nA set of lexias is a document. Every author has the\nright to decide the relation type of a set of lexias,\ni.e. to form a document. A document can also be\nconsidered as a collection of history timelines, i.e.\nthe set of related lexias and their versions. The set\nof documents is the docuverse, a word coined by\nNelson (1992). We use the word docuverse, un-\nlikely the original sense, with the meaning of a set\nof documents owned by a single author.\nEvery document can be viewed within a web\ncanvas, but users may click on a deep link and\nso change view. With deep links we mean links\nwhich let the user change view, i.e. rearrange el-\nements in the web canvas for revealing shallow\nlinks between lexias, belonging to the same docu-\nment or not. Therefore a web canvas may show re-\nlations between views owned by different authors.\nWe consider quotation links, i.e. links created by\ntransclusion, as a special kind of deep links. Au-\nthors may create specific views adding labels to\nlinks. The set of labels will form a typology of\nlinks, customized by every user and even shared,\non demand of users? desires.\nWith our typology of links, we aim to solve the\nframing problem as defined in Section 1.2. We\nwant to model views as dynamic objects - the cre-\nation of context will be still arbitrary, but changes\nare very easily. We would also provide a user\nfacility for choosing the right licence for every\nlexia, following the model of Creative Commons\nlicences (Lessig, 2004).\n"},{"#tail":"\n","@confidence":"0.9986554","#text":"\nWe have considered many hypotheses in order to\nchoose a first layer architecture to save a reposi-\ntory. We used a multi-tier model based on XML.\nOur idea is based on merging together some of the\nmost common design techniques used in blogs and\nwikis. Recently previous implementation tech-\nniques have been studied from their new aspects to\nfind innovative web technologies. A basic scheme\nof Novelle architecture is presented in Figure 5.\nThe first layer is the most important. It is based on\n"},{"#tail":"\n","@confidence":"0.999470952380952","#text":"\nan infrastructure for storing effectively data repos-\nitory in order to obtain the best performances. We\nhave studied two alternatives for the repository.\nOn one side we have different techniques to map\nXML trees onto a database management system.\nOn the other side we may map XML trees directly\non a filesystem ? see below for details.\nThe second layer is represented by XML. Mes-\nsages, data and metadata are exchanged between\nlayers using the capability of this language. This\nallows to treat data and metadata on different level\nof abstraction.\nThe Ruby on Rails (2006) framework permits\nus to quickly develop web applications without\nrewriting common functions and classes.\nWe used the Asyncronous Javascript And XML\n(or AJAX) paradigm to create the graphical user\ninterface. AJAX function lets the communication\nworks asyncronously between a client and a server\nthrough a set of messages based on HTTP protocol\nand XML (Garrett, 2005).\n"},{"#tail":"\n","@confidence":"0.997101333333333","#text":"\nWe chose to use XML trees to store together data,\nmetadata, messages and their meanings because it\nhas some benefits. The most important is storing\n"},{"#tail":"\n","@confidence":"0.991695659793814","#text":"\nXML data. The other benefits of a native XML so-\nlution are: the storing without mapping your XML\nto some other data structure like objects, classes or\ntables; the neatness of the structure; the underly-\ning technology from the abstract layer to the phys-\nical ones is based on a unique standard, widely ac-\ncepted by the community. Data may be entered\nand retrieved as XML. Another advantage is flexi-\nbility, gained through the semi-structured nature of\nXML and the schema independent model used by\nmost of native XML databases. This is especially\nvaluable when you have very complex XML struc-\ntures that would be difficult or impossible to map\nto a more structured database. At this time there\nare not XML databases so stable to be used into\nproject of this kind.\nXindice (developed by Apache Group) proved\nbetter than others. Apache Xindice is a database\ndesigned from the ground up to store XML data\nor what is more commonly referred to as a native\nXML database. It stores short XML documents\nin collections with runtime generation of indexes.\nUnfortunately Xindice seems not to have been de-\nveloped any more since April 2004.\nAnother native XML database, more usable and\nsupported, is eXist. eXist is growing quickly and it\nimplements some functionalities of Xindice. The\nstandards support is not completed and some func-\ntions are currently being rewritten directly embed-\nded into the software. After doing many tests on it,\nit reveals worse performances with respect to other\nplatforms, even if it is more complete in compari-\nson to the others.\nAnyway our interest keeps focusing on them\nwaiting for the first stable release effectively us-\nable in Novelle. We have considered the possi-\nbility to map XML trees to relational or object-\noriented database management systems that sup-\nport XML. We can map directly an XML tree into\na memory tree structure, made up with classes and\nobjects, with object-oriented databases, as we can\nsee in Ozone project (2006). The last stable ver-\nsion of Ozone was released in 2004. The main\nproblem with Ozone - and with others OODBMS\n- is the overhead requested to the memory for\nstoring a complex tree. On the other side, many\nRDBMS with XML support map directly an XML\ntree to an entity-relationship schema. In some in-\nstances XML trees are stored as Binary Large Ob-\nject, or BLOB, into one big table. In other situ-\nations XML trees are parsed, splitted and finally\nstored in tables where attributes have the same\nnames than XML nodes.\nRonald Bourret (2006) mantains and updates a\nvery comprehensive list of native XML databases\non his web site.\nWhile we are waiting for a native XML\ndatabase stable and useful for our project, we have\ndecided to get inspiration from the common idea\nused in many blogs and wikis. Most of these archi-\ntectures are used to store messages in a structure\nthat is similar to a directory tree saved on filesys-\ntem. Often this idea is only developed to present to\nusers messages organized in collection ordered by\ntime (e.g. blogs), but all the platforms are based\non RDBMS. We have found in our research only\none other project in which messages are stored di-\nrectly on filesystem: the Gblog project (Gblog,\n2005). Nobody usually adopt this solution because\nthe security of the web site is less strong. In or-\nder to represent messages archives the most com-\nmon structure is the triple ../year/month/day/... In\nour assumption, a message is a history. There-\nfore a structure of this kind works very well with\nour idea. We are going to build a filesystem time-\nbased structure in which we can directly map our\nmessages i.e. our histories. This structure is also a\ntree. We can write also an XML document that\nmantains an architecture scheme with some in-\ndexes to speed up queries. Moreover, we store\nwith a message another XML document represent-\ning all the past history (i.e. the paths) of the mes-\nsage.\nSo as to sum up, every time a user stores a\nmessage, he has to save the first XML document\nwith the message, then saves or updates a second\nXML document representing its past history and\nfinally saves or updates a third XML message with\nfilesystem directory tree. The overhead on band-\nwith and net speed of this solution does not let\nusers notice significant differences, even though it\nis necessary to grant writing permissions to every-\none on the entire repository. Having a native XML\ndatabase will give the advantage of saving XML\ndocuments in a rapid, neat and indicized way, in\norder to be able to execute efficient queries on the\nrepository.\n"},{"#tail":"\n","@confidence":"0.998584","#text":"\nWe chose XML as language and meta-language\nbecause we needed to be able to save messages\nwith their meanings. Every lexia is saved with\n"},{"#tail":"\n","@confidence":"0.986891363636363","#text":"\nsome tags and attributes which describe its mean-\ning. The possibility of storing separately data from\ntheir representations lets a system access more\nquickly to a data and extract the requested infor-\nmation. XML is a W3C standard and this makes\nour project ready to be changed and extended, as\nwell as to be connected with other applications and\nservices (XML, 2005). XML will be used to rep-\nresent data, metadata, link typing, messages and\npaths map, and to exchange messages betweeen\ndifferent layers.\n"},{"#tail":"\n","@confidence":"0.997538318181818","#text":"\nRuby on Rails, or RoR, is a framework rich in ex-\ntensions and libraries with licences suitable for our\nusage, in particular XML Builder and gdiff/gpatch.\nThe first library offers a set of classes which allows\nto generate XML code in a simple way (Builder,\n2006). Gdiff/gpatch library is an implementation\nof the gdiff protocol, that creates a patch from two\nfiles and then a new file from one of the previ-\nous files and the patch (Gdiff, 2005). Using this\nlibrary we are going to be able to store the his-\ntory and the last version in an easy way and sav-\ning space. Creating a document is therefore a se-\nquence of patches. Storing works in the same way,\nthat is executing a gdiff protocol and storing the\nnew patch. Moving across the document history\nmeans retrieving a number of patch commands un-\ntil you reach the desired version of the document.\nRuby on Rails does not support native XML\ndatabases at this time, therefore in our architec-\nture there will be provisionally a relational DBMS\ndedicated to RoR, which had no problem with a\nfilesystem repository.\n"},{"#tail":"\n","@confidence":"0.9872924375","#text":"\nAJAX is not a technology in itself but a term that\nrefers to the use of a group of technologies to-\ngether, in particular Javascript and XML. In other\nwords AJAX is a web development technique for\ncreating interactive web applications using a com-\nbination of XHTML and CSS, Document Ob-\nject Model (or DOM), the XMLHTTPRequest ob-\nject (Wikipedia, 2005).\nAJAX paradigm has been recently defined,\nwhen someone has rediscovered a simple func-\ntion originally developed by Microsoft as ActiveX\ncontrol. This function, named XMLHTTPRequest\nlets clients ask servers for some particular data\nusing asyncronous handshake. In this way users\ncan continue using web application (typically fill-\ning web forms) while the client and the server\nexchange data and messages. Other developers\nhave published a concurrent version of this func-\ntion for other browsers than Internet Explorer,\nlike Mozilla/Gecko, Opera and Safari. The web\npages builded with this technology give the im-\npression to have dynamic content. Important ex-\namples builded with AJAX paradigm are Gmail by\nGoogle, Writely, Kiko, Webnote, Meebo. Using\nAJAX to develop web applications and web ser-\nvices needs some attention. First of all Javascript\nmust not be disabled in browsers. It is also neces-\nsary to pay attention to estimate correctly the time\nspent in exchanging messages between client and\nserver so to exploit the good capabilities gained\nwith AJAX, fully supported by and integrated in\nRuby on Rails.\n"},{"#tail":"\n","@confidence":"0.999006866666667","#text":"\nWe are going to add to every view of Novelle a\nsearch engine that returns a list of meanings and\na set of link between them. These links are rep-\nresented in our project with images. Every image\nis itself a map that the user can surf and/or open\nto increase details level. When the user has found\nthe message, he can access to it simply clicking\non it. An user can comment or modify every lexia,\nif these actions are granted by the original author,\nas explained above. Users can create new links\nbetween lexias and they can describe what kind\nof link they intend to create through appropriate\nlink type. These modifications are stored using the\ndocument history model of Novelle through fol-\nlowing patch.\n"},{"#tail":"\n","@confidence":"0.997704","#text":"\nThe main source of Novelle are wikis and blogs.\nWhile wikis have spread from a detailed de-\nsign (Cunningham and Leuf, 2001), unfortunately\nblogs have not been designed under a model.\nSo we have tested and compared the most used\ntools available for blogging: Bloggers, WordPress,\nMovableType and LiveJournal.\nGenerally speaking, we find that the personal\npublic diary metaphor behind blogs (McNeill,\n2005) may bring to an unsatisfactory representa-\ntion of the context. The only way to retrieve infor-\nmation is through a search engine or a calendar,\ni.e. the date of the ?post? ? a lexia in the jargon of\nbloggers.\nMoreover, we use some new web applications\n"},{"#tail":"\n","@confidence":"0.997905581395349","#text":"\nto take and share notes or to browser everyone?s\nbookmarks, e.g. del.icio.us. Mostly, these web\napplications oriented to writing give a strong em-\nphasis on collaboration and sharing. This led us\nto rethink ownership and to use the Creative Com-\nmons model to design the contents of Novelle.\nFinally, we noticed that personal wikis are\nused for storing cognitive maps of individuals\nand brainstorming. This use was already thought\nby the founders of wikis (Cunningham and Leuf,\n2001), but it has not been widely explored in prac-\ntics, as far as the authors know. However, this di-\nrection of work is not actually new - concept and\nmind mapping, the two main paradigms for cogni-\ntive maps, have been used for several years.\nConcept mapping has been used at least in ed-\nucation for over thirty years, in particular at the\nCornell University, where Piaget?s ideas gave the\nroots to the assimilation theory by David Ausubel.\nVery briefly, concept maps show the relationships\nbetween concepts labelling both nodes and arcs.\nEvery arc always has a definite direction, i.e. arcs\nare arrows (Novak, 1998).\nIn contrast, mind maps spread from a centre,\nwith branches radiating out. Furthermore, mind\nmaps, as thought and copyrighted by Tony Buzan,\ncan label only nodes, not arcs. The resulting\nshape of mind maps is sometimes similar to neu-\nrons? (Buzan, 2000).\nWe have tested both concept and mind mapping\nsoftware tools, available for free or in a trial pe-\nriod. In particular, CmapTools software is cur-\nrently used at the Cornell University and it is free\nas a client. It may run on CmapServers, and it is\na very good way to share the knowledge stored in\ncognitive maps. Unfortunately, it does not collect\ndata in a format suitable for the web, and it does\nnot permit to view concepts across cognitive maps\nowned by different users (Tergan, 2005). More,\nconcept maps require a learning curve very high\nwhen started to be used, at least in our experience.\nOn the contrary, mind maps are by far more intu-\nitive.\nThere are a lot of mind mapping tools, which\nare clones of MindJet MindManager, the official\nsoftware for Buzan?s mind mapping. The mind\nmapping tool we were looking for should have had\nan open source licence, used a format for data stor-\nage suitable for the web, and been cross-platform.\nIn fact, Freemind, as the closest approximation of\nour needs (Mueller, 2000), succeeded in running\non the three major operating systems available,\nwithout sensible differences.\nFigure 6: Our free mind map for Novelle\nEven if we like the idea behind mind maps, we\nneed to have a multiauthored environment, where\narcs may be labeled. In other terms, the centre\nof the map should change according to the user?s\ndesire. That is why we thought about web canvas\nas document views. If we consider documents as\nfree mind maps, the nodes will be lexias and the\narcs will be links.\nApart from wikis, blogs, and cognitive map-\nping, we were also inspired by the experiences of\nearly hypertext writing tools, in particular Inter-\nmedia and Storyspace. In fact, they were used\nexpecially in academic writing with some suc-\ncess. Intermedia is no more developed and no-\nbody of us had the opportunity to try it (Landow,\n1994). Storyspace is currently distributed by East-\ngate (2005), and we have used it for a time. How-\never, in our opinion Storyspace is a product of its\ntime and in fact it isn?t a web application. Al-\nthough it is possible to label links, it lacks a lot\nof features we need. Moreover, no hypertext writ-\ning tool available is released under an open source\nlicence. We hope that Novelle will bridge this gap\n- we will choose the exact licence when our first\npublic release is ready.\nWe are persuaded that there is no contradiction\nin collaborative mind mapping and academic writ-\ning. Maybe it is not by chance that Eastgate has\nalso released a ?personal content management as-\nsistant? (Eastgate, 2006). Our purpose is to bring\nback again collaborative writing and free brain-\nstorming, as it should be.\n"},{"#tail":"\n","@confidence":"0.999764714285714","#text":"\nWe are currently developing a prototype of Nov-\nelle. We argue that the model under Novelle would\nbe an explicit representation of the context and a\nclear model for the contents. One of the main ap-\nplication of our software is natural language pro-\ncessing. We are going to test it expecially on digi-\ntal variants of literary texts.\n"},{"#tail":"\n","@confidence":"0.931848","#text":"\nWe want to acknowledge Dr. Marco Benini,\nDr. Alberto Trombetta for their deep insights and\nGabriella Canciani for having reviewed the final\ndraft of this paper.\n"}],"#text":"\n","affiliation":{"#tail":"\n","@confidence":"0.452064","#text":"\n21100, Insubria University\nVarese, Italy\n"},"sectionHeader":[{"#tail":"\n","@confidence":"0.98446","@genericHeader":"abstract","#text":"\nAbstract\n"},{"#tail":"\n","@confidence":"0.998155","@genericHeader":"introduction","#text":"\n1 Introduction\n"},{"#tail":"\n","@confidence":"0.970893","@genericHeader":"method","#text":"\n2 The Structure of Novelle\n"},{"#tail":"\n","@confidence":"0.987496","@genericHeader":"method","#text":"\n3 The Architecture of Novelle\n"},{"#tail":"\n","@confidence":"0.999213","@genericHeader":"method","#text":"\n4 Related Works\n"},{"#tail":"\n","@confidence":"0.994002","@genericHeader":"evaluation","#text":"\n5 Conclusions and Further Works\n"},{"#tail":"\n","@confidence":"0.909057","@genericHeader":"conclusions","#text":"\nAcknoweledgements\n"},{"#tail":"\n","@confidence":"0.948505","@genericHeader":"references","#text":"\nReferences\n"}],"page":[{"#tail":"\n","@confidence":"0.989369","#text":"\n40\n"},{"#tail":"\n","@confidence":"0.998754","#text":"\n41\n"},{"#tail":"\n","@confidence":"0.993975","#text":"\n42\n"},{"#tail":"\n","@confidence":"0.999355","#text":"\n43\n"},{"#tail":"\n","@confidence":"0.99368","#text":"\n44\n"},{"#tail":"\n","@confidence":"0.985586","#text":"\n45\n"},{"#tail":"\n","@confidence":"0.992257","#text":"\n46\n"},{"#tail":"\n","@confidence":"0.999133","#text":"\n47\n"}],"figureCaption":[{"#tail":"\n","@confidence":"0.999945","#text":"\nFigure 1: The document history model\n"},{"#tail":"\n","@confidence":"0.997735","#text":"\nFigure 2: How to create derivative works\n"},{"#tail":"\n","@confidence":"0.999702","#text":"\nFigure 3: How transclusion works\n"},{"#tail":"\n","@confidence":"0.999905","#text":"\nFigure 4: An up-to-date transclusion\n"},{"#tail":"\n","@confidence":"0.999206","#text":"\nFigure 5: Novelle: multi-tier architecture\n"}],"email":{"#tail":"\n","@confidence":"0.966133","#text":"\nmassimiliano.p@gmail.com\n"}}},{"#tail":"\n","@name":"ParsHed","#text":"\n","@version":"110505","variant":{"@confidence":"0.254043","#tail":"\n","@no":"0","address":[{"#tail":"\n","@confidence":"0.997909","#text":"Varese, Italy"},{"#tail":"\n","@confidence":"0.970233","#text":"Varese, Italy"},{"#tail":"\n","@confidence":"0.972308","#text":"Varese, Italy"}],"#text":"\n","affiliation":[{"#tail":"\n","@confidence":"0.8544165","#text":"DICOM 21100, Insubria University"},{"#tail":"\n","@confidence":"0.856118","#text":"DICOM 21100, Insubria University"},{"#tail":"\n","@confidence":"0.840197","#text":"DICOM 21100, Insubria University"}],"author":[{"#tail":"\n","@confidence":"0.999978","#text":"Federico Gobbo"},{"#tail":"\n","@confidence":"0.999738","#text":"Michele Chinosi"},{"#tail":"\n","@confidence":"0.999739","#text":"Massimiliano Pepe"}],"abstract":{"#tail":"\n","@confidence":"0.982955933333334","#text":"In this paper we discuss the notions of hypertext, blog, wiki and cognitive mapping in order to find a solution to the main problems of processing text data stored in these forms. We propose the structure and architecture of Novelle as a new environment to compose texts. Its flexible model allows the collaboration for contents and a detailed description of ownership. Data are stored in a XML repository, so as to use the capabilities of this language. To develop quickly and efficiently we choose AJAX technology over the Ruby on Rails framework."},"title":{"#tail":"\n","@confidence":"0.999705","#text":"Novelle, a collaborative open source writing tool software"},"email":[{"#tail":"\n","@confidence":"0.999048","#text":"federico.gobbo@uninsubria.it"},{"#tail":"\n","@confidence":"0.999867","#text":"michele.chinosi@gmail.com"},{"#tail":"\n","@confidence":"0.999861","#text":"massimiliano.p@gmail.com"}]}},{"#tail":"\n","@name":"ParsCit","#text":"\n","@version":"110505","citationList":{"#tail":"\n","#text":"\n","citation":[{"#tail":"\n","date":{"#tail":"\n","#text":"1970"},"rawString":{"#tail":"\n","#text":"Roland Barthes. 1970. S/Z. Editions du Seuil, Paris. Tim Berners-Lee. 1999. Weaving the Web. Harper, San Francisco."},"#text":"\n","marker":{"#tail":"\n","#text":"Barthes, 1970"},"location":{"#tail":"\n","#text":"Paris. Tim Berners-Lee."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":" architecture of Novelle. 1.2 Known problems It is certainly true that wikis and blogs are new forms of text. It is also true that we have already met these problems in the first form of purely digital texts ? hypertexts. Now we are facing the same question during processing texts in blogs and wikis. We consider hypertexts as parents of blogs and wikis. Our aim is to use the analysis of hypertexts for interesting insights, useful for blogs and wikis too. 40 Following the example of Landow (1994), we will call the autonomous units of a hypertext lexias (from ?lexicon?), a word coined by Roland Barthes (1970). Consequently, a hypertext is a set of lexias. In hypertexts transitions from one lexia to another are not necessarily sequential, but navigational. The main problems of hypertexts, acknowledged since the beginning, have been traced as follows (Nelson, 1992): ? The framing problem, i.e. creating arbitrary closed contexts of very large document collections. When extracting sub-collections, some links may be cut off. ? Comparing complex alternatives, i.e. to get parallel or alternate versions of the same document in a simple and effective way, one of the main goal of Xanadu, the ultimate ?globa","@endWordPosition":"604","@position":"3688","annotationId":"T1","@startWordPosition":"603","@citStr":"Barthes (1970)"}},"title":{"#tail":"\n","#text":"Weaving the Web. Harper,"},"booktitle":{"#tail":"\n","#text":"S/Z. Editions du Seuil,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Roland Barthes"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1991"},"rawString":{"#tail":"\n","#text":"Jay David Bolter. 1991. Writing Space: the Computer, Hypertext, and the History of Writing. Erlbaum Associates, Hillsdale, N.J. Ronald Bourret. 2006. XML Database Products. Url: http://www.rpbourret.com/xml/. Retrieved the 3rd of January."},"#text":"\n","marker":{"#tail":"\n","#text":"Bolter, 1991"},"location":{"#tail":"\n","#text":"Hillsdale, N.J. Ronald Bourret."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"y on Rails framework. 1 Introduction Computational linguists are facing the explosion of new forms of writing as a mass phenomenon. Telling personal and collaborative stories throught web technologies is known under the etiquettes of ?blog? and ?wiki?. It therefore brings new challenges to the field of natural language processing. We are trying to address them by rendering explicitly the structure of these new forms of text in a way suitable for linguistic computation. In order to do so, we are building an open source writing tool software, called Novelle. 1.1 Hypertext as a New Writing Space Bolter (1991) was the first scholar who stressed the impact of the digital revolution to the medium of writing. Terms as ?chapter?, ?page? or ?footnote? simply become meaningless in the new texts, or they highly change their meaning. When Gutenberg invented the printing press and Aldo Manuzio invented the book as we know it, new forms of writings arose. For example, when books shouldn?t be copied by hand any longer, authors took the advantage and start writing original books and evaluation ? i.e. literary criticism ? unlike in the previous times (Eisenstein, 1983). Nowadays the use of computers for writing","@endWordPosition":"228","@position":"1479","annotationId":"T2","@startWordPosition":"227","@citStr":"Bolter (1991)"}},"title":{"#tail":"\n","#text":"Writing Space: the Computer, Hypertext, and the History of Writing. Erlbaum Associates,"},"booktitle":{"#tail":"\n","#text":"XML Database Products. Url: http://www.rpbourret.com/xml/. Retrieved the 3rd of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Jay David Bolter"}}},{"#tail":"\n","date":{"#tail":"\n"},"rawString":{"#tail":"\n","#text":"Builder library.for example 2006. Project: Builder. Provide a simple way to create XML markup and data structures. Url: http://builder.rubyforege.org/. Retrieved the 4th of January."},"#text":"\n","marker":{"#tail":"\n"},"title":{"#tail":"\n","#text":"Builder library.for example 2006. Project: Builder. Provide a simple way to create XML markup and data structures."},"booktitle":{"#tail":"\n","#text":"Url: http://builder.rubyforege.org/. Retrieved the 4th of"},"@valid":"true"},{"#tail":"\n","date":{"#tail":"\n","#text":"2000"},"rawString":{"#tail":"\n","#text":"Tony Buzan and Barry Buzan. 2000. The Mind Map Book. BBC Worldwide Limited, London."},"#text":"\n","marker":{"#tail":"\n","#text":"Buzan, Buzan, 2000"},"location":{"#tail":"\n","#text":"London."},"booktitle":{"#tail":"\n","#text":"The Mind Map Book. BBC Worldwide Limited,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Tony Buzan"},{"#tail":"\n","#text":"Barry Buzan"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2001"},"rawString":{"#tail":"\n","#text":"Ward Cunningham and Bo Leuf. 2001. The Wiki Way - Quick Collaboration on the Web. Addison-Wesley, Boston."},"#text":"\n","marker":{"#tail":"\n","#text":"Cunningham, Leuf, 2001"},"publisher":{"#tail":"\n","#text":"Addison-Wesley,"},"location":{"#tail":"\n","#text":"Boston."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" the history of every document, saving differences and pointing out correspondencies. We take from wikis the concept of document history and its consequences. We consider it as a good approximation of the ?version control? concept as shown above. In wikis every document keeps track of its own history: creating a document means to start a history, editing a document to move ahead, restoring to move back onto the history timeline, destroying a document to stop the history itself. Moreover, a sandbox is a temporary view of a document itself - i.e. a sandbox can not cause a change in the history (Cunningham and Leuf, 2001). Figure 1 shows the model. creation a very old version the document history timeline an old version the current version the last version a restorean edit destruction sandbox Figure 1: The document history model History snapshots of the timeline may be considered as permanent views, i.e. views with a timestamp. Consequently, except in the case of sandboxes, every change in the document cannot be erased. This model will have a strong impact on the role of links and on the underpinning structure of Novelle itself. 2 The Structure of Novelle Our aim is to create an open source hypertext modeling ","@endWordPosition":"845","@position":"5123","annotationId":"T3","@startWordPosition":"842","@citStr":"Cunningham and Leuf, 2001"},{"#tail":"\n","#text":" of documents. Most blogs follow the annotation model, where a single lexia is central and the others are comments, sometimes in threads. Every lexia is authored and changes are minimal. People prefer commenting instead of editing. The paradigm is ?write once, read many?. On the contrary, in wikis no lexia is authored and there is no hierarchy between lexias. In fact a document is still a set of lexias, but every document is only the set of historical versions of the document itself. Generally, people avoid commenting, preferring to edit each document. The paradigm is ?write many, read many? (Cunningham and Leuf, 2001). We believe that ownership has an important role and we do not want to force our users to take a 41 non-attributive copyright licence to their work. We consider the Creative Commons model as the most suitable one to let each author choose the rights to reserve (Lessig, 2004). Narrative writings or essays are creative works and they generally treat ownership as authorship, even for the most enthusiastic fellows of free culture (Stallman, 2001). 2.2 The Representation of Context In the structure of Novelle we are trying to retain authorship and the core concept of document history of wikis thro","@endWordPosition":"1247","@position":"7493","annotationId":"T4","@startWordPosition":"1243","@citStr":"Cunningham and Leuf, 2001"},{"#tail":"\n","#text":"the user can surf and/or open to increase details level. When the user has found the message, he can access to it simply clicking on it. An user can comment or modify every lexia, if these actions are granted by the original author, as explained above. Users can create new links between lexias and they can describe what kind of link they intend to create through appropriate link type. These modifications are stored using the document history model of Novelle through following patch. 4 Related Works The main source of Novelle are wikis and blogs. While wikis have spread from a detailed design (Cunningham and Leuf, 2001), unfortunately blogs have not been designed under a model. So we have tested and compared the most used tools available for blogging: Bloggers, WordPress, MovableType and LiveJournal. Generally speaking, we find that the personal public diary metaphor behind blogs (McNeill, 2005) may bring to an unsatisfactory representation of the context. The only way to retrieve information is through a search engine or a calendar, i.e. the date of the ?post? ? a lexia in the jargon of bloggers. Moreover, we use some new web applications 45 to take and share notes or to browser everyone?s bookmarks, e.g. d","@endWordPosition":"4039","@position":"23653","annotationId":"T5","@startWordPosition":"4036","@citStr":"Cunningham and Leuf, 2001"}]},"title":{"#tail":"\n","#text":"The Wiki Way - Quick Collaboration on the Web."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Ward Cunningham"},{"#tail":"\n","#text":"Bo Leuf"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Eastgate 2005. Storyspace. Url: http://www.eastgate.com/storyspace. Retrieved the 31st of December."},"#text":"\n","marker":{"#tail":"\n","#text":"2005"},"location":{"#tail":"\n","#text":"Eastgate"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"phasis on narrativity takes into account the use of blogs as public diaries on the web, that is still the main current interpretation of this literary genre, or metagenre (McNeill, 2005). Furthermore we noticed that blogs and wikis are currently subjected to osmosis, because they have in common the underlying core technology. So blogs are a literary metagenre which started as authored personal diaries or journals. Now they try to collect themselves in so-called ?blogspheres?. On the other side, wikis started as collective works where each entry is not owned by a single author - e.g. Wikipedia (2005). Now personal wiki tools are arising for brainstorming and mind mapping. See Section 4 for further aspects. 2.1 The Problem of Ownership The main difference between blogs and wikis is in the ownership of documents. Most blogs follow the annotation model, where a single lexia is central and the others are comments, sometimes in threads. Every lexia is authored and changes are minimal. People prefer commenting instead of editing. The paradigm is ?write once, read many?. On the contrary, in wikis no lexia is authored and there is no hierarchy between lexias. In fact a document is still a set of ","@endWordPosition":"1107","@position":"6666","annotationId":"T6","@startWordPosition":"1107","@citStr":"(2005)"},{"#tail":"\n","#text":"entre of the map should change according to the user?s desire. That is why we thought about web canvas as document views. If we consider documents as free mind maps, the nodes will be lexias and the arcs will be links. Apart from wikis, blogs, and cognitive mapping, we were also inspired by the experiences of early hypertext writing tools, in particular Intermedia and Storyspace. In fact, they were used expecially in academic writing with some success. Intermedia is no more developed and nobody of us had the opportunity to try it (Landow, 1994). Storyspace is currently distributed by Eastgate (2005), and we have used it for a time. However, in our opinion Storyspace is a product of its time and in fact it isn?t a web application. Although it is possible to label links, it lacks a lot of features we need. Moreover, no hypertext writing tool available is released under an open source licence. We hope that Novelle will bridge this gap - we will choose the exact licence when our first public release is ready. We are persuaded that there is no contradiction in collaborative mind mapping and academic writing. Maybe it is not by chance that Eastgate has also released a ?personal content managem","@endWordPosition":"4684","@position":"27424","annotationId":"T7","@startWordPosition":"4684","@citStr":"(2005)"}]},"booktitle":{"#tail":"\n","#text":"Storyspace. Url: http://www.eastgate.com/storyspace. Retrieved the 31st of"},"@valid":"true"},{"#tail":"\n","date":{"#tail":"\n","#text":"2006"},"rawString":{"#tail":"\n","#text":"Eastgate 2006. Tinderbox. Url: http://www.eastgate.com/tinderbox. Retrieved the 2nd of January."},"#text":"\n","marker":{"#tail":"\n","#text":"2006"},"location":{"#tail":"\n","#text":"Eastgate"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" 5: Novelle: multi-tier architecture an infrastructure for storing effectively data repository in order to obtain the best performances. We have studied two alternatives for the repository. On one side we have different techniques to map XML trees onto a database management system. On the other side we may map XML trees directly on a filesystem ? see below for details. The second layer is represented by XML. Messages, data and metadata are exchanged between layers using the capability of this language. This allows to treat data and metadata on different level of abstraction. The Ruby on Rails (2006) framework permits us to quickly develop web applications without rewriting common functions and classes. We used the Asyncronous Javascript And XML (or AJAX) paradigm to create the graphical user interface. AJAX function lets the communication works asyncronously between a client and a server through a set of messages based on HTTP protocol and XML (Garrett, 2005). 3.1 XML repository We chose to use XML trees to store together data, metadata, messages and their meanings because it has some benefits. The most important is storing 43 XML data. The other benefits of a native XML solution are: th","@endWordPosition":"2469","@position":"14544","annotationId":"T8","@startWordPosition":"2469","@citStr":"(2006)"},{"#tail":"\n","#text":"ng rewritten directly embedded into the software. After doing many tests on it, it reveals worse performances with respect to other platforms, even if it is more complete in comparison to the others. Anyway our interest keeps focusing on them waiting for the first stable release effectively usable in Novelle. We have considered the possibility to map XML trees to relational or objectoriented database management systems that support XML. We can map directly an XML tree into a memory tree structure, made up with classes and objects, with object-oriented databases, as we can see in Ozone project (2006). The last stable version of Ozone was released in 2004. The main problem with Ozone - and with others OODBMS - is the overhead requested to the memory for storing a complex tree. On the other side, many RDBMS with XML support map directly an XML tree to an entity-relationship schema. In some instances XML trees are stored as Binary Large Object, or BLOB, into one big table. In other situations XML trees are parsed, splitted and finally stored in tables where attributes have the same names than XML nodes. Ronald Bourret (2006) mantains and updates a very comprehensive list of native XML databa","@endWordPosition":"2885","@position":"17026","annotationId":"T9","@startWordPosition":"2885","@citStr":"(2006)"}]},"booktitle":{"#tail":"\n","#text":"Tinderbox. Url: http://www.eastgate.com/tinderbox. Retrieved the 2nd of"},"@valid":"true"},{"#tail":"\n","date":{"#tail":"\n","#text":"1962"},"rawString":{"#tail":"\n","#text":"Umberto Eco. 1962. Opera aperta. Bompiani, Milan, Italy."},"#text":"\n","marker":{"#tail":"\n","#text":"Eco, 1962"},"location":{"#tail":"\n","#text":"Opera aperta. Bompiani, Milan, Italy."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Umberto Eco"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1983"},"rawString":{"#tail":"\n","#text":"Elizabeth L. Eisenstein. 1983. The Printing Revolution in Early Modern Europe. Cambridge University Press, Cambridge, UK."},"#text":"\n","marker":{"#tail":"\n","#text":"Eisenstein, 1983"},"publisher":{"#tail":"\n","#text":"Cambridge University Press,"},"location":{"#tail":"\n","#text":"Cambridge, UK."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":" Novelle. 1.1 Hypertext as a New Writing Space Bolter (1991) was the first scholar who stressed the impact of the digital revolution to the medium of writing. Terms as ?chapter?, ?page? or ?footnote? simply become meaningless in the new texts, or they highly change their meaning. When Gutenberg invented the printing press and Aldo Manuzio invented the book as we know it, new forms of writings arose. For example, when books shouldn?t be copied by hand any longer, authors took the advantage and start writing original books and evaluation ? i.e. literary criticism ? unlike in the previous times (Eisenstein, 1983). Nowadays the use of computers for writing has drammatically changed, expecially after their interconnection via the internet, since at least the foundation of the web (Berners-Lee, 1999). For example, a ?web page? is more similar to an infinite canvas than a written page (McCloud, 2001). Moreover, what seems to be lost is the relations, like the texture underpinning the text itself. From a positive point of view these new forms of writing may realize the postmodernist and decostructionist dreams of an ?opera aperta? (open work), as Eco would define it (1962). From a more pessimistic one, an ","@endWordPosition":"320","@position":"2036","annotationId":"T10","@startWordPosition":"319","@citStr":"Eisenstein, 1983"}},"title":{"#tail":"\n","#text":"The Printing Revolution in Early Modern Europe."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Elizabeth L Eisenstein"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Jesse James Garrett. 2005. Ajax: A New Approach to Web Applications. Url: http://www.adaptivepath.com/publications/essays/ /archives/000385.php. Retrieved the 22nd of December."},"#text":"\n","marker":{"#tail":"\n","#text":"Garrett, 2005"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"for details. The second layer is represented by XML. Messages, data and metadata are exchanged between layers using the capability of this language. This allows to treat data and metadata on different level of abstraction. The Ruby on Rails (2006) framework permits us to quickly develop web applications without rewriting common functions and classes. We used the Asyncronous Javascript And XML (or AJAX) paradigm to create the graphical user interface. AJAX function lets the communication works asyncronously between a client and a server through a set of messages based on HTTP protocol and XML (Garrett, 2005). 3.1 XML repository We chose to use XML trees to store together data, metadata, messages and their meanings because it has some benefits. The most important is storing 43 XML data. The other benefits of a native XML solution are: the storing without mapping your XML to some other data structure like objects, classes or tables; the neatness of the structure; the underlying technology from the abstract layer to the physical ones is based on a unique standard, widely accepted by the community. Data may be entered and retrieved as XML. Another advantage is flexibility, gained through the semi-str","@endWordPosition":"2525","@position":"14911","annotationId":"T11","@startWordPosition":"2524","@citStr":"Garrett, 2005"}},"title":{"#tail":"\n","#text":"Ajax: A New Approach to Web Applications. Url: http://www.adaptivepath.com/publications/essays/ /archives/000385.php. Retrieved the 22nd of December."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Jesse James Garrett"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Gblog 2.0. 2005. Gblog 2.0. Blog, reloaded. Url: http://gblog.com/. Retrieved the 27th of December."},"#text":"\n","marker":{"#tail":"\n","#text":"Gblog, 2005"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"ses on his web site. While we are waiting for a native XML database stable and useful for our project, we have decided to get inspiration from the common idea used in many blogs and wikis. Most of these architectures are used to store messages in a structure that is similar to a directory tree saved on filesystem. Often this idea is only developed to present to users messages organized in collection ordered by time (e.g. blogs), but all the platforms are based on RDBMS. We have found in our research only one other project in which messages are stored directly on filesystem: the Gblog project (Gblog, 2005). Nobody usually adopt this solution because the security of the web site is less strong. In order to represent messages archives the most common structure is the triple ../year/month/day/... In our assumption, a message is a history. Therefore a structure of this kind works very well with our idea. We are going to build a filesystem timebased structure in which we can directly map our messages i.e. our histories. This structure is also a tree. We can write also an XML document that mantains an architecture scheme with some indexes to speed up queries. Moreover, we store with a message another","@endWordPosition":"3103","@position":"18238","annotationId":"T12","@startWordPosition":"3102","@citStr":"Gblog, 2005"}},"booktitle":{"#tail":"\n","#text":"Gblog 2.0. Blog, reloaded. Url: http://gblog.com/. Retrieved the 27th of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Gblog"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Gdiff/Gpatch library. 2005. Gdiff/Gpatch. An implementation of the W3C gdiff protocol. Url: http://ruby.brian-schroeder.de/gdiff/. Retrieved the 28th of December."},"#text":"\n","marker":{"#tail":"\n","#text":"library, 2005"},"title":{"#tail":"\n","#text":"Gdiff/Gpatch. An implementation of the W3C gdiff protocol."},"booktitle":{"#tail":"\n","#text":"Url: http://ruby.brian-schroeder.de/gdiff/. Retrieved the 28th of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"GdiffGpatch library"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1994"},"rawString":{"#tail":"\n","#text":"George P. Landow 1994. Hypertext 2.0. The Convergence of Contemporary Critical Theory and Technology. The Johns Hopkins University Press, Baltimore, Maryland."},"#text":"\n","marker":{"#tail":"\n","#text":"Landow, 1994"},"publisher":{"#tail":"\n","#text":"University Press,"},"location":{"#tail":"\n","#text":"Baltimore, Maryland."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ems rise up: Who owns the text? Which role is suitable for authors? We have to analyse them before presenting the architecture of Novelle. 1.2 Known problems It is certainly true that wikis and blogs are new forms of text. It is also true that we have already met these problems in the first form of purely digital texts ? hypertexts. Now we are facing the same question during processing texts in blogs and wikis. We consider hypertexts as parents of blogs and wikis. Our aim is to use the analysis of hypertexts for interesting insights, useful for blogs and wikis too. 40 Following the example of Landow (1994), we will call the autonomous units of a hypertext lexias (from ?lexicon?), a word coined by Roland Barthes (1970). Consequently, a hypertext is a set of lexias. In hypertexts transitions from one lexia to another are not necessarily sequential, but navigational. The main problems of hypertexts, acknowledged since the beginning, have been traced as follows (Nelson, 1992): ? The framing problem, i.e. creating arbitrary closed contexts of very large document collections. When extracting sub-collections, some links may be cut off. ? Comparing complex alternatives, i.e. to get parallel or alternat","@endWordPosition":"584","@position":"3574","annotationId":"T13","@startWordPosition":"583","@citStr":"Landow (1994)"},{"#tail":"\n","#text":"d environment, where arcs may be labeled. In other terms, the centre of the map should change according to the user?s desire. That is why we thought about web canvas as document views. If we consider documents as free mind maps, the nodes will be lexias and the arcs will be links. Apart from wikis, blogs, and cognitive mapping, we were also inspired by the experiences of early hypertext writing tools, in particular Intermedia and Storyspace. In fact, they were used expecially in academic writing with some success. Intermedia is no more developed and nobody of us had the opportunity to try it (Landow, 1994). Storyspace is currently distributed by Eastgate (2005), and we have used it for a time. However, in our opinion Storyspace is a product of its time and in fact it isn?t a web application. Although it is possible to label links, it lacks a lot of features we need. Moreover, no hypertext writing tool available is released under an open source licence. We hope that Novelle will bridge this gap - we will choose the exact licence when our first public release is ready. We are persuaded that there is no contradiction in collaborative mind mapping and academic writing. Maybe it is not by chance tha","@endWordPosition":"4676","@position":"27368","annotationId":"T14","@startWordPosition":"4675","@citStr":"Landow, 1994"}]},"title":{"#tail":"\n","#text":"Hypertext 2.0. The Convergence of Contemporary Critical Theory and Technology. The Johns Hopkins"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"George P Landow"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2004"},"rawString":{"#tail":"\n","#text":"Lawrence Lessig 2004. Free Culture: How Big Media Uses Technology and the Law to Lock Down Culture and Control Creativity. Penguin Books."},"#text":"\n","marker":{"#tail":"\n","#text":"Lessig, 2004"},"publisher":{"#tail":"\n","#text":"Penguin Books."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" in wikis no lexia is authored and there is no hierarchy between lexias. In fact a document is still a set of lexias, but every document is only the set of historical versions of the document itself. Generally, people avoid commenting, preferring to edit each document. The paradigm is ?write many, read many? (Cunningham and Leuf, 2001). We believe that ownership has an important role and we do not want to force our users to take a 41 non-attributive copyright licence to their work. We consider the Creative Commons model as the most suitable one to let each author choose the rights to reserve (Lessig, 2004). Narrative writings or essays are creative works and they generally treat ownership as authorship, even for the most enthusiastic fellows of free culture (Stallman, 2001). 2.2 The Representation of Context In the structure of Novelle we are trying to retain authorship and the core concept of document history of wikis through a typology of links, taking what we consider the best of the two worlds of blogs and wikis. In Novelle each user owns his own lexias, and the relations between them, i.e. links. Furthermore authors are free to read and to link other users? lexias. In other words, each use","@endWordPosition":"1296","@position":"7769","annotationId":"T15","@startWordPosition":"1295","@citStr":"Lessig, 2004"},{"#tail":"\n","#text":" right to edit. This decision has to be taken when a lexia is created. If a user lets others edit some lexias, he has the right to retain or refuse the attribution when other users have edited it. In the first instance, the edited version simply moves ahead the document history. In the second one, the last user, who has edited the lexia, may claim the attribution for himself. The lexia will be marked as a derivative work from the original one, and a new document history timeline will start (see Figure 2). Authors may choose this right with the No-Deriv option of the Creative Commons licences (Lessig, 2004). creation the document history timeline an old version the current version creation of a derivative work a new document history timeline Figure 2: How to create derivative works If nobody claims the document for himself, it will fall in the public domain. The set of lexias in the public domain will form a special document, owned by a special user, called Public Domain. If the author refuses the permission to create derivative works, i.e. to edit his own lexias, users still have the right to comment the author?s work. So as to come to terms with this idea, we need a concept invented by Nelson ","@endWordPosition":"1572","@position":"9295","annotationId":"T16","@startWordPosition":"1571","@citStr":"Lessig, 2004"},{"#tail":"\n","#text":"ks, i.e. links created by transclusion, as a special kind of deep links. Authors may create specific views adding labels to links. The set of labels will form a typology of links, customized by every user and even shared, on demand of users? desires. With our typology of links, we aim to solve the framing problem as defined in Section 1.2. We want to model views as dynamic objects - the creation of context will be still arbitrary, but changes are very easily. We would also provide a user facility for choosing the right licence for every lexia, following the model of Creative Commons licences (Lessig, 2004). 3 The Architecture of Novelle We have considered many hypotheses in order to choose a first layer architecture to save a repository. We used a multi-tier model based on XML. Our idea is based on merging together some of the most common design techniques used in blogs and wikis. Recently previous implementation techniques have been studied from their new aspects to find innovative web technologies. A basic scheme of Novelle architecture is presented in Figure 5. The first layer is the most important. It is based on AJAX Ruby on Rails RDBMS XML DBMS / Filesystem GUI Figure 5: Novelle: multi-ti","@endWordPosition":"2269","@position":"13359","annotationId":"T17","@startWordPosition":"2268","@citStr":"Lessig, 2004"}]},"title":{"#tail":"\n","#text":"Free Culture: How Big Media Uses Technology and the Law to Lock Down Culture and Control Creativity."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Lawrence Lessig"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2001"},"rawString":{"#tail":"\n","#text":"Scott McCloud. 2001. Understanding Comics. Paradox Press, NY."},"#text":"\n","marker":{"#tail":"\n","#text":"McCloud, 2001"},"publisher":{"#tail":"\n","#text":"Paradox Press,"},"location":{"#tail":"\n","#text":"NY."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"erg invented the printing press and Aldo Manuzio invented the book as we know it, new forms of writings arose. For example, when books shouldn?t be copied by hand any longer, authors took the advantage and start writing original books and evaluation ? i.e. literary criticism ? unlike in the previous times (Eisenstein, 1983). Nowadays the use of computers for writing has drammatically changed, expecially after their interconnection via the internet, since at least the foundation of the web (Berners-Lee, 1999). For example, a ?web page? is more similar to an infinite canvas than a written page (McCloud, 2001). Moreover, what seems to be lost is the relations, like the texture underpinning the text itself. From a positive point of view these new forms of writing may realize the postmodernist and decostructionist dreams of an ?opera aperta? (open work), as Eco would define it (1962). From a more pessimistic one, an author may feel to have lost power in this openness. Henceforth the collaborative traits of blogs and wikis (McNeill, 2005) emphasize annotation, comment, and strong editing. They give more power to readers, eventually filling the gap - the so-called active readers become authors as well.","@endWordPosition":"367","@position":"2325","annotationId":"T18","@startWordPosition":"366","@citStr":"McCloud, 2001"}},"title":{"#tail":"\n","#text":"Understanding Comics."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Scott McCloud"}}},{"volume":{"#tail":"\n","#text":"1"},"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Laurie McNeill. 2005. Genre Under Construction: The Diary on the Internet. Language@Internet, 1."},"journal":{"#tail":"\n","#text":"Language@Internet,"},"#text":"\n","marker":{"#tail":"\n","#text":"McNeill, 2005"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" via the internet, since at least the foundation of the web (Berners-Lee, 1999). For example, a ?web page? is more similar to an infinite canvas than a written page (McCloud, 2001). Moreover, what seems to be lost is the relations, like the texture underpinning the text itself. From a positive point of view these new forms of writing may realize the postmodernist and decostructionist dreams of an ?opera aperta? (open work), as Eco would define it (1962). From a more pessimistic one, an author may feel to have lost power in this openness. Henceforth the collaborative traits of blogs and wikis (McNeill, 2005) emphasize annotation, comment, and strong editing. They give more power to readers, eventually filling the gap - the so-called active readers become authors as well. This situation could make new problems rise up: Who owns the text? Which role is suitable for authors? We have to analyse them before presenting the architecture of Novelle. 1.2 Known problems It is certainly true that wikis and blogs are new forms of text. It is also true that we have already met these problems in the first form of purely digital texts ? hypertexts. Now we are facing the same question during processing texts in ","@endWordPosition":"442","@position":"2759","annotationId":"T19","@startWordPosition":"441","@citStr":"McNeill, 2005"},{"#tail":"\n","#text":" itself. 2 The Structure of Novelle Our aim is to create an open source hypertext modeling software, called Novelle. ?Novelle? is an Italian old-fashioned word meaning ?novels?, and in German it means ?novel? too. It resembles the English word ?novel? and the French word ?nuovelle?. We believe that this name is clearly understable to every people educated in a European-based culture, and this is why we have chosen it. The emphasis on narrativity takes into account the use of blogs as public diaries on the web, that is still the main current interpretation of this literary genre, or metagenre (McNeill, 2005). Furthermore we noticed that blogs and wikis are currently subjected to osmosis, because they have in common the underlying core technology. So blogs are a literary metagenre which started as authored personal diaries or journals. Now they try to collect themselves in so-called ?blogspheres?. On the other side, wikis started as collective works where each entry is not owned by a single author - e.g. Wikipedia (2005). Now personal wiki tools are arising for brainstorming and mind mapping. See Section 4 for further aspects. 2.1 The Problem of Ownership The main difference between blogs and wiki","@endWordPosition":"1037","@position":"6246","annotationId":"T20","@startWordPosition":"1036","@citStr":"McNeill, 2005"},{"#tail":"\n","#text":"s and they can describe what kind of link they intend to create through appropriate link type. These modifications are stored using the document history model of Novelle through following patch. 4 Related Works The main source of Novelle are wikis and blogs. While wikis have spread from a detailed design (Cunningham and Leuf, 2001), unfortunately blogs have not been designed under a model. So we have tested and compared the most used tools available for blogging: Bloggers, WordPress, MovableType and LiveJournal. Generally speaking, we find that the personal public diary metaphor behind blogs (McNeill, 2005) may bring to an unsatisfactory representation of the context. The only way to retrieve information is through a search engine or a calendar, i.e. the date of the ?post? ? a lexia in the jargon of bloggers. Moreover, we use some new web applications 45 to take and share notes or to browser everyone?s bookmarks, e.g. del.icio.us. Mostly, these web applications oriented to writing give a strong emphasis on collaboration and sharing. This led us to rethink ownership and to use the Creative Commons model to design the contents of Novelle. Finally, we noticed that personal wikis are used for storin","@endWordPosition":"4080","@position":"23934","annotationId":"T21","@startWordPosition":"4079","@citStr":"McNeill, 2005"}]},"title":{"#tail":"\n","#text":"Genre Under Construction: The Diary on the Internet."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Laurie McNeill"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2000"},"rawString":{"#tail":"\n","#text":"Joerg Mueller. 2000. FreeMind. Url: http://freemind.sourceforge.net. Retrieved the 31st of December 2005."},"#text":"\n","marker":{"#tail":"\n","#text":"Mueller, 2000"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"t permit to view concepts across cognitive maps owned by different users (Tergan, 2005). More, concept maps require a learning curve very high when started to be used, at least in our experience. On the contrary, mind maps are by far more intuitive. There are a lot of mind mapping tools, which are clones of MindJet MindManager, the official software for Buzan?s mind mapping. The mind mapping tool we were looking for should have had an open source licence, used a format for data storage suitable for the web, and been cross-platform. In fact, Freemind, as the closest approximation of our needs (Mueller, 2000), succeeded in running on the three major operating systems available, without sensible differences. Figure 6: Our free mind map for Novelle Even if we like the idea behind mind maps, we need to have a multiauthored environment, where arcs may be labeled. In other terms, the centre of the map should change according to the user?s desire. That is why we thought about web canvas as document views. If we consider documents as free mind maps, the nodes will be lexias and the arcs will be links. Apart from wikis, blogs, and cognitive mapping, we were also inspired by the experiences of early hypert","@endWordPosition":"4532","@position":"26541","annotationId":"T22","@startWordPosition":"4531","@citStr":"Mueller, 2000"}},"booktitle":{"#tail":"\n","#text":"FreeMind. Url: http://freemind.sourceforge.net. Retrieved the 31st of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Joerg Mueller"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1992"},"rawString":{"#tail":"\n","#text":"Theodor Holm Nelson. 1992. Literary Machines 90.0. Muzzio, Padua, Italy."},"#text":"\n","marker":{"#tail":"\n","#text":"Nelson, 1992"},"location":{"#tail":"\n","#text":"Muzzio, Padua, Italy."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ring processing texts in blogs and wikis. We consider hypertexts as parents of blogs and wikis. Our aim is to use the analysis of hypertexts for interesting insights, useful for blogs and wikis too. 40 Following the example of Landow (1994), we will call the autonomous units of a hypertext lexias (from ?lexicon?), a word coined by Roland Barthes (1970). Consequently, a hypertext is a set of lexias. In hypertexts transitions from one lexia to another are not necessarily sequential, but navigational. The main problems of hypertexts, acknowledged since the beginning, have been traced as follows (Nelson, 1992): ? The framing problem, i.e. creating arbitrary closed contexts of very large document collections. When extracting sub-collections, some links may be cut off. ? Comparing complex alternatives, i.e. to get parallel or alternate versions of the same document in a simple and effective way, one of the main goal of Xanadu, the ultimate ?global hypertext? dreamt by Nelson. ? Typology of links, i.e. when links become too many, we need a typology for links, avoiding confusion to the reader/author. ? Version control, as the system should keep track of the history of every document, saving differences","@endWordPosition":"644","@position":"3947","annotationId":"T23","@startWordPosition":"643","@citStr":"Nelson, 1992"},{"#tail":"\n","#text":", 2004). creation the document history timeline an old version the current version creation of a derivative work a new document history timeline Figure 2: How to create derivative works If nobody claims the document for himself, it will fall in the public domain. The set of lexias in the public domain will form a special document, owned by a special user, called Public Domain. If the author refuses the permission to create derivative works, i.e. to edit his own lexias, users still have the right to comment the author?s work. So as to come to terms with this idea, we need a concept invented by Nelson (1992), i.e. transclusion. the document history timeline the current version an other document history timeline a freezed quotation transclusion Figure 3: How transclusion works Rather than copy-and-paste contents from a lexia, a user may recall a quotation of the author?s lexia and write a comment in the surroundings. In doing so, the link list of the author?s lexia will be updated with a special citation link marker, called quotation link (see later for details). Usually, the quotation will be ?frozen?, as in the moment where it was transcluded (see Figure 3). Consequently the transclusion resembl","@endWordPosition":"1680","@position":"9901","annotationId":"T24","@startWordPosition":"1679","@citStr":"Nelson (1992)"},{"#tail":"\n","#text":"ut web comics (2001). They are particularly useful when comparing parallel versions of the same text, e.g. digital variants (see Conclusions). We consider a web page, or better a web canvas, as a view of lexias, i.e. a group of lexias and their relations visually shown with shallow links. A set of lexias is a document. Every author has the right to decide the relation type of a set of lexias, i.e. to form a document. A document can also be considered as a collection of history timelines, i.e. the set of related lexias and their versions. The set of documents is the docuverse, a word coined by Nelson (1992). We use the word docuverse, unlikely the original sense, with the meaning of a set of documents owned by a single author. Every document can be viewed within a web canvas, but users may click on a deep link and so change view. With deep links we mean links which let the user change view, i.e. rearrange elements in the web canvas for revealing shallow links between lexias, belonging to the same document or not. Therefore a web canvas may show relations between views owned by different authors. We consider quotation links, i.e. links created by transclusion, as a special kind of deep links. Aut","@endWordPosition":"2065","@position":"12222","annotationId":"T25","@startWordPosition":"2064","@citStr":"Nelson (1992)"}]},"booktitle":{"#tail":"\n","#text":"Literary Machines 90.0."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Theodor Holm Nelson"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"1998"},"rawString":{"#tail":"\n","#text":"Joseph Donald Novak. 1998. Learning, Creating, and Using Knowledge: Concept Maps As Facilitative Tools in Schools and Corporations. Lawrence Erlbaum Associates."},"#text":"\n","marker":{"#tail":"\n","#text":"Novak, 1998"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"001), but it has not been widely explored in practics, as far as the authors know. However, this direction of work is not actually new - concept and mind mapping, the two main paradigms for cognitive maps, have been used for several years. Concept mapping has been used at least in education for over thirty years, in particular at the Cornell University, where Piaget?s ideas gave the roots to the assimilation theory by David Ausubel. Very briefly, concept maps show the relationships between concepts labelling both nodes and arcs. Every arc always has a definite direction, i.e. arcs are arrows (Novak, 1998). In contrast, mind maps spread from a centre, with branches radiating out. Furthermore, mind maps, as thought and copyrighted by Tony Buzan, can label only nodes, not arcs. The resulting shape of mind maps is sometimes similar to neurons? (Buzan, 2000). We have tested both concept and mind mapping software tools, available for free or in a trial period. In particular, CmapTools software is currently used at the Cornell University and it is free as a client. It may run on CmapServers, and it is a very good way to share the knowledge stored in cognitive maps. Unfortunately, it does not collect ","@endWordPosition":"4310","@position":"25274","annotationId":"T26","@startWordPosition":"4309","@citStr":"Novak, 1998"}},"title":{"#tail":"\n","#text":"Learning, Creating, and Using Knowledge: Concept Maps As Facilitative Tools in Schools and Corporations. Lawrence Erlbaum Associates."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Joseph Donald Novak"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2006"},"rawString":{"#tail":"\n","#text":"Ozone Database Project. 2006. Ozone Database Project open initative. Url: http://ozone-db.org/. Retrieved the 03rd of January."},"#text":"\n","marker":{"#tail":"\n","#text":"Project, 2006"},"booktitle":{"#tail":"\n","#text":"Ozone Database Project open initative. Url: http://ozone-db.org/. Retrieved the 03rd of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Ozone Database Project"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2006"},"rawString":{"#tail":"\n","#text":"Ruby on Rails. 2006. Ruby on Rails. Web developement that doesn?t hurt. Url: http://www.rubyonrails.org/. Retrieved the 03rd of January."},"#text":"\n","marker":{"#tail":"\n","#text":"Rails, 2006"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"Figure 5: Novelle: multi-tier architecture an infrastructure for storing effectively data repository in order to obtain the best performances. We have studied two alternatives for the repository. On one side we have different techniques to map XML trees onto a database management system. On the other side we may map XML trees directly on a filesystem ? see below for details. The second layer is represented by XML. Messages, data and metadata are exchanged between layers using the capability of this language. This allows to treat data and metadata on different level of abstraction. The Ruby on Rails (2006) framework permits us to quickly develop web applications without rewriting common functions and classes. We used the Asyncronous Javascript And XML (or AJAX) paradigm to create the graphical user interface. AJAX function lets the communication works asyncronously between a client and a server through a set of messages based on HTTP protocol and XML (Garrett, 2005). 3.1 XML repository We chose to use XML trees to store together data, metadata, messages and their meanings because it has some benefits. The most important is storing 43 XML data. The other benefits of a native XML solution are: th","@endWordPosition":"2469","@position":"14544","annotationId":"T27","@startWordPosition":"2468","@citStr":"Rails (2006)"}},"title":{"#tail":"\n","#text":"Ruby on Rails. Web developement that doesn?t hurt. Url: http://www.rubyonrails.org/. Retrieved the 03rd of January."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Ruby on Rails"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2001"},"rawString":{"#tail":"\n","#text":"Richard M. Stallman. 2001. Free Software, Free Society: Selected Essays of Richard M. Stallman. GNU Press, Cambridge, Massachusetts."},"#text":"\n","marker":{"#tail":"\n","#text":"Stallman, 2001"},"publisher":{"#tail":"\n","#text":"GNU Press,"},"location":{"#tail":"\n","#text":"Cambridge, Massachusetts."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"rsions of the document itself. Generally, people avoid commenting, preferring to edit each document. The paradigm is ?write many, read many? (Cunningham and Leuf, 2001). We believe that ownership has an important role and we do not want to force our users to take a 41 non-attributive copyright licence to their work. We consider the Creative Commons model as the most suitable one to let each author choose the rights to reserve (Lessig, 2004). Narrative writings or essays are creative works and they generally treat ownership as authorship, even for the most enthusiastic fellows of free culture (Stallman, 2001). 2.2 The Representation of Context In the structure of Novelle we are trying to retain authorship and the core concept of document history of wikis through a typology of links, taking what we consider the best of the two worlds of blogs and wikis. In Novelle each user owns his own lexias, and the relations between them, i.e. links. Furthermore authors are free to read and to link other users? lexias. In other words, each user does permit everyone to link its own lexias for free, at the condition that the others do the same. Every user may recall the link list on each element (e.g. a single wo","@endWordPosition":"1322","@position":"7940","annotationId":"T28","@startWordPosition":"1321","@citStr":"Stallman, 2001"}},"title":{"#tail":"\n","#text":"Free Software, Free Society: Selected Essays of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Richard M Stallman"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Sigmar-Olaf Tergan and Tanja Kellers. 2005. Knowledge And Information Visualization: Searching for Synergies. Springer, Berlin."},"#text":"\n","marker":{"#tail":"\n","#text":"Tergan, Kellers, 2005"},"publisher":{"#tail":"\n","#text":"Springer,"},"location":{"#tail":"\n","#text":"Berlin."},"title":{"#tail":"\n","#text":"Knowledge And Information Visualization: Searching for Synergies."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Sigmar-Olaf Tergan"},{"#tail":"\n","#text":"Tanja Kellers"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Dave Thomas and David Heinemeier Hansson. 2005. Agile Web Development with Rails - A pragmatic guide. Pragmatic Bookshelf."},"#text":"\n","marker":{"#tail":"\n","#text":"Thomas, Hansson, 2005"},"title":{"#tail":"\n","#text":"Agile Web Development with Rails - A pragmatic guide. Pragmatic Bookshelf."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Dave Thomas"},{"#tail":"\n","#text":"David Heinemeier Hansson"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Wikipedia. 2005. Wikipedia. From Wikipedia, the free encyclopedia. Url: http://en.wikipedia.org/wiki/Wikipedia. Retrieved the 31st of December."},"#text":"\n","marker":{"#tail":"\n","#text":"Wikipedia, 2005"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"it. The emphasis on narrativity takes into account the use of blogs as public diaries on the web, that is still the main current interpretation of this literary genre, or metagenre (McNeill, 2005). Furthermore we noticed that blogs and wikis are currently subjected to osmosis, because they have in common the underlying core technology. So blogs are a literary metagenre which started as authored personal diaries or journals. Now they try to collect themselves in so-called ?blogspheres?. On the other side, wikis started as collective works where each entry is not owned by a single author - e.g. Wikipedia (2005). Now personal wiki tools are arising for brainstorming and mind mapping. See Section 4 for further aspects. 2.1 The Problem of Ownership The main difference between blogs and wikis is in the ownership of documents. Most blogs follow the annotation model, where a single lexia is central and the others are comments, sometimes in threads. Every lexia is authored and changes are minimal. People prefer commenting instead of editing. The paradigm is ?write once, read many?. On the contrary, in wikis no lexia is authored and there is no hierarchy between lexias. In fact a document is still a set of ","@endWordPosition":"1107","@position":"6666","annotationId":"T29","@startWordPosition":"1106","@citStr":"Wikipedia (2005)"},{"#tail":"\n","#text":"ersion of the document. Ruby on Rails does not support native XML databases at this time, therefore in our architecture there will be provisionally a relational DBMS dedicated to RoR, which had no problem with a filesystem repository. 3.4 Asyncronous Javascript And XML AJAX is not a technology in itself but a term that refers to the use of a group of technologies together, in particular Javascript and XML. In other words AJAX is a web development technique for creating interactive web applications using a combination of XHTML and CSS, Document Object Model (or DOM), the XMLHTTPRequest object (Wikipedia, 2005). AJAX paradigm has been recently defined, when someone has rediscovered a simple function originally developed by Microsoft as ActiveX control. This function, named XMLHTTPRequest lets clients ask servers for some particular data using asyncronous handshake. In this way users can continue using web application (typically filling web forms) while the client and the server exchange data and messages. Other developers have published a concurrent version of this function for other browsers than Internet Explorer, like Mozilla/Gecko, Opera and Safari. The web pages builded with this technology giv","@endWordPosition":"3710","@position":"21689","annotationId":"T30","@startWordPosition":"3709","@citStr":"Wikipedia, 2005"}]},"title":{"#tail":"\n","#text":"Wikipedia. From Wikipedia, the free encyclopedia."},"booktitle":{"#tail":"\n","#text":"Url: http://en.wikipedia.org/wiki/Wikipedia. Retrieved the 31st of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Wikipedia"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"XML, eXtensible Markup Language. 2005. Extensible Markup Language (XML). Url: http://www.w3.org/XML/. Retrieved the 27th of December."},"#text":"\n","marker":{"#tail":"\n","#text":"XML, 2005"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"ed way, in order to be able to execute efficient queries on the repository. 3.2 eXtensible Markup Language We chose XML as language and meta-language because we needed to be able to save messages with their meanings. Every lexia is saved with 44 some tags and attributes which describe its meaning. The possibility of storing separately data from their representations lets a system access more quickly to a data and extract the requested information. XML is a W3C standard and this makes our project ready to be changed and extended, as well as to be connected with other applications and services (XML, 2005). XML will be used to represent data, metadata, link typing, messages and paths map, and to exchange messages betweeen different layers. 3.3 Ruby on Rails Ruby on Rails, or RoR, is a framework rich in extensions and libraries with licences suitable for our usage, in particular XML Builder and gdiff/gpatch. The first library offers a set of classes which allows to generate XML code in a simple way (Builder, 2006). Gdiff/gpatch library is an implementation of the gdiff protocol, that creates a patch from two files and then a new file from one of the previous files and the patch (Gdiff, 2005). Us","@endWordPosition":"3429","@position":"20100","annotationId":"T31","@startWordPosition":"3428","@citStr":"XML, 2005"}},"booktitle":{"#tail":"\n","#text":"Extensible Markup Language (XML). Url: http://www.w3.org/XML/. Retrieved the 27th of"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"eXtensible Markup Language XML"}}}]}}]}}
