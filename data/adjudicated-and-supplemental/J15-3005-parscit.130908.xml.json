{"algorithms":{"#text":"\n","@version":"110505","algorithm":{"#tail":"\n","@name":"ParsCit","#text":"\n","@version":"110505","citationList":{"#tail":"\n","#text":"\n","citation":[{"volume":{"#tail":"\n","#text":"31"},"#tail":"\n","date":{"#tail":"\n","#text":"2005"},"rawString":{"#tail":"\n","#text":"Barzilay, Regina and Kathleen McKeown. 2005. Sentence fusion for multidocument news summarization. Computational Linguistics, 31(3):297\u2013328."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","issue":{"#tail":"\n","#text":"3"},"marker":{"#tail":"\n","#text":"Barzilay, McKeown, 2005"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"Building, 15 JJ Thomson Avenue, Cambridge, UK. E-mail: stephen.clark®cl.cam.ac.uk. Submission received: 17 April 2013; revised version received: 23 April 2014; accepted for publication: 22 June 2014. doi:10.1162/COLI a 00229 © 2015 Association for Computational Linguistics Computational Linguistics Volume 41, Number 3 those words. Additional annotation may also be provided with the input\u2014for example, part-of-speech (POS) tags or syntactic dependencies. Applications that can benefit from better text generation algorithms include machine translation (Koehn 2010), abstractive text summarization (Barzilay and McKeown 2005), and grammar correction (Lee and Seneff 2006). Typically, statistical machine translation (SMT) systems (Chiang 2007; Koehn 2010) perform generation into the target language as part of an integrated system, which avoids the high computational complexity of independent word ordering. On the other hand, performing word ordering separately in a pipeline has many potential advantages. For SMT, it offers better modularity between adequacy (translation) and fluency (linearization), and can potentially improve target grammaticality for syntactically different languages (e.g., Chinese and English). M","@endWordPosition":"394","@position":"2724","annotationId":"T1","@startWordPosition":"391","@citStr":"Barzilay and McKeown 2005"},{"#tail":"\n","#text":" the shared task data, or inconsistency in the data itself. Out of the 39K training instances, 2.8K conflicting instances are discarded, resulting in 36.2K gold-standard ordered dependency trees. Table 10 shows the results of our system and the top two participating systems of the shared task. Our system outperforms the STUMABA system by 0.5 BLEU points, and the DCU system by 3.8 BLEU points. More evaluation of the system was published in Song et al. (2014). 6. Related Work There is a recent line of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart rea","@endWordPosition":"14641","@position":"89387","annotationId":"T2","@startWordPosition":"14638","@citStr":"Barzilay and McKeown 2005"}]},"title":{"#tail":"\n","#text":"Sentence fusion for multidocument news summarization."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Regina Barzilay"},{"#tail":"\n","#text":"Kathleen McKeown"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1998"},"rawString":{"#tail":"\n","#text":"Caraballo, Sharon A. and Eugene Charniak. 1998. New figures of merit for best-first probabilistic chart parsing. Computational Linguistics, 24:275\u2013298."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","pages":{"#tail":"\n","#text":"24--275"},"marker":{"#tail":"\n","#text":"Caraballo, Charniak, 1998"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"derivation. Hypotheses are constructed bottom\u2013up: starting from single words, smaller phrases are combined into larger ones according to CCG rules. To allow the combination of hypotheses, we use an additional structure to store a set of hypotheses that have been expanded, which we call accepted 506 Zhang and Clark Discriminative Syntax-Based Word Ordering hypotheses. When a hypothesis from the agenda is expanded, it is combined with all accepted hypotheses in all possible ways to produce new hypotheses. The data structure for accepted hypotheses is similar to that used for best-first parsing (Caraballo and Charniak 1998), and we adopt the term chart for this structure. However, note there are important differences to the parsing problem. First, the parsing problem has a fixed word order and is considerably simpler than the word ordering problem we are tackling. Second, although we use the term chart, the structure for accepted hypotheses is not a dynamic programming chart in the same way as for the parsing problem. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we applied a set of beams to this structure, which makes it similar to the data structure used for phrase-based MT d","@endWordPosition":"2108","@position":"13812","annotationId":"T3","@startWordPosition":"2105","@citStr":"Caraballo and Charniak 1998"}},"title":{"#tail":"\n","#text":"New figures of merit for best-first probabilistic chart parsing."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Sharon A Caraballo"},{"#tail":"\n","#text":"Eugene Charniak"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2007"},"rawString":{"#tail":"\n","#text":"Chang, Pi-Chuan and Kristina Toutanova. 2007. A discriminative syntactic word order model for machine translation. In Proceedings of ACL, pages 9\u201316, Prague."},"#text":"\n","pages":{"#tail":"\n","#text":"9--16"},"marker":{"#tail":"\n","#text":"Chang, Toutanova, 2007"},"location":{"#tail":"\n","#text":"Prague."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"uage as part of an integrated system, which avoids the high computational complexity of independent word ordering. On the other hand, performing word ordering separately in a pipeline has many potential advantages. For SMT, it offers better modularity between adequacy (translation) and fluency (linearization), and can potentially improve target grammaticality for syntactically different languages (e.g., Chinese and English). More importantly, a standalone word ordering component can in principle be applied to a wide range of text generation tasks, including transfer-based machine translation (Chang and Toutanova 2007). Most word ordering systems use an n-gram language model, which is effective at controling local fluency. Syntax-based language models, in particular dependency language models (Xu, Chelba, and Jelinek 2002), are sometimes used in an attempt to improve global fluency through the capturing of long-range dependencies. In this article, we take a syntax-based approach and consider two grammar formalisms: Combinatory Categorial Grammar (CCG) and dependency grammar. Our system also employs a discriminative model. Coupled with heuristic search, a strength of the model is that arbitrary features can ","@endWordPosition":"505","@position":"3519","annotationId":"T4","@startWordPosition":"502","@citStr":"Chang and Toutanova 2007"}},"title":{"#tail":"\n","#text":"A discriminative syntactic word order model for machine translation."},"booktitle":{"#tail":"\n","#text":"In Proceedings of ACL,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Pi-Chuan Chang"},{"#tail":"\n","#text":"Kristina Toutanova"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2007"},"rawString":{"#tail":"\n","#text":"Filippova, Katja and Michael Strube. 2007. Generating constituent order in German clauses. In Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 320\u2013327, Prague."},"#text":"\n","pages":{"#tail":"\n","#text":"320--327"},"marker":{"#tail":"\n","#text":"Filippova, Strube, 2007"},"location":{"#tail":"\n","#text":"Prague."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"nconsistency in the data itself. Out of the 39K training instances, 2.8K conflicting instances are discarded, resulting in 36.2K gold-standard ordered dependency trees. Table 10 shows the results of our system and the top two participating systems of the shared task. Our system outperforms the STUMABA system by 0.5 BLEU points, and the DCU system by 3.8 BLEU points. More evaluation of the system was published in Song et al. (2014). 6. Related Work There is a recent line of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart realization, drawing analogies","@endWordPosition":"14645","@position":"89414","annotationId":"T5","@startWordPosition":"14642","@citStr":"Filippova and Strube 2007"}},"title":{"#tail":"\n","#text":"Generating constituent order in German clauses."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Katja Filippova"},{"#tail":"\n","#text":"Michael Strube"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2009"},"rawString":{"#tail":"\n","#text":"Filippova, Katja and Michael Strube. 2009. Tree linearization in English: Improving language model based approaches. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Short Papers, pages 225\u2013228, Boulder, CO."},"#text":"\n","pages":{"#tail":"\n","#text":"225--228"},"marker":{"#tail":"\n","#text":"Filippova, Strube, 2009"},"location":{"#tail":"\n","#text":"Boulder, CO."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"sed Word Ordering and a demonstration of the applicability of the system to more realistic text generation scenarios, we consider two further tasks for the dependency-based realization system. The first task considers a variety of input conditions for the dependency-based system, determined by two parameters. The first is whether POS information is provided for each word in the input multi-set. The second is whether syntactic dependencies between the words are provided. The extreme case is when all dependencies are provided, in which case the problem reduces to the tree linearization problem (Filippova and Strube 2009; He et al. 2009). However, the input can also lie between the two extremes of no- and full-dependency information. The second task is the NLG 2011 shared task, which provides a further demonstration of the practical utility of our system. The shared task is closer to a real realization scenario, in that lemmas, rather than inflected words, are provided as input. Hence some modifications are required to our system in order that it can perform some word inflection, as well as deciding on the ordering. The shared task data also uses labeled, rather than unlabeled, syntactic dependencies, and so ","@endWordPosition":"1062","@position":"7140","annotationId":"T6","@startWordPosition":"1059","@citStr":"Filippova and Strube 2009"},{"#tail":"\n","#text":"tion As well as CCG, the same approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, the same algorithm can be applied to this task. In addition to abstract word ordering, our framework can be used to solve a more informed, dependency-based word ordering task: tree linearization (Filippova and Strube 2009; He et al. 2009), a task that is very similar to abstract word ordering from a computational perspective. Both tasks involve the permutation of a set of input words, and are NP-hard. The only difference is that, for tree linearization, full unordered dependency trees are given as input. As a result, the output word permutations are more constrained (under the projectivity assumption), and more information is available for search disambiguation. Tree linearization can be treated as a special case of word ordering, where a grammar constraint is applied such that the output sentence has to be co","@endWordPosition":"7376","@position":"44783","annotationId":"T7","@startWordPosition":"7373","@citStr":"Filippova and Strube 2009"}]},"title":{"#tail":"\n","#text":"Tree linearization in English: Improving language model based approaches."},"booktitle":{"#tail":"\n","#text":"In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Short Papers,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Katja Filippova"},{"#tail":"\n","#text":"Michael Strube"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2009"},"rawString":{"#tail":"\n","#text":"Filippova, Katja and Michael Strube. 2009. Tree linearization in English: Improving language model based approaches. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Short Papers, pages 225\u2013228, Boulder, CO."},"#text":"\n","pages":{"#tail":"\n","#text":"225--228"},"marker":{"#tail":"\n","#text":"Filippova, Strube, 2009"},"location":{"#tail":"\n","#text":"Boulder, CO."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"sed Word Ordering and a demonstration of the applicability of the system to more realistic text generation scenarios, we consider two further tasks for the dependency-based realization system. The first task considers a variety of input conditions for the dependency-based system, determined by two parameters. The first is whether POS information is provided for each word in the input multi-set. The second is whether syntactic dependencies between the words are provided. The extreme case is when all dependencies are provided, in which case the problem reduces to the tree linearization problem (Filippova and Strube 2009; He et al. 2009). However, the input can also lie between the two extremes of no- and full-dependency information. The second task is the NLG 2011 shared task, which provides a further demonstration of the practical utility of our system. The shared task is closer to a real realization scenario, in that lemmas, rather than inflected words, are provided as input. Hence some modifications are required to our system in order that it can perform some word inflection, as well as deciding on the ordering. The shared task data also uses labeled, rather than unlabeled, syntactic dependencies, and so ","@endWordPosition":"1062","@position":"7140","annotationId":"T8","@startWordPosition":"1059","@citStr":"Filippova and Strube 2009"},{"#tail":"\n","#text":"tion As well as CCG, the same approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, the same algorithm can be applied to this task. In addition to abstract word ordering, our framework can be used to solve a more informed, dependency-based word ordering task: tree linearization (Filippova and Strube 2009; He et al. 2009), a task that is very similar to abstract word ordering from a computational perspective. Both tasks involve the permutation of a set of input words, and are NP-hard. The only difference is that, for tree linearization, full unordered dependency trees are given as input. As a result, the output word permutations are more constrained (under the projectivity assumption), and more information is available for search disambiguation. Tree linearization can be treated as a special case of word ordering, where a grammar constraint is applied such that the output sentence has to be co","@endWordPosition":"7376","@position":"44783","annotationId":"T9","@startWordPosition":"7373","@citStr":"Filippova and Strube 2009"}]},"title":{"#tail":"\n","#text":"Tree linearization in English: Improving language model based approaches."},"booktitle":{"#tail":"\n","#text":"In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Short Papers,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Katja Filippova"},{"#tail":"\n","#text":"Michael Strube"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2010"},"rawString":{"#tail":"\n","#text":"Goldberg, Yoav and Michael Elhadad. 2010. An efficient algorithm for easy-first non-directional dependency parsing. In Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 742\u2013750, Los Angeles, CA."},"#text":"\n","pages":{"#tail":"\n","#text":"742--750"},"marker":{"#tail":"\n","#text":"Goldberg, Elhadad, 2010"},"location":{"#tail":"\n","#text":"Los Angeles, CA."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":", which maintains a queue of hypotheses during search, and performs learning to ensure that the highest-scored hypothesis in the queue is correct. However, in easy-first search, hypotheses from the queue are ranked by the score of their next action, rather than the hypothesis score. Moreover, Shen, Satta, and Joshi use aggressive learning and regenerate the queue after each update, but we perform non-aggressive learning, which is faster and is more feasible for our large and complex search space. Similar methods to Shen, Satta, and Joshi (2007) have also been used in Shen and Joshi (2008) and Goldberg and Elhadad (2010). Another framework that closely integrates learning and search is SEARN (Daum´e, Langford, and Marcu 2009), which addresses structured prediction problems that can be transformed into a series of simple classification tasks. The transformation is akin to greedy search in the sense that the complex structure is constructed by sequential classification decisions. The key problem that SEARN addresses is how to learn the tth decision based on the previous t − 1 decisions, so that the overall loss in the resulting structure is minimized. Similar to our framework, SEARN allows arbitrary features. H","@endWordPosition":"15265","@position":"93348","annotationId":"T10","@startWordPosition":"15262","@citStr":"Goldberg and Elhadad (2010)"}},"title":{"#tail":"\n","#text":"An efficient algorithm for easy-first non-directional dependency parsing."},"booktitle":{"#tail":"\n","#text":"In Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Yoav Goldberg"},{"#tail":"\n","#text":"Michael Elhadad"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2009"},"rawString":{"#tail":"\n","#text":"He, Wei, Haifeng Wang, Yuqing Guo, and Ting Liu. 2009. Dependency based Chinese sentence realization. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 809\u2013816, Suntec."},"#text":"\n","pages":{"#tail":"\n","#text":"809--816"},"marker":{"#tail":"\n","#text":"He, Wang, Guo, Liu, 2009"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"onstration of the applicability of the system to more realistic text generation scenarios, we consider two further tasks for the dependency-based realization system. The first task considers a variety of input conditions for the dependency-based system, determined by two parameters. The first is whether POS information is provided for each word in the input multi-set. The second is whether syntactic dependencies between the words are provided. The extreme case is when all dependencies are provided, in which case the problem reduces to the tree linearization problem (Filippova and Strube 2009; He et al. 2009). However, the input can also lie between the two extremes of no- and full-dependency information. The second task is the NLG 2011 shared task, which provides a further demonstration of the practical utility of our system. The shared task is closer to a real realization scenario, in that lemmas, rather than inflected words, are provided as input. Hence some modifications are required to our system in order that it can perform some word inflection, as well as deciding on the ordering. The shared task data also uses labeled, rather than unlabeled, syntactic dependencies, and so the system was mo","@endWordPosition":"1066","@position":"7157","annotationId":"T11","@startWordPosition":"1063","@citStr":"He et al. 2009"},{"#tail":"\n","#text":"me approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, the same algorithm can be applied to this task. In addition to abstract word ordering, our framework can be used to solve a more informed, dependency-based word ordering task: tree linearization (Filippova and Strube 2009; He et al. 2009), a task that is very similar to abstract word ordering from a computational perspective. Both tasks involve the permutation of a set of input words, and are NP-hard. The only difference is that, for tree linearization, full unordered dependency trees are given as input. As a result, the output word permutations are more constrained (under the projectivity assumption), and more information is available for search disambiguation. Tree linearization can be treated as a special case of word ordering, where a grammar constraint is applied such that the output sentence has to be consistent with the","@endWordPosition":"7380","@position":"44800","annotationId":"T12","@startWordPosition":"7377","@citStr":"He et al. 2009"},{"#tail":"\n","#text":"Out of the 39K training instances, 2.8K conflicting instances are discarded, resulting in 36.2K gold-standard ordered dependency trees. Table 10 shows the results of our system and the top two participating systems of the shared task. Our system outperforms the STUMABA system by 0.5 BLEU points, and the DCU system by 3.8 BLEU points. More evaluation of the system was published in Song et al. (2014). 6. Related Work There is a recent line of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart realization, drawing analogies between realization a","@endWordPosition":"14650","@position":"89436","annotationId":"T13","@startWordPosition":"14647","@citStr":"He et al. 2009"}]},"title":{"#tail":"\n","#text":"Dependency based Chinese sentence realization."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Wei He"},{"#tail":"\n","#text":"Haifeng Wang"},{"#tail":"\n","#text":"Yuqing Guo"},{"#tail":"\n","#text":"Ting Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2009"},"rawString":{"#tail":"\n","#text":"He, Wei, Haifeng Wang, Yuqing Guo, and Ting Liu. 2009. Dependency based Chinese sentence realization. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 809\u2013816, Suntec."},"#text":"\n","pages":{"#tail":"\n","#text":"809--816"},"marker":{"#tail":"\n","#text":"He, Wang, Guo, Liu, 2009"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"onstration of the applicability of the system to more realistic text generation scenarios, we consider two further tasks for the dependency-based realization system. The first task considers a variety of input conditions for the dependency-based system, determined by two parameters. The first is whether POS information is provided for each word in the input multi-set. The second is whether syntactic dependencies between the words are provided. The extreme case is when all dependencies are provided, in which case the problem reduces to the tree linearization problem (Filippova and Strube 2009; He et al. 2009). However, the input can also lie between the two extremes of no- and full-dependency information. The second task is the NLG 2011 shared task, which provides a further demonstration of the practical utility of our system. The shared task is closer to a real realization scenario, in that lemmas, rather than inflected words, are provided as input. Hence some modifications are required to our system in order that it can perform some word inflection, as well as deciding on the ordering. The shared task data also uses labeled, rather than unlabeled, syntactic dependencies, and so the system was mo","@endWordPosition":"1066","@position":"7157","annotationId":"T14","@startWordPosition":"1063","@citStr":"He et al. 2009"},{"#tail":"\n","#text":"me approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, the same algorithm can be applied to this task. In addition to abstract word ordering, our framework can be used to solve a more informed, dependency-based word ordering task: tree linearization (Filippova and Strube 2009; He et al. 2009), a task that is very similar to abstract word ordering from a computational perspective. Both tasks involve the permutation of a set of input words, and are NP-hard. The only difference is that, for tree linearization, full unordered dependency trees are given as input. As a result, the output word permutations are more constrained (under the projectivity assumption), and more information is available for search disambiguation. Tree linearization can be treated as a special case of word ordering, where a grammar constraint is applied such that the output sentence has to be consistent with the","@endWordPosition":"7380","@position":"44800","annotationId":"T15","@startWordPosition":"7377","@citStr":"He et al. 2009"},{"#tail":"\n","#text":"Out of the 39K training instances, 2.8K conflicting instances are discarded, resulting in 36.2K gold-standard ordered dependency trees. Table 10 shows the results of our system and the top two participating systems of the shared task. Our system outperforms the STUMABA system by 0.5 BLEU points, and the DCU system by 3.8 BLEU points. More evaluation of the system was published in Song et al. (2014). 6. Related Work There is a recent line of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart realization, drawing analogies between realization a","@endWordPosition":"14650","@position":"89436","annotationId":"T16","@startWordPosition":"14647","@citStr":"He et al. 2009"}]},"title":{"#tail":"\n","#text":"Dependency based Chinese sentence realization."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Wei He"},{"#tail":"\n","#text":"Haifeng Wang"},{"#tail":"\n","#text":"Yuqing Guo"},{"#tail":"\n","#text":"Ting Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2009"},"rawString":{"#tail":"\n","#text":"He, Wei, Haifeng Wang, Yuqing Guo, and Ting Liu. 2009. Dependency based Chinese sentence realization. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 809\u2013816, Suntec."},"#text":"\n","pages":{"#tail":"\n","#text":"809--816"},"marker":{"#tail":"\n","#text":"He, Wang, Guo, Liu, 2009"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"onstration of the applicability of the system to more realistic text generation scenarios, we consider two further tasks for the dependency-based realization system. The first task considers a variety of input conditions for the dependency-based system, determined by two parameters. The first is whether POS information is provided for each word in the input multi-set. The second is whether syntactic dependencies between the words are provided. The extreme case is when all dependencies are provided, in which case the problem reduces to the tree linearization problem (Filippova and Strube 2009; He et al. 2009). However, the input can also lie between the two extremes of no- and full-dependency information. The second task is the NLG 2011 shared task, which provides a further demonstration of the practical utility of our system. The shared task is closer to a real realization scenario, in that lemmas, rather than inflected words, are provided as input. Hence some modifications are required to our system in order that it can perform some word inflection, as well as deciding on the ordering. The shared task data also uses labeled, rather than unlabeled, syntactic dependencies, and so the system was mo","@endWordPosition":"1066","@position":"7157","annotationId":"T17","@startWordPosition":"1063","@citStr":"He et al. 2009"},{"#tail":"\n","#text":"me approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, the same algorithm can be applied to this task. In addition to abstract word ordering, our framework can be used to solve a more informed, dependency-based word ordering task: tree linearization (Filippova and Strube 2009; He et al. 2009), a task that is very similar to abstract word ordering from a computational perspective. Both tasks involve the permutation of a set of input words, and are NP-hard. The only difference is that, for tree linearization, full unordered dependency trees are given as input. As a result, the output word permutations are more constrained (under the projectivity assumption), and more information is available for search disambiguation. Tree linearization can be treated as a special case of word ordering, where a grammar constraint is applied such that the output sentence has to be consistent with the","@endWordPosition":"7380","@position":"44800","annotationId":"T18","@startWordPosition":"7377","@citStr":"He et al. 2009"},{"#tail":"\n","#text":"Out of the 39K training instances, 2.8K conflicting instances are discarded, resulting in 36.2K gold-standard ordered dependency trees. Table 10 shows the results of our system and the top two participating systems of the shared task. Our system outperforms the STUMABA system by 0.5 BLEU points, and the DCU system by 3.8 BLEU points. More evaluation of the system was published in Song et al. (2014). 6. Related Work There is a recent line of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart realization, drawing analogies between realization a","@endWordPosition":"14650","@position":"89436","annotationId":"T19","@startWordPosition":"14647","@citStr":"He et al. 2009"}]},"title":{"#tail":"\n","#text":"Dependency based Chinese sentence realization."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Wei He"},{"#tail":"\n","#text":"Haifeng Wang"},{"#tail":"\n","#text":"Yuqing Guo"},{"#tail":"\n","#text":"Ting Liu"}]}},{"volume":{"#tail":"\n","#text":"33"},"#tail":"\n","date":{"#tail":"\n","#text":"2007"},"rawString":{"#tail":"\n","#text":"Hockenmaier, Julia and Mark Steedman. 2007. CCGbank: A corpus of CCG derivations and dependency structures extracted from the Penn Treebank. Computational Linguistics, 33(3):355\u2013396."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","issue":{"#tail":"\n","#text":"3"},"marker":{"#tail":"\n","#text":"Hockenmaier, Steedman, 2007"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we applied a set of beams to this structure, which makes it similar to the data structure used for phrase-based MT decoding (Koehn 2010). However, we will show later that this structure is unnecessary when the model has more discriminative power, and a conceptually simpler single beam can be used. We will also investigate the possibility of applying dynamic-programming-style pruning to the chart. We now give an overview of the training algorithm, which is crucial to both the speed and accuracy of the resulting decoder. CCGBank (Hockenmaier and Steedman 2007) is used to train the model. For each training sentence, the corresponding CCGBank derivation together with all its sub-derivations are treated as gold-standard hypotheses. All other hypotheses that can be constructed from the same bag of words are non-gold hypotheses. From the generation perspective this assumption is too strong, because sentences can have multiple orderings (with multiple derivations) that are both grammatical and fluent. Nevertheless, it is the most feasible choice given the training data available. The efficiency of the decoding algorithm is dependent on the training algor","@endWordPosition":"2278","@position":"14860","annotationId":"T20","@startWordPosition":"2275","@citStr":"Hockenmaier and Steedman 2007"},{"#tail":"\n","#text":"ry rule of (backward) function application: NP S\\NP ⇒ S In addition to binary rule instances, such as this one, there are also unary rules that operate on a single category in order to change its type. For example, forward typeraising can change a subject NP into a complex category looking to the right for a verb phrase: NP ⇒ S/(S\\NP) Such a type-raised category can then combine with a transitive verb type using the rule of forward composition: S/(S\\NP) (S\\NP)/NP ⇒ S/NP Following Fowler and Penn (2010), we extract the grammar by reading rule instances directly from the derivations in CCGbank (Hockenmaier and Steedman 2007), rather than defining the combinatory rule schema manually as in Clark and Curran 508 Zhang and Clark Discriminative Syntax-Based Word Ordering (2007b). Hence the grammar we use can be thought of as a context-free approximation to the mildly content sensitive grammar arising from the use of generalized composition rules (Weir 1988). Hockenmaier (2003) contains a detailed description of the grammar that is obtained in this way, including the various unary type-changing rules, as well as additional rules needed to deal with naturally occurring text, such as punctuation rules. 3.2 The Edge Data ","@endWordPosition":"3144","@position":"20410","annotationId":"T21","@startWordPosition":"3141","@citStr":"Hockenmaier and Steedman 2007"},{"#tail":"\n","#text":"y after the parameter update; in this article we expand the negative example, as in Algorithm3, putting it onto the chart and thereby exploring a larger part of the search space (in particular that part containing negative examples). Our later experiments show that this method yields improved results, consistent with the CCG system. 522 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 3 Training, development, and test data from the Penn Treebank. Sections Sentences Words Training 2\u201321 39,832 950,028 Development 22 1,700 40,117 Test 23 2,416 56,684 5. Experiments We use CCGBank (Hockenmaier and Steedman 2007) and the Penn Treebank (Marcus, Santorini, and Marcinkiewicz 1993) for CCG and dependency data, respectively. CCGbank is the CCG version of the Penn Treebank. Standard splits were used for both: Sections 02\u201321 for training, Section 00 for development, and Section 23 for the final test. Table 3 gives statistics for the Penn Treebank. For the CCG experiments, original sentences from CCGBank are transformed into bags of words, with sequence information removed, and passed to our system as input data. The system outputs are compared to the original sentences for evaluation. Following Wan et al. (2","@endWordPosition":"9285","@position":"55541","annotationId":"T22","@startWordPosition":"9282","@citStr":"Hockenmaier and Steedman 2007"}]},"title":{"#tail":"\n","#text":"CCGbank: A corpus of CCG derivations and dependency structures extracted from the Penn Treebank."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Julia Hockenmaier"},{"#tail":"\n","#text":"Mark Steedman"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"1996"},"rawString":{"#tail":"\n","#text":"Kay, Martin. 1996. Chart generation. In Proceedings of ACL, pages 200\u2013204, Santa Cruz, CA."},"#text":"\n","pages":{"#tail":"\n","#text":"200--204"},"marker":{"#tail":"\n","#text":"Kay, 1996"},"location":{"#tail":"\n","#text":"Santa Cruz, CA."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ng. The shared task data also uses labeled, rather than unlabeled, syntactic dependencies, and so the system was modified to incorporate labels. The final result is that our system gives competitive BLEU scores, compared to the best-performing systems on the shared task. The structured prediction problem we solve is a very hard problem. Due to the use of syntax, and the search for a sentence together with a single CCG derivation or dependency tree, the search space is exponentially larger than the n-gram word permutation problem. No efficient algorithm exists for finding the optimal solution. Kay (1996) recognized the computational difficulty of chart-based generation, which has many similarities to the problem we address in his seminal paper. We tackle the high complexity by using learning-guided best-first search, exploring a small path in the whole search space, which contains the most likely structures according to the discriminative model. One of the contributions of this article is to introduce, and provide a discriminative solution to, this difficult structured prediction problem, which is an interesting machine learning problem in its own right. This article is based on, and signific","@endWordPosition":"1244","@position":"8252","annotationId":"T23","@startWordPosition":"1243","@citStr":"Kay (1996)"},{"#tail":"\n","#text":" of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart realization, drawing analogies between realization and parsing of free order languages. He discussed efficiency issues and provided solutions to specific problems. For the task of realization, efficiency improvement has been further investigated (Carroll et al. 1999; Carroll and Oepen 2005). The inputs to these systems are logical forms, which form natural constraints on the interaction between edges. In our case, one constraint that has been leveraged in the dependency system is a ","@endWordPosition":"14722","@position":"89871","annotationId":"T24","@startWordPosition":"14721","@citStr":"Kay 1996"}]},"title":{"#tail":"\n","#text":"Chart generation."},"booktitle":{"#tail":"\n","#text":"In Proceedings of ACL,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Martin Kay"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2002"},"rawString":{"#tail":"\n","#text":"Papineni, Kishore, Salim Roukos, Todd Ward, and Wei-Jing Zhu. 2002. BLEU: A method for automatic evaluation of machine translation. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics, pages 311\u2013318, Philadelphia, PA."},"#text":"\n","pages":{"#tail":"\n","#text":"311--318"},"marker":{"#tail":"\n","#text":"Papineni, Roukos, Ward, Zhu, 2002"},"location":{"#tail":"\n","#text":"Philadelphia, PA."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"lti-set (bag) of words and the output is an ordered sentence, together with its syntactic analysis (either CCG derivation or dependency tree, depending on the grammar formalism being used). Given an input, our system searches for the highestscored output, according to a syntax-based discriminative model. One advantage of this formulation of the reordering problem, which can perhaps be thought of as a \u201cpure\u201d text realization task, is that systems for solving it are easily evaluated, because all that is required is a set of sentences for reordering and a standard evaluation metric such as BLEU (Papineni et al. 2002). However, one potential criticism of the \u201cpure\u201d problem is that it is unclear how it relates to real realization tasks, since in practice (e.g., in statistical machine translation systems) the input does provide constraints on the possible output orderings. Our general formulation still allows task-specific contraints to be added if appropriate. Hence as a test of the flexibility of our system, 504 Zhang and Clark Discriminative Syntax-Based Word Ordering and a demonstration of the applicability of the system to more realistic text generation scenarios, we consider two further tasks for the d","@endWordPosition":"898","@position":"6072","annotationId":"T25","@startWordPosition":"895","@citStr":"Papineni et al. 2002"},{"#tail":"\n","#text":", Santorini, and Marcinkiewicz 1993) for CCG and dependency data, respectively. CCGbank is the CCG version of the Penn Treebank. Standard splits were used for both: Sections 02\u201321 for training, Section 00 for development, and Section 23 for the final test. Table 3 gives statistics for the Penn Treebank. For the CCG experiments, original sentences from CCGBank are transformed into bags of words, with sequence information removed, and passed to our system as input data. The system outputs are compared to the original sentences for evaluation. Following Wan et al. (2009), we use the BLEU metric (Papineni et al. 2002) for string comparison. Although BLEU is not the perfect measure of fluency or grammaticality, being based on n-gram precision, it is currently widely used for automatic evaluation and allows us to compare directly with existing work (Wan et al. 2009). Note also that one criticism of BLEU for evaluating machine translation systems (i.e., that it can only register exact matches between the same words in the system and reference translation), does not apply here, because the system output always contains the same words as the original reference sentence. For the dependency-based experiments, gol","@endWordPosition":"9389","@position":"56192","annotationId":"T26","@startWordPosition":"9386","@citStr":"Papineni et al. 2002"}]},"title":{"#tail":"\n","#text":"BLEU: A method for automatic evaluation of machine translation."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Kishore Papineni"},{"#tail":"\n","#text":"Salim Roukos"},{"#tail":"\n","#text":"Todd Ward"},{"#tail":"\n","#text":"Wei-Jing Zhu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2002"},"rawString":{"#tail":"\n","#text":"Papineni, Kishore, Salim Roukos, Todd Ward, and Wei-Jing Zhu. 2002. BLEU: A method for automatic evaluation of machine translation. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics, pages 311\u2013318, Philadelphia, PA."},"#text":"\n","pages":{"#tail":"\n","#text":"311--318"},"marker":{"#tail":"\n","#text":"Papineni, Roukos, Ward, Zhu, 2002"},"location":{"#tail":"\n","#text":"Philadelphia, PA."},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"lti-set (bag) of words and the output is an ordered sentence, together with its syntactic analysis (either CCG derivation or dependency tree, depending on the grammar formalism being used). Given an input, our system searches for the highestscored output, according to a syntax-based discriminative model. One advantage of this formulation of the reordering problem, which can perhaps be thought of as a \u201cpure\u201d text realization task, is that systems for solving it are easily evaluated, because all that is required is a set of sentences for reordering and a standard evaluation metric such as BLEU (Papineni et al. 2002). However, one potential criticism of the \u201cpure\u201d problem is that it is unclear how it relates to real realization tasks, since in practice (e.g., in statistical machine translation systems) the input does provide constraints on the possible output orderings. Our general formulation still allows task-specific contraints to be added if appropriate. Hence as a test of the flexibility of our system, 504 Zhang and Clark Discriminative Syntax-Based Word Ordering and a demonstration of the applicability of the system to more realistic text generation scenarios, we consider two further tasks for the d","@endWordPosition":"898","@position":"6072","annotationId":"T27","@startWordPosition":"895","@citStr":"Papineni et al. 2002"},{"#tail":"\n","#text":", Santorini, and Marcinkiewicz 1993) for CCG and dependency data, respectively. CCGbank is the CCG version of the Penn Treebank. Standard splits were used for both: Sections 02\u201321 for training, Section 00 for development, and Section 23 for the final test. Table 3 gives statistics for the Penn Treebank. For the CCG experiments, original sentences from CCGBank are transformed into bags of words, with sequence information removed, and passed to our system as input data. The system outputs are compared to the original sentences for evaluation. Following Wan et al. (2009), we use the BLEU metric (Papineni et al. 2002) for string comparison. Although BLEU is not the perfect measure of fluency or grammaticality, being based on n-gram precision, it is currently widely used for automatic evaluation and allows us to compare directly with existing work (Wan et al. 2009). Note also that one criticism of BLEU for evaluating machine translation systems (i.e., that it can only register exact matches between the same words in the system and reference translation), does not apply here, because the system output always contains the same words as the original reference sentence. For the dependency-based experiments, gol","@endWordPosition":"9389","@position":"56192","annotationId":"T28","@startWordPosition":"9386","@citStr":"Papineni et al. 2002"}]},"title":{"#tail":"\n","#text":"BLEU: A method for automatic evaluation of machine translation."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Kishore Papineni"},{"#tail":"\n","#text":"Salim Roukos"},{"#tail":"\n","#text":"Todd Ward"},{"#tail":"\n","#text":"Wei-Jing Zhu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2008"},"rawString":{"#tail":"\n","#text":"Shen, Libin and Aravind Joshi. 2008. LTAG dependency parsing with bidirectional incremental construction. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 495\u2013504, Honolulu. HI."},"#text":"\n","pages":{"#tail":"\n","#text":"495--504"},"marker":{"#tail":"\n","#text":"Shen, Joshi, 2008"},"location":{"#tail":"\n","#text":"Honolulu. HI."},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"n, Satta, and Joshi (2007), which maintains a queue of hypotheses during search, and performs learning to ensure that the highest-scored hypothesis in the queue is correct. However, in easy-first search, hypotheses from the queue are ranked by the score of their next action, rather than the hypothesis score. Moreover, Shen, Satta, and Joshi use aggressive learning and regenerate the queue after each update, but we perform non-aggressive learning, which is faster and is more feasible for our large and complex search space. Similar methods to Shen, Satta, and Joshi (2007) have also been used in Shen and Joshi (2008) and Goldberg and Elhadad (2010). Another framework that closely integrates learning and search is SEARN (Daum´e, Langford, and Marcu 2009), which addresses structured prediction problems that can be transformed into a series of simple classification tasks. The transformation is akin to greedy search in the sense that the complex structure is constructed by sequential classification decisions. The key problem that SEARN addresses is how to learn the tth decision based on the previous t − 1 decisions, so that the overall loss in the resulting structure is minimized. Similar to our framework, SE","@endWordPosition":"15260","@position":"93316","annotationId":"T29","@startWordPosition":"15257","@citStr":"Shen and Joshi (2008)"}},"title":{"#tail":"\n","#text":"LTAG dependency parsing with bidirectional incremental construction."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Libin Shen"},{"#tail":"\n","#text":"Aravind Joshi"}]}},{"date":{"#tail":"\n","#text":"2009"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"teedman 2007) and the Penn Treebank (Marcus, Santorini, and Marcinkiewicz 1993) for CCG and dependency data, respectively. CCGbank is the CCG version of the Penn Treebank. Standard splits were used for both: Sections 02\u201321 for training, Section 00 for development, and Section 23 for the final test. Table 3 gives statistics for the Penn Treebank. For the CCG experiments, original sentences from CCGBank are transformed into bags of words, with sequence information removed, and passed to our system as input data. The system outputs are compared to the original sentences for evaluation. Following Wan et al. (2009), we use the BLEU metric (Papineni et al. 2002) for string comparison. Although BLEU is not the perfect measure of fluency or grammaticality, being based on n-gram precision, it is currently widely used for automatic evaluation and allows us to compare directly with existing work (Wan et al. 2009). Note also that one criticism of BLEU for evaluating machine translation systems (i.e., that it can only register exact matches between the same words in the system and reference translation), does not apply here, because the system output always contains the same words as the original reference sent","@endWordPosition":"9380","@position":"56145","annotationId":"T30","@startWordPosition":"9377","@citStr":"Wan et al. (2009)"},{"#tail":"\n","#text":"w York-based Loews Corp. that makes Kent cigarettes, stopped using crocidolite in its Micronite cigarette filters in 1956. Although preliminary findings were reported more than a year ago, the latest results appear in today\u2019s New England Journal of Medicine, a forum likely to bring new attention to the problem. A Lorillard spokewoman said, \u201cThis is an old story. We\u2019re talking about years ago before anyone heard of asbestos having any questionable properties. 530 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 9 Final test results on the standard word ordering task. System BLEU Wan et al. (2009) (dependency) 33.7 Zhang and Clark (2011) (CCG) 40.1 Zhang, Blackwood, and Clark (2012) (CCG) 42.5 Zhang, Blackwood, and Clark (2012) +LM (CCG) 43.8 Zhang (2013) (dependency) 46.8 This article (CCG) 46.5 This article (dependency) 48.7 expansion of negative examples during training. For direct comparison with previous work, the timeout threshold was set to 5 sec. Our new system of this article significantly outperforms all previous systems and achieves the best published BLEU score on this task. It is worth noting that our systems without a language model outperform the system of our 2012 paper","@endWordPosition":"13262","@position":"80669","annotationId":"T31","@startWordPosition":"13259","@citStr":"Wan et al. (2009)"},{"#tail":"\n","#text":"6.2K gold-standard ordered dependency trees. Table 10 shows the results of our system and the top two participating systems of the shared task. Our system outperforms the STUMABA system by 0.5 BLEU points, and the DCU system by 3.8 BLEU points. More evaluation of the system was published in Song et al. (2014). 6. Related Work There is a recent line of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart realization, drawing analogies between realization and parsing of free order languages. He discussed efficiency issues and provided solutions to s","@endWordPosition":"14668","@position":"89530","annotationId":"T32","@startWordPosition":"14665","@citStr":"Wan et al. (2009)"}]},"title":{"#tail":"\n","#text":"Improving grammaticality in statistical sentence generation: Introducing a dependency spanning tree algorithm with an argument satisfaction model."},"volume":{"#tail":"\n","#text":"41"},"#tail":"\n","rawString":{"#tail":"\n","#text":"Wan, Stephen, Mark Dras, Robert Dale, and C´ecile Paris. 2009. Improving grammaticality in statistical sentence generation: Introducing a dependency spanning tree algorithm with an argument satisfaction model. In Proceedings of the 12th Conference of the European Chapter of the ACL (EACL 2009), pages 852\u2013860, Athens. Computational Linguistics Volume 41, Number 3"},"journal":{"#tail":"\n","#text":"Computational Linguistics"},"pages":{"#tail":"\n","#text":"852--860"},"#text":"\n","marker":{"#tail":"\n","#text":"Wan, Dras, Dale, Paris, 2009"},"location":{"#tail":"\n","#text":"Athens."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 12th Conference of the European Chapter of the ACL (EACL"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Stephen Wan"},{"#tail":"\n","#text":"Mark Dras"},{"#tail":"\n","#text":"Robert Dale"},{"#tail":"\n","#text":"C´ecile Paris"}]}},{"date":{"#tail":"\n","#text":"2009"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"teedman 2007) and the Penn Treebank (Marcus, Santorini, and Marcinkiewicz 1993) for CCG and dependency data, respectively. CCGbank is the CCG version of the Penn Treebank. Standard splits were used for both: Sections 02\u201321 for training, Section 00 for development, and Section 23 for the final test. Table 3 gives statistics for the Penn Treebank. For the CCG experiments, original sentences from CCGBank are transformed into bags of words, with sequence information removed, and passed to our system as input data. The system outputs are compared to the original sentences for evaluation. Following Wan et al. (2009), we use the BLEU metric (Papineni et al. 2002) for string comparison. Although BLEU is not the perfect measure of fluency or grammaticality, being based on n-gram precision, it is currently widely used for automatic evaluation and allows us to compare directly with existing work (Wan et al. 2009). Note also that one criticism of BLEU for evaluating machine translation systems (i.e., that it can only register exact matches between the same words in the system and reference translation), does not apply here, because the system output always contains the same words as the original reference sent","@endWordPosition":"9380","@position":"56145","annotationId":"T33","@startWordPosition":"9377","@citStr":"Wan et al. (2009)"},{"#tail":"\n","#text":"w York-based Loews Corp. that makes Kent cigarettes, stopped using crocidolite in its Micronite cigarette filters in 1956. Although preliminary findings were reported more than a year ago, the latest results appear in today\u2019s New England Journal of Medicine, a forum likely to bring new attention to the problem. A Lorillard spokewoman said, \u201cThis is an old story. We\u2019re talking about years ago before anyone heard of asbestos having any questionable properties. 530 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 9 Final test results on the standard word ordering task. System BLEU Wan et al. (2009) (dependency) 33.7 Zhang and Clark (2011) (CCG) 40.1 Zhang, Blackwood, and Clark (2012) (CCG) 42.5 Zhang, Blackwood, and Clark (2012) +LM (CCG) 43.8 Zhang (2013) (dependency) 46.8 This article (CCG) 46.5 This article (dependency) 48.7 expansion of negative examples during training. For direct comparison with previous work, the timeout threshold was set to 5 sec. Our new system of this article significantly outperforms all previous systems and achieves the best published BLEU score on this task. It is worth noting that our systems without a language model outperform the system of our 2012 paper","@endWordPosition":"13262","@position":"80669","annotationId":"T34","@startWordPosition":"13259","@citStr":"Wan et al. (2009)"},{"#tail":"\n","#text":"6.2K gold-standard ordered dependency trees. Table 10 shows the results of our system and the top two participating systems of the shared task. Our system outperforms the STUMABA system by 0.5 BLEU points, and the DCU system by 3.8 BLEU points. More evaluation of the system was published in Song et al. (2014). 6. Related Work There is a recent line of research on text-to-text generation, which studies the linearization of dependency structures (Barzilay and McKeown 2005; Filippova and Strube 2007, 2009; He et al. 2009; Bohnet et al. 2010; Guo, Hogan, and van Genabith 2011). On the other hand, Wan et al. (2009) study the ordering of a bag of words without any dependency information given. We generalize the word ordering problem, and formulate it as a task of ordering a multi-set of words, regardless of input syntactic constraints. Our bottom\u2013up, chart-based generation algorithm is inspired by the line of work on chart-based realization (Kay 1996; Carroll et al. 1999; White 2004, 2006; Carroll and Oepen 2005). Kay (1996) first proposed the concept of chart realization, drawing analogies between realization and parsing of free order languages. He discussed efficiency issues and provided solutions to s","@endWordPosition":"14668","@position":"89530","annotationId":"T35","@startWordPosition":"14665","@citStr":"Wan et al. (2009)"}]},"title":{"#tail":"\n","#text":"Improving grammaticality in statistical sentence generation: Introducing a dependency spanning tree algorithm with an argument satisfaction model."},"volume":{"#tail":"\n","#text":"41"},"#tail":"\n","rawString":{"#tail":"\n","#text":"Wan, Stephen, Mark Dras, Robert Dale, and C´ecile Paris. 2009. Improving grammaticality in statistical sentence generation: Introducing a dependency spanning tree algorithm with an argument satisfaction model. In Proceedings of the 12th Conference of the European Chapter of the ACL (EACL 2009), pages 852\u2013860, Athens. Computational Linguistics Volume 41, Number 3"},"journal":{"#tail":"\n","#text":"Computational Linguistics"},"pages":{"#tail":"\n","#text":"852--860"},"#text":"\n","marker":{"#tail":"\n","#text":"Wan, Dras, Dale, Paris, 2009"},"location":{"#tail":"\n","#text":"Athens."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 12th Conference of the European Chapter of the ACL (EACL"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Stephen Wan"},{"#tail":"\n","#text":"Mark Dras"},{"#tail":"\n","#text":"Robert Dale"},{"#tail":"\n","#text":"C´ecile Paris"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2009"},"rawString":{"#tail":"\n","#text":"White, Michael and Rajakrishnan Rajkumar. 2009. Perceptron reranking for CCG realization. In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 410\u2013419, Singapore."},"#text":"\n","pages":{"#tail":"\n","#text":"410--419"},"marker":{"#tail":"\n","#text":"White, Rajkumar, 2009"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"he dependency system; it is similar to the chunking constraints of White (2006) for CCG-based realization. White (2004) describes a system that performs CCG realization using best-first search. The search process of our algorithm is similar to that work, but the input is different: logical forms in the case of White (2004) and bags of words in our case. Further along this line, Espinosa, White, and Mehay (2008) also describe a CCG-based realization system, applying \u201chypertagging\u201d\u2014a form of supertagging\u2014to logical forms in order to make use of CCG lexical categories in the realization process. White and Rajkumar (2009) further use perceptron reranking on n-best realization output to improve the quality. The use of perceptron learning to improve search has been proposed in guided learning for easy-first search (Shen, Satta, and Joshi 2007) and LaSO (Daum´e and Marcu 2005). LaSO is a general framework for various search strategies. Our learning algorithm is similar to LaSO with best-first inference, but the parameter updates are different. In particular, LaSO updates parameters when all correct hypotheses are lost, but our algorithm makes an update as soon as the top item from the agenda is incorrect. Our alg","@endWordPosition":"14990","@position":"91583","annotationId":"T36","@startWordPosition":"14987","@citStr":"White and Rajkumar (2009)"}},"title":{"#tail":"\n","#text":"Perceptron reranking for CCG realization."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing,"},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Michael White"},{"#tail":"\n","#text":"Rajakrishnan Rajkumar"}]}},{"volume":{"#tail":"\n","#text":"37"},"#tail":"\n","date":{"#tail":"\n","#text":"2011"},"rawString":{"#tail":"\n","#text":"Zhang, Yue and Stephen Clark. 2011. Syntactic processing using the generalized perceptron and beam search. Computational Linguistics, 37(1):105\u2013151."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","issue":{"#tail":"\n","#text":"1"},"marker":{"#tail":"\n","#text":"Zhang, Clark, 2011"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" of chart-based generation, which has many similarities to the problem we address in his seminal paper. We tackle the high complexity by using learning-guided best-first search, exploring a small path in the whole search space, which contains the most likely structures according to the discriminative model. One of the contributions of this article is to introduce, and provide a discriminative solution to, this difficult structured prediction problem, which is an interesting machine learning problem in its own right. This article is based on, and significantly extends, three conference papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012; Zhang 2013). It includes a more detailed description and discussion of our guided-search approach to syntax-based word ordering, bringing together the CCG- and dependency-based systems under one unified framework. In addition, we discuss the limitations of our previous work, and show that a better model can be developed through scaling of the feature vectors. The resulting model allows fair comparison of constituents of different sizes, and enables the learning algorithms to expand negative examples during training, which leads to significantly improved resu","@endWordPosition":"1342","@position":"8912","annotationId":"T37","@startWordPosition":"1339","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"heses in all possible ways to produce new hypotheses. The data structure for accepted hypotheses is similar to that used for best-first parsing (Caraballo and Charniak 1998), and we adopt the term chart for this structure. However, note there are important differences to the parsing problem. First, the parsing problem has a fixed word order and is considerably simpler than the word ordering problem we are tackling. Second, although we use the term chart, the structure for accepted hypotheses is not a dynamic programming chart in the same way as for the parsing problem. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we applied a set of beams to this structure, which makes it similar to the data structure used for phrase-based MT decoding (Koehn 2010). However, we will show later that this structure is unnecessary when the model has more discriminative power, and a conceptually simpler single beam can be used. We will also investigate the possibility of applying dynamic-programming-style pruning to the chart. We now give an overview of the training algorithm, which is crucial to both the speed and accuracy of the resulting decoder. CCGBank (Hockenmaier and Steedman 2007","@endWordPosition":"2183","@position":"14259","annotationId":"T38","@startWordPosition":"2180","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"raining goal is to find a large separating margin between the scores of all positive examples and all negative examples. For CKY parsing, the highest-scored negative example can be found via optimal Viterbi decoding, according to the current model, and this negative example can be used in place of all negative examples during the updating of parameters. In contrast, our best-first search algorithm cannot find an output in reasonable time unless a good model has already been trained, and therefore we cannot run the decoding algorithm in the standard way during training. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we proposed an approximate online training algorithm, which forces positive examples to be kept in the hypothesis space without being discarded, and prevents the expansion of negative examples during the training process (so that the hypothesis space does not get too large). This algorithm ensures training efficiency, but greatly limits the space of negative examples that is explored during training (and hence fails to replicate the conditions experienced at test 507 Computational Linguistics Volume 41, Number 3 time). In this article, we will show that, wi","@endWordPosition":"2624","@position":"17117","annotationId":"T39","@startWordPosition":"2621","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":" DPCHARTPRUNE(c, e) 17: if e\u2032 is e then 18: continue 19: end if 20: for e\u2032 E UNARY(e, grammar) do 21: APPEND(new, e\u2032) 22: end for 23: for e˜ E c do 24: if CANCOMBINE(e, ˜e, grammar) then 25: e\u2032 +- BINARY(e, ˜e, grammar) 26: APPEND(new, e\u2032) 27: end if 28: if CANCOMBINE(˜e, e, grammar) then 29: e\u2032 +- BINARY(˜e, e, grammar) 30: APPEND(new, e\u2032) 31: end if 32: end for 33: for e\u2032 E new do 34: ADD(a, e\u2032) 35: end for 36: ADD(c, e) 37: end while One way of viewing the training process is that it pushes gold-standard edges towards the top of the agenda, and, crucially, pushes them above non-gold edges (Zhang and Clark 2011). Given a positive example e+ and a negative example e−, a perceptronstyle update is used to penalize the score for ϕ(e−) and reward the score of ϕ(e+): θ\u20d7+- \u20d7θ0 + ϕ(e+) − ϕ(e−) Here \u20d7θ0 and θ\u20d7 denote the parameter vectors before and after the update, respectively. This method proved effective empirically (Zhang and Clark 2011), but it did not 515 Computational Linguistics Volume 41, Number 3 converge well when an n-gram language model was integrated into the system (Zhang, Blackwood, and Clark 2012). Hence we applied an alternative method for score updates that proved more effective than the ","@endWordPosition":"6170","@position":"37697","annotationId":"T40","@startWordPosition":"6167","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"goldstandard). In the second situation, the highest-scored non-gold edge in the chart is taken as the negative example, and removed from the chart after the update. In summary, there are two main differences between Algorithms 2 and 3. First, line 14 in Algorithm 2, which skips the expansion of negative examples, is removed in Algorithm 3. Second, lines 16\u201320 and 42\u201346 are added in Algorithm 3, which correspond to the updating of parameters when a gold-standard edge is removed from the chart. In addition, the definitions of UPDATEPARAMETERS are different for the perceptron training algorithm (Zhang and Clark 2011), the large-margin training algorithm (Zhang, Blackwood, and Clark 2012), and the large-margin algorithm of this article, as explained earlier. 4. Dependency-Based Word Ordering and Tree Linearization As well as CCG, the same approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, ","@endWordPosition":"7250","@position":"43962","annotationId":"T41","@startWordPosition":"7247","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"taking as base NPs those NPs that do not recursively contain other NPs. These base NPs mostly correspond to the base NPs from the Penn Treebank: In the training data, there are 242,813 Penn Treebank base NPs with an average size of 1.09, and 216,670 CCGBank base NPs with an average size of 1.19. 5.1 Convergence of Training The plots in Figure 4 show the development test scores of three CCG models by the number of training iterations. The three curves represent the scaled model of this article, the online large-margin model from Zhang, Blackwood, and Clark (2012), and the perceptron model from Zhang and Clark (2011), respectively. For each curve, the BLEU score generally increases as the number of training iterations increases, until it reaches its maximum at a particular iteration. We use the number of training iterations 2 http://w3.msi.vxu.se/~nivre/research/Penn2Malt.html. 523 Computational Linguistics Volume 41, Number 3 Figure 4 BLEU scores of the perceptron, large-margin, and scaled large-margin CCG models by the number of training iterations. that gives the best development test scores for the training of our model when testing on the test data. Another way to observe the convergence of training ","@endWordPosition":"9654","@position":"57813","annotationId":"T42","@startWordPosition":"9651","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"model without expansion of negative examples was used in this set of experiments. 5.4 Example Outputs Example output for sentences in the development set is shown in Tables 5 and 6, grouped by sentence length. The CCG systems of our previous conference papers and this article are compared, all with the timeout value set to 5 sec. All three systems perform relatively better with smaller sentences. For longer sentences, the fluency of 526 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 5 Example development output for the CCG-based systems and sentences with fewer than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) . A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman said This is an old story, said, This is an old story. said, This is an old story. said, \u201c This is an old story. It today has no bearing on It today has no bearing on It has no bearing on our It has no bearing on our our work force. our work force. work force today. work force today. No price for the new No price for the new No price has been set for No price for the new shares shares has been set. shares has been set. the new shares. has been","@endWordPosition":"10565","@position":"63514","annotationId":"T43","@startWordPosition":"10562","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"a. competition. the hoopla. competition. Pamela Sebastian Pamela Sebastian in Pamela Sebastian in New Pamela Sebastian in New contributed to New York New York contributed to York contributed to this York contributed to this in this article. this article. article. article. painted oils in by Lighthouse II was the oils in Lighthouse II was Lighthouse II was painted Lighthouse II was the playwright in 1901 ... in painted by the playwright in oils by the playwright in playwright in 1901 ... oils in 1901 ... 1901 ... Example output for the CCG-based systems and sentences with fewer than ten words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Mr. Vinken is Elsevier N.V., Mr. Vinken is chairman of Mr. Vinken is chairman of Mr. Vinken is chairman of chairman of the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch publishing group. publishing group. publishing group. publishing group. asbestos-related diseases have Four, including three of the five surviving workers with recently diagnosed cancer. , interest rates expect to slide amid further declines in Yields on money-market mutual funds that portfolio managers continued. signs The thrift hold","@endWordPosition":"10918","@position":"65566","annotationId":"T44","@startWordPosition":"10915","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Example output for the CCG-based systems and sentences between 11 and 20 words. 527 Computational Linguistics Volume 41, Number 3 Table 6 Example development output for the CCG-based systems and sentences with more than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Dr. Talcott from Boston the medical schools from researchers led Dr. Talcott Dr. Talcott led a team of University and a team led Dr. Talcott and Harvard of Harvard University and researchers from the researchers and of the University of the National the National Cancer National Cancer Institute National Cancer Institute Cancer Institute and a Institute and a team of the and the medical schools of of the medical schools team of led Boston medical schools from Harvard University and Harvard University University Boston University. Boston","@endWordPosition":"11271","@position":"68050","annotationId":"T45","@startWordPosition":"11268","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"id by Toronto shareholders Financial Corp. approved Pacific First Financial Pacific First Financial said Pacific First Financial its acquisition of Royal Corp. said shareholders Corp. approved $ 27 or a Corp. approved its Trustco Ltd. for approved its acquisition by share, for its acquisition of acquisition of Royal shareholders by $ 212 Royal Trustco Ltd. of shareholders by Toronto. Trustco Ltd. for $ 212 million, or $ 27 a share. Toronto for $ 27 a share, or $ 212 million million, or $ 27 a share. $ 212 million. Example output for the CCG-based systems and sentences between 21 and 40 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) European history, an European history, only when an Albuquerque, It\u2019s as if France decided to educational research French history questions, N.M., psychiatrist, say an give only French history organization, the test and an educational research educational research questions to students in a only French history organization, John Cannell, organization decided to European history class, questions, Education, a Education, France and a give students and a and when everybody aces European history class, European history class European histo","@endWordPosition":"11571","@position":"69977","annotationId":"T46","@startWordPosition":"11568","@citStr":"Zhang and Clark (2011)"}]},"title":{"#tail":"\n","#text":"Syntactic processing using the generalized perceptron and beam search."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Yue Zhang"},{"#tail":"\n","#text":"Stephen Clark"}]}},{"volume":{"#tail":"\n","#text":"37"},"#tail":"\n","date":{"#tail":"\n","#text":"2011"},"rawString":{"#tail":"\n","#text":"Zhang, Yue and Stephen Clark. 2011. Syntactic processing using the generalized perceptron and beam search. Computational Linguistics, 37(1):105\u2013151."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","issue":{"#tail":"\n","#text":"1"},"marker":{"#tail":"\n","#text":"Zhang, Clark, 2011"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" of chart-based generation, which has many similarities to the problem we address in his seminal paper. We tackle the high complexity by using learning-guided best-first search, exploring a small path in the whole search space, which contains the most likely structures according to the discriminative model. One of the contributions of this article is to introduce, and provide a discriminative solution to, this difficult structured prediction problem, which is an interesting machine learning problem in its own right. This article is based on, and significantly extends, three conference papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012; Zhang 2013). It includes a more detailed description and discussion of our guided-search approach to syntax-based word ordering, bringing together the CCG- and dependency-based systems under one unified framework. In addition, we discuss the limitations of our previous work, and show that a better model can be developed through scaling of the feature vectors. The resulting model allows fair comparison of constituents of different sizes, and enables the learning algorithms to expand negative examples during training, which leads to significantly improved resu","@endWordPosition":"1342","@position":"8912","annotationId":"T47","@startWordPosition":"1339","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"heses in all possible ways to produce new hypotheses. The data structure for accepted hypotheses is similar to that used for best-first parsing (Caraballo and Charniak 1998), and we adopt the term chart for this structure. However, note there are important differences to the parsing problem. First, the parsing problem has a fixed word order and is considerably simpler than the word ordering problem we are tackling. Second, although we use the term chart, the structure for accepted hypotheses is not a dynamic programming chart in the same way as for the parsing problem. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we applied a set of beams to this structure, which makes it similar to the data structure used for phrase-based MT decoding (Koehn 2010). However, we will show later that this structure is unnecessary when the model has more discriminative power, and a conceptually simpler single beam can be used. We will also investigate the possibility of applying dynamic-programming-style pruning to the chart. We now give an overview of the training algorithm, which is crucial to both the speed and accuracy of the resulting decoder. CCGBank (Hockenmaier and Steedman 2007","@endWordPosition":"2183","@position":"14259","annotationId":"T48","@startWordPosition":"2180","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"raining goal is to find a large separating margin between the scores of all positive examples and all negative examples. For CKY parsing, the highest-scored negative example can be found via optimal Viterbi decoding, according to the current model, and this negative example can be used in place of all negative examples during the updating of parameters. In contrast, our best-first search algorithm cannot find an output in reasonable time unless a good model has already been trained, and therefore we cannot run the decoding algorithm in the standard way during training. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we proposed an approximate online training algorithm, which forces positive examples to be kept in the hypothesis space without being discarded, and prevents the expansion of negative examples during the training process (so that the hypothesis space does not get too large). This algorithm ensures training efficiency, but greatly limits the space of negative examples that is explored during training (and hence fails to replicate the conditions experienced at test 507 Computational Linguistics Volume 41, Number 3 time). In this article, we will show that, wi","@endWordPosition":"2624","@position":"17117","annotationId":"T49","@startWordPosition":"2621","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":" DPCHARTPRUNE(c, e) 17: if e\u2032 is e then 18: continue 19: end if 20: for e\u2032 E UNARY(e, grammar) do 21: APPEND(new, e\u2032) 22: end for 23: for e˜ E c do 24: if CANCOMBINE(e, ˜e, grammar) then 25: e\u2032 +- BINARY(e, ˜e, grammar) 26: APPEND(new, e\u2032) 27: end if 28: if CANCOMBINE(˜e, e, grammar) then 29: e\u2032 +- BINARY(˜e, e, grammar) 30: APPEND(new, e\u2032) 31: end if 32: end for 33: for e\u2032 E new do 34: ADD(a, e\u2032) 35: end for 36: ADD(c, e) 37: end while One way of viewing the training process is that it pushes gold-standard edges towards the top of the agenda, and, crucially, pushes them above non-gold edges (Zhang and Clark 2011). Given a positive example e+ and a negative example e−, a perceptronstyle update is used to penalize the score for ϕ(e−) and reward the score of ϕ(e+): θ\u20d7+- \u20d7θ0 + ϕ(e+) − ϕ(e−) Here \u20d7θ0 and θ\u20d7 denote the parameter vectors before and after the update, respectively. This method proved effective empirically (Zhang and Clark 2011), but it did not 515 Computational Linguistics Volume 41, Number 3 converge well when an n-gram language model was integrated into the system (Zhang, Blackwood, and Clark 2012). Hence we applied an alternative method for score updates that proved more effective than the ","@endWordPosition":"6170","@position":"37697","annotationId":"T50","@startWordPosition":"6167","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"goldstandard). In the second situation, the highest-scored non-gold edge in the chart is taken as the negative example, and removed from the chart after the update. In summary, there are two main differences between Algorithms 2 and 3. First, line 14 in Algorithm 2, which skips the expansion of negative examples, is removed in Algorithm 3. Second, lines 16\u201320 and 42\u201346 are added in Algorithm 3, which correspond to the updating of parameters when a gold-standard edge is removed from the chart. In addition, the definitions of UPDATEPARAMETERS are different for the perceptron training algorithm (Zhang and Clark 2011), the large-margin training algorithm (Zhang, Blackwood, and Clark 2012), and the large-margin algorithm of this article, as explained earlier. 4. Dependency-Based Word Ordering and Tree Linearization As well as CCG, the same approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, ","@endWordPosition":"7250","@position":"43962","annotationId":"T51","@startWordPosition":"7247","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"taking as base NPs those NPs that do not recursively contain other NPs. These base NPs mostly correspond to the base NPs from the Penn Treebank: In the training data, there are 242,813 Penn Treebank base NPs with an average size of 1.09, and 216,670 CCGBank base NPs with an average size of 1.19. 5.1 Convergence of Training The plots in Figure 4 show the development test scores of three CCG models by the number of training iterations. The three curves represent the scaled model of this article, the online large-margin model from Zhang, Blackwood, and Clark (2012), and the perceptron model from Zhang and Clark (2011), respectively. For each curve, the BLEU score generally increases as the number of training iterations increases, until it reaches its maximum at a particular iteration. We use the number of training iterations 2 http://w3.msi.vxu.se/~nivre/research/Penn2Malt.html. 523 Computational Linguistics Volume 41, Number 3 Figure 4 BLEU scores of the perceptron, large-margin, and scaled large-margin CCG models by the number of training iterations. that gives the best development test scores for the training of our model when testing on the test data. Another way to observe the convergence of training ","@endWordPosition":"9654","@position":"57813","annotationId":"T52","@startWordPosition":"9651","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"model without expansion of negative examples was used in this set of experiments. 5.4 Example Outputs Example output for sentences in the development set is shown in Tables 5 and 6, grouped by sentence length. The CCG systems of our previous conference papers and this article are compared, all with the timeout value set to 5 sec. All three systems perform relatively better with smaller sentences. For longer sentences, the fluency of 526 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 5 Example development output for the CCG-based systems and sentences with fewer than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) . A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman said This is an old story, said, This is an old story. said, This is an old story. said, \u201c This is an old story. It today has no bearing on It today has no bearing on It has no bearing on our It has no bearing on our our work force. our work force. work force today. work force today. No price for the new No price for the new No price has been set for No price for the new shares shares has been set. shares has been set. the new shares. has been","@endWordPosition":"10565","@position":"63514","annotationId":"T53","@startWordPosition":"10562","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"a. competition. the hoopla. competition. Pamela Sebastian Pamela Sebastian in Pamela Sebastian in New Pamela Sebastian in New contributed to New York New York contributed to York contributed to this York contributed to this in this article. this article. article. article. painted oils in by Lighthouse II was the oils in Lighthouse II was Lighthouse II was painted Lighthouse II was the playwright in 1901 ... in painted by the playwright in oils by the playwright in playwright in 1901 ... oils in 1901 ... 1901 ... Example output for the CCG-based systems and sentences with fewer than ten words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Mr. Vinken is Elsevier N.V., Mr. Vinken is chairman of Mr. Vinken is chairman of Mr. Vinken is chairman of chairman of the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch publishing group. publishing group. publishing group. publishing group. asbestos-related diseases have Four, including three of the five surviving workers with recently diagnosed cancer. , interest rates expect to slide amid further declines in Yields on money-market mutual funds that portfolio managers continued. signs The thrift hold","@endWordPosition":"10918","@position":"65566","annotationId":"T54","@startWordPosition":"10915","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Example output for the CCG-based systems and sentences between 11 and 20 words. 527 Computational Linguistics Volume 41, Number 3 Table 6 Example development output for the CCG-based systems and sentences with more than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Dr. Talcott from Boston the medical schools from researchers led Dr. Talcott Dr. Talcott led a team of University and a team led Dr. Talcott and Harvard of Harvard University and researchers from the researchers and of the University of the National the National Cancer National Cancer Institute National Cancer Institute Cancer Institute and a Institute and a team of the and the medical schools of of the medical schools team of led Boston medical schools from Harvard University and Harvard University University Boston University. Boston","@endWordPosition":"11271","@position":"68050","annotationId":"T55","@startWordPosition":"11268","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"id by Toronto shareholders Financial Corp. approved Pacific First Financial Pacific First Financial said Pacific First Financial its acquisition of Royal Corp. said shareholders Corp. approved $ 27 or a Corp. approved its Trustco Ltd. for approved its acquisition by share, for its acquisition of acquisition of Royal shareholders by $ 212 Royal Trustco Ltd. of shareholders by Toronto. Trustco Ltd. for $ 212 million, or $ 27 a share. Toronto for $ 27 a share, or $ 212 million million, or $ 27 a share. $ 212 million. Example output for the CCG-based systems and sentences between 21 and 40 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) European history, an European history, only when an Albuquerque, It\u2019s as if France decided to educational research French history questions, N.M., psychiatrist, say an give only French history organization, the test and an educational research educational research questions to students in a only French history organization, John Cannell, organization decided to European history class, questions, Education, a Education, France and a give students and a and when everybody aces European history class, European history class European histo","@endWordPosition":"11571","@position":"69977","annotationId":"T56","@startWordPosition":"11568","@citStr":"Zhang and Clark (2011)"}]},"title":{"#tail":"\n","#text":"Syntactic processing using the generalized perceptron and beam search."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Yue Zhang"},{"#tail":"\n","#text":"Stephen Clark"}]}},{"volume":{"#tail":"\n","#text":"37"},"#tail":"\n","date":{"#tail":"\n","#text":"2011"},"rawString":{"#tail":"\n","#text":"Zhang, Yue and Stephen Clark. 2011. Syntactic processing using the generalized perceptron and beam search. Computational Linguistics, 37(1):105\u2013151."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","issue":{"#tail":"\n","#text":"1"},"marker":{"#tail":"\n","#text":"Zhang, Clark, 2011"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" of chart-based generation, which has many similarities to the problem we address in his seminal paper. We tackle the high complexity by using learning-guided best-first search, exploring a small path in the whole search space, which contains the most likely structures according to the discriminative model. One of the contributions of this article is to introduce, and provide a discriminative solution to, this difficult structured prediction problem, which is an interesting machine learning problem in its own right. This article is based on, and significantly extends, three conference papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012; Zhang 2013). It includes a more detailed description and discussion of our guided-search approach to syntax-based word ordering, bringing together the CCG- and dependency-based systems under one unified framework. In addition, we discuss the limitations of our previous work, and show that a better model can be developed through scaling of the feature vectors. The resulting model allows fair comparison of constituents of different sizes, and enables the learning algorithms to expand negative examples during training, which leads to significantly improved resu","@endWordPosition":"1342","@position":"8912","annotationId":"T57","@startWordPosition":"1339","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"heses in all possible ways to produce new hypotheses. The data structure for accepted hypotheses is similar to that used for best-first parsing (Caraballo and Charniak 1998), and we adopt the term chart for this structure. However, note there are important differences to the parsing problem. First, the parsing problem has a fixed word order and is considerably simpler than the word ordering problem we are tackling. Second, although we use the term chart, the structure for accepted hypotheses is not a dynamic programming chart in the same way as for the parsing problem. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we applied a set of beams to this structure, which makes it similar to the data structure used for phrase-based MT decoding (Koehn 2010). However, we will show later that this structure is unnecessary when the model has more discriminative power, and a conceptually simpler single beam can be used. We will also investigate the possibility of applying dynamic-programming-style pruning to the chart. We now give an overview of the training algorithm, which is crucial to both the speed and accuracy of the resulting decoder. CCGBank (Hockenmaier and Steedman 2007","@endWordPosition":"2183","@position":"14259","annotationId":"T58","@startWordPosition":"2180","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"raining goal is to find a large separating margin between the scores of all positive examples and all negative examples. For CKY parsing, the highest-scored negative example can be found via optimal Viterbi decoding, according to the current model, and this negative example can be used in place of all negative examples during the updating of parameters. In contrast, our best-first search algorithm cannot find an output in reasonable time unless a good model has already been trained, and therefore we cannot run the decoding algorithm in the standard way during training. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we proposed an approximate online training algorithm, which forces positive examples to be kept in the hypothesis space without being discarded, and prevents the expansion of negative examples during the training process (so that the hypothesis space does not get too large). This algorithm ensures training efficiency, but greatly limits the space of negative examples that is explored during training (and hence fails to replicate the conditions experienced at test 507 Computational Linguistics Volume 41, Number 3 time). In this article, we will show that, wi","@endWordPosition":"2624","@position":"17117","annotationId":"T59","@startWordPosition":"2621","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":" DPCHARTPRUNE(c, e) 17: if e\u2032 is e then 18: continue 19: end if 20: for e\u2032 E UNARY(e, grammar) do 21: APPEND(new, e\u2032) 22: end for 23: for e˜ E c do 24: if CANCOMBINE(e, ˜e, grammar) then 25: e\u2032 +- BINARY(e, ˜e, grammar) 26: APPEND(new, e\u2032) 27: end if 28: if CANCOMBINE(˜e, e, grammar) then 29: e\u2032 +- BINARY(˜e, e, grammar) 30: APPEND(new, e\u2032) 31: end if 32: end for 33: for e\u2032 E new do 34: ADD(a, e\u2032) 35: end for 36: ADD(c, e) 37: end while One way of viewing the training process is that it pushes gold-standard edges towards the top of the agenda, and, crucially, pushes them above non-gold edges (Zhang and Clark 2011). Given a positive example e+ and a negative example e−, a perceptronstyle update is used to penalize the score for ϕ(e−) and reward the score of ϕ(e+): θ\u20d7+- \u20d7θ0 + ϕ(e+) − ϕ(e−) Here \u20d7θ0 and θ\u20d7 denote the parameter vectors before and after the update, respectively. This method proved effective empirically (Zhang and Clark 2011), but it did not 515 Computational Linguistics Volume 41, Number 3 converge well when an n-gram language model was integrated into the system (Zhang, Blackwood, and Clark 2012). Hence we applied an alternative method for score updates that proved more effective than the ","@endWordPosition":"6170","@position":"37697","annotationId":"T60","@startWordPosition":"6167","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"goldstandard). In the second situation, the highest-scored non-gold edge in the chart is taken as the negative example, and removed from the chart after the update. In summary, there are two main differences between Algorithms 2 and 3. First, line 14 in Algorithm 2, which skips the expansion of negative examples, is removed in Algorithm 3. Second, lines 16\u201320 and 42\u201346 are added in Algorithm 3, which correspond to the updating of parameters when a gold-standard edge is removed from the chart. In addition, the definitions of UPDATEPARAMETERS are different for the perceptron training algorithm (Zhang and Clark 2011), the large-margin training algorithm (Zhang, Blackwood, and Clark 2012), and the large-margin algorithm of this article, as explained earlier. 4. Dependency-Based Word Ordering and Tree Linearization As well as CCG, the same approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, ","@endWordPosition":"7250","@position":"43962","annotationId":"T61","@startWordPosition":"7247","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"taking as base NPs those NPs that do not recursively contain other NPs. These base NPs mostly correspond to the base NPs from the Penn Treebank: In the training data, there are 242,813 Penn Treebank base NPs with an average size of 1.09, and 216,670 CCGBank base NPs with an average size of 1.19. 5.1 Convergence of Training The plots in Figure 4 show the development test scores of three CCG models by the number of training iterations. The three curves represent the scaled model of this article, the online large-margin model from Zhang, Blackwood, and Clark (2012), and the perceptron model from Zhang and Clark (2011), respectively. For each curve, the BLEU score generally increases as the number of training iterations increases, until it reaches its maximum at a particular iteration. We use the number of training iterations 2 http://w3.msi.vxu.se/~nivre/research/Penn2Malt.html. 523 Computational Linguistics Volume 41, Number 3 Figure 4 BLEU scores of the perceptron, large-margin, and scaled large-margin CCG models by the number of training iterations. that gives the best development test scores for the training of our model when testing on the test data. Another way to observe the convergence of training ","@endWordPosition":"9654","@position":"57813","annotationId":"T62","@startWordPosition":"9651","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"model without expansion of negative examples was used in this set of experiments. 5.4 Example Outputs Example output for sentences in the development set is shown in Tables 5 and 6, grouped by sentence length. The CCG systems of our previous conference papers and this article are compared, all with the timeout value set to 5 sec. All three systems perform relatively better with smaller sentences. For longer sentences, the fluency of 526 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 5 Example development output for the CCG-based systems and sentences with fewer than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) . A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman said This is an old story, said, This is an old story. said, This is an old story. said, \u201c This is an old story. It today has no bearing on It today has no bearing on It has no bearing on our It has no bearing on our our work force. our work force. work force today. work force today. No price for the new No price for the new No price has been set for No price for the new shares shares has been set. shares has been set. the new shares. has been","@endWordPosition":"10565","@position":"63514","annotationId":"T63","@startWordPosition":"10562","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"a. competition. the hoopla. competition. Pamela Sebastian Pamela Sebastian in Pamela Sebastian in New Pamela Sebastian in New contributed to New York New York contributed to York contributed to this York contributed to this in this article. this article. article. article. painted oils in by Lighthouse II was the oils in Lighthouse II was Lighthouse II was painted Lighthouse II was the playwright in 1901 ... in painted by the playwright in oils by the playwright in playwright in 1901 ... oils in 1901 ... 1901 ... Example output for the CCG-based systems and sentences with fewer than ten words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Mr. Vinken is Elsevier N.V., Mr. Vinken is chairman of Mr. Vinken is chairman of Mr. Vinken is chairman of chairman of the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch publishing group. publishing group. publishing group. publishing group. asbestos-related diseases have Four, including three of the five surviving workers with recently diagnosed cancer. , interest rates expect to slide amid further declines in Yields on money-market mutual funds that portfolio managers continued. signs The thrift hold","@endWordPosition":"10918","@position":"65566","annotationId":"T64","@startWordPosition":"10915","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Example output for the CCG-based systems and sentences between 11 and 20 words. 527 Computational Linguistics Volume 41, Number 3 Table 6 Example development output for the CCG-based systems and sentences with more than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Dr. Talcott from Boston the medical schools from researchers led Dr. Talcott Dr. Talcott led a team of University and a team led Dr. Talcott and Harvard of Harvard University and researchers from the researchers and of the University of the National the National Cancer National Cancer Institute National Cancer Institute Cancer Institute and a Institute and a team of the and the medical schools of of the medical schools team of led Boston medical schools from Harvard University and Harvard University University Boston University. Boston","@endWordPosition":"11271","@position":"68050","annotationId":"T65","@startWordPosition":"11268","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"id by Toronto shareholders Financial Corp. approved Pacific First Financial Pacific First Financial said Pacific First Financial its acquisition of Royal Corp. said shareholders Corp. approved $ 27 or a Corp. approved its Trustco Ltd. for approved its acquisition by share, for its acquisition of acquisition of Royal shareholders by $ 212 Royal Trustco Ltd. of shareholders by Toronto. Trustco Ltd. for $ 212 million, or $ 27 a share. Toronto for $ 27 a share, or $ 212 million million, or $ 27 a share. $ 212 million. Example output for the CCG-based systems and sentences between 21 and 40 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) European history, an European history, only when an Albuquerque, It\u2019s as if France decided to educational research French history questions, N.M., psychiatrist, say an give only French history organization, the test and an educational research educational research questions to students in a only French history organization, John Cannell, organization decided to European history class, questions, Education, a Education, France and a give students and a and when everybody aces European history class, European history class European histo","@endWordPosition":"11571","@position":"69977","annotationId":"T66","@startWordPosition":"11568","@citStr":"Zhang and Clark (2011)"}]},"title":{"#tail":"\n","#text":"Syntactic processing using the generalized perceptron and beam search."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Yue Zhang"},{"#tail":"\n","#text":"Stephen Clark"}]}},{"volume":{"#tail":"\n","#text":"37"},"#tail":"\n","date":{"#tail":"\n","#text":"2011"},"rawString":{"#tail":"\n","#text":"Zhang, Yue and Stephen Clark. 2011. Syntactic processing using the generalized perceptron and beam search. Computational Linguistics, 37(1):105\u2013151."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","issue":{"#tail":"\n","#text":"1"},"marker":{"#tail":"\n","#text":"Zhang, Clark, 2011"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" of chart-based generation, which has many similarities to the problem we address in his seminal paper. We tackle the high complexity by using learning-guided best-first search, exploring a small path in the whole search space, which contains the most likely structures according to the discriminative model. One of the contributions of this article is to introduce, and provide a discriminative solution to, this difficult structured prediction problem, which is an interesting machine learning problem in its own right. This article is based on, and significantly extends, three conference papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012; Zhang 2013). It includes a more detailed description and discussion of our guided-search approach to syntax-based word ordering, bringing together the CCG- and dependency-based systems under one unified framework. In addition, we discuss the limitations of our previous work, and show that a better model can be developed through scaling of the feature vectors. The resulting model allows fair comparison of constituents of different sizes, and enables the learning algorithms to expand negative examples during training, which leads to significantly improved resu","@endWordPosition":"1342","@position":"8912","annotationId":"T67","@startWordPosition":"1339","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"heses in all possible ways to produce new hypotheses. The data structure for accepted hypotheses is similar to that used for best-first parsing (Caraballo and Charniak 1998), and we adopt the term chart for this structure. However, note there are important differences to the parsing problem. First, the parsing problem has a fixed word order and is considerably simpler than the word ordering problem we are tackling. Second, although we use the term chart, the structure for accepted hypotheses is not a dynamic programming chart in the same way as for the parsing problem. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we applied a set of beams to this structure, which makes it similar to the data structure used for phrase-based MT decoding (Koehn 2010). However, we will show later that this structure is unnecessary when the model has more discriminative power, and a conceptually simpler single beam can be used. We will also investigate the possibility of applying dynamic-programming-style pruning to the chart. We now give an overview of the training algorithm, which is crucial to both the speed and accuracy of the resulting decoder. CCGBank (Hockenmaier and Steedman 2007","@endWordPosition":"2183","@position":"14259","annotationId":"T68","@startWordPosition":"2180","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"raining goal is to find a large separating margin between the scores of all positive examples and all negative examples. For CKY parsing, the highest-scored negative example can be found via optimal Viterbi decoding, according to the current model, and this negative example can be used in place of all negative examples during the updating of parameters. In contrast, our best-first search algorithm cannot find an output in reasonable time unless a good model has already been trained, and therefore we cannot run the decoding algorithm in the standard way during training. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we proposed an approximate online training algorithm, which forces positive examples to be kept in the hypothesis space without being discarded, and prevents the expansion of negative examples during the training process (so that the hypothesis space does not get too large). This algorithm ensures training efficiency, but greatly limits the space of negative examples that is explored during training (and hence fails to replicate the conditions experienced at test 507 Computational Linguistics Volume 41, Number 3 time). In this article, we will show that, wi","@endWordPosition":"2624","@position":"17117","annotationId":"T69","@startWordPosition":"2621","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":" DPCHARTPRUNE(c, e) 17: if e\u2032 is e then 18: continue 19: end if 20: for e\u2032 E UNARY(e, grammar) do 21: APPEND(new, e\u2032) 22: end for 23: for e˜ E c do 24: if CANCOMBINE(e, ˜e, grammar) then 25: e\u2032 +- BINARY(e, ˜e, grammar) 26: APPEND(new, e\u2032) 27: end if 28: if CANCOMBINE(˜e, e, grammar) then 29: e\u2032 +- BINARY(˜e, e, grammar) 30: APPEND(new, e\u2032) 31: end if 32: end for 33: for e\u2032 E new do 34: ADD(a, e\u2032) 35: end for 36: ADD(c, e) 37: end while One way of viewing the training process is that it pushes gold-standard edges towards the top of the agenda, and, crucially, pushes them above non-gold edges (Zhang and Clark 2011). Given a positive example e+ and a negative example e−, a perceptronstyle update is used to penalize the score for ϕ(e−) and reward the score of ϕ(e+): θ\u20d7+- \u20d7θ0 + ϕ(e+) − ϕ(e−) Here \u20d7θ0 and θ\u20d7 denote the parameter vectors before and after the update, respectively. This method proved effective empirically (Zhang and Clark 2011), but it did not 515 Computational Linguistics Volume 41, Number 3 converge well when an n-gram language model was integrated into the system (Zhang, Blackwood, and Clark 2012). Hence we applied an alternative method for score updates that proved more effective than the ","@endWordPosition":"6170","@position":"37697","annotationId":"T70","@startWordPosition":"6167","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"goldstandard). In the second situation, the highest-scored non-gold edge in the chart is taken as the negative example, and removed from the chart after the update. In summary, there are two main differences between Algorithms 2 and 3. First, line 14 in Algorithm 2, which skips the expansion of negative examples, is removed in Algorithm 3. Second, lines 16\u201320 and 42\u201346 are added in Algorithm 3, which correspond to the updating of parameters when a gold-standard edge is removed from the chart. In addition, the definitions of UPDATEPARAMETERS are different for the perceptron training algorithm (Zhang and Clark 2011), the large-margin training algorithm (Zhang, Blackwood, and Clark 2012), and the large-margin algorithm of this article, as explained earlier. 4. Dependency-Based Word Ordering and Tree Linearization As well as CCG, the same approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, ","@endWordPosition":"7250","@position":"43962","annotationId":"T71","@startWordPosition":"7247","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"taking as base NPs those NPs that do not recursively contain other NPs. These base NPs mostly correspond to the base NPs from the Penn Treebank: In the training data, there are 242,813 Penn Treebank base NPs with an average size of 1.09, and 216,670 CCGBank base NPs with an average size of 1.19. 5.1 Convergence of Training The plots in Figure 4 show the development test scores of three CCG models by the number of training iterations. The three curves represent the scaled model of this article, the online large-margin model from Zhang, Blackwood, and Clark (2012), and the perceptron model from Zhang and Clark (2011), respectively. For each curve, the BLEU score generally increases as the number of training iterations increases, until it reaches its maximum at a particular iteration. We use the number of training iterations 2 http://w3.msi.vxu.se/~nivre/research/Penn2Malt.html. 523 Computational Linguistics Volume 41, Number 3 Figure 4 BLEU scores of the perceptron, large-margin, and scaled large-margin CCG models by the number of training iterations. that gives the best development test scores for the training of our model when testing on the test data. Another way to observe the convergence of training ","@endWordPosition":"9654","@position":"57813","annotationId":"T72","@startWordPosition":"9651","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"model without expansion of negative examples was used in this set of experiments. 5.4 Example Outputs Example output for sentences in the development set is shown in Tables 5 and 6, grouped by sentence length. The CCG systems of our previous conference papers and this article are compared, all with the timeout value set to 5 sec. All three systems perform relatively better with smaller sentences. For longer sentences, the fluency of 526 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 5 Example development output for the CCG-based systems and sentences with fewer than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) . A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman said This is an old story, said, This is an old story. said, This is an old story. said, \u201c This is an old story. It today has no bearing on It today has no bearing on It has no bearing on our It has no bearing on our our work force. our work force. work force today. work force today. No price for the new No price for the new No price has been set for No price for the new shares shares has been set. shares has been set. the new shares. has been","@endWordPosition":"10565","@position":"63514","annotationId":"T73","@startWordPosition":"10562","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"a. competition. the hoopla. competition. Pamela Sebastian Pamela Sebastian in Pamela Sebastian in New Pamela Sebastian in New contributed to New York New York contributed to York contributed to this York contributed to this in this article. this article. article. article. painted oils in by Lighthouse II was the oils in Lighthouse II was Lighthouse II was painted Lighthouse II was the playwright in 1901 ... in painted by the playwright in oils by the playwright in playwright in 1901 ... oils in 1901 ... 1901 ... Example output for the CCG-based systems and sentences with fewer than ten words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Mr. Vinken is Elsevier N.V., Mr. Vinken is chairman of Mr. Vinken is chairman of Mr. Vinken is chairman of chairman of the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch publishing group. publishing group. publishing group. publishing group. asbestos-related diseases have Four, including three of the five surviving workers with recently diagnosed cancer. , interest rates expect to slide amid further declines in Yields on money-market mutual funds that portfolio managers continued. signs The thrift hold","@endWordPosition":"10918","@position":"65566","annotationId":"T74","@startWordPosition":"10915","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Example output for the CCG-based systems and sentences between 11 and 20 words. 527 Computational Linguistics Volume 41, Number 3 Table 6 Example development output for the CCG-based systems and sentences with more than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Dr. Talcott from Boston the medical schools from researchers led Dr. Talcott Dr. Talcott led a team of University and a team led Dr. Talcott and Harvard of Harvard University and researchers from the researchers and of the University of the National the National Cancer National Cancer Institute National Cancer Institute Cancer Institute and a Institute and a team of the and the medical schools of of the medical schools team of led Boston medical schools from Harvard University and Harvard University University Boston University. Boston","@endWordPosition":"11271","@position":"68050","annotationId":"T75","@startWordPosition":"11268","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"id by Toronto shareholders Financial Corp. approved Pacific First Financial Pacific First Financial said Pacific First Financial its acquisition of Royal Corp. said shareholders Corp. approved $ 27 or a Corp. approved its Trustco Ltd. for approved its acquisition by share, for its acquisition of acquisition of Royal shareholders by $ 212 Royal Trustco Ltd. of shareholders by Toronto. Trustco Ltd. for $ 212 million, or $ 27 a share. Toronto for $ 27 a share, or $ 212 million million, or $ 27 a share. $ 212 million. Example output for the CCG-based systems and sentences between 21 and 40 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) European history, an European history, only when an Albuquerque, It\u2019s as if France decided to educational research French history questions, N.M., psychiatrist, say an give only French history organization, the test and an educational research educational research questions to students in a only French history organization, John Cannell, organization decided to European history class, questions, Education, a Education, France and a give students and a and when everybody aces European history class, European history class European histo","@endWordPosition":"11571","@position":"69977","annotationId":"T76","@startWordPosition":"11568","@citStr":"Zhang and Clark (2011)"}]},"title":{"#tail":"\n","#text":"Syntactic processing using the generalized perceptron and beam search."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Yue Zhang"},{"#tail":"\n","#text":"Stephen Clark"}]}},{"volume":{"#tail":"\n","#text":"37"},"#tail":"\n","date":{"#tail":"\n","#text":"2011"},"rawString":{"#tail":"\n","#text":"Zhang, Yue and Stephen Clark. 2011. Syntactic processing using the generalized perceptron and beam search. Computational Linguistics, 37(1):105\u2013151."},"journal":{"#tail":"\n","#text":"Computational Linguistics,"},"#text":"\n","issue":{"#tail":"\n","#text":"1"},"marker":{"#tail":"\n","#text":"Zhang, Clark, 2011"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" of chart-based generation, which has many similarities to the problem we address in his seminal paper. We tackle the high complexity by using learning-guided best-first search, exploring a small path in the whole search space, which contains the most likely structures according to the discriminative model. One of the contributions of this article is to introduce, and provide a discriminative solution to, this difficult structured prediction problem, which is an interesting machine learning problem in its own right. This article is based on, and significantly extends, three conference papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012; Zhang 2013). It includes a more detailed description and discussion of our guided-search approach to syntax-based word ordering, bringing together the CCG- and dependency-based systems under one unified framework. In addition, we discuss the limitations of our previous work, and show that a better model can be developed through scaling of the feature vectors. The resulting model allows fair comparison of constituents of different sizes, and enables the learning algorithms to expand negative examples during training, which leads to significantly improved resu","@endWordPosition":"1342","@position":"8912","annotationId":"T77","@startWordPosition":"1339","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"heses in all possible ways to produce new hypotheses. The data structure for accepted hypotheses is similar to that used for best-first parsing (Caraballo and Charniak 1998), and we adopt the term chart for this structure. However, note there are important differences to the parsing problem. First, the parsing problem has a fixed word order and is considerably simpler than the word ordering problem we are tackling. Second, although we use the term chart, the structure for accepted hypotheses is not a dynamic programming chart in the same way as for the parsing problem. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we applied a set of beams to this structure, which makes it similar to the data structure used for phrase-based MT decoding (Koehn 2010). However, we will show later that this structure is unnecessary when the model has more discriminative power, and a conceptually simpler single beam can be used. We will also investigate the possibility of applying dynamic-programming-style pruning to the chart. We now give an overview of the training algorithm, which is crucial to both the speed and accuracy of the resulting decoder. CCGBank (Hockenmaier and Steedman 2007","@endWordPosition":"2183","@position":"14259","annotationId":"T78","@startWordPosition":"2180","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"raining goal is to find a large separating margin between the scores of all positive examples and all negative examples. For CKY parsing, the highest-scored negative example can be found via optimal Viterbi decoding, according to the current model, and this negative example can be used in place of all negative examples during the updating of parameters. In contrast, our best-first search algorithm cannot find an output in reasonable time unless a good model has already been trained, and therefore we cannot run the decoding algorithm in the standard way during training. In our previous papers (Zhang and Clark 2011; Zhang, Blackwood, and Clark 2012), we proposed an approximate online training algorithm, which forces positive examples to be kept in the hypothesis space without being discarded, and prevents the expansion of negative examples during the training process (so that the hypothesis space does not get too large). This algorithm ensures training efficiency, but greatly limits the space of negative examples that is explored during training (and hence fails to replicate the conditions experienced at test 507 Computational Linguistics Volume 41, Number 3 time). In this article, we will show that, wi","@endWordPosition":"2624","@position":"17117","annotationId":"T79","@startWordPosition":"2621","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":" DPCHARTPRUNE(c, e) 17: if e\u2032 is e then 18: continue 19: end if 20: for e\u2032 E UNARY(e, grammar) do 21: APPEND(new, e\u2032) 22: end for 23: for e˜ E c do 24: if CANCOMBINE(e, ˜e, grammar) then 25: e\u2032 +- BINARY(e, ˜e, grammar) 26: APPEND(new, e\u2032) 27: end if 28: if CANCOMBINE(˜e, e, grammar) then 29: e\u2032 +- BINARY(˜e, e, grammar) 30: APPEND(new, e\u2032) 31: end if 32: end for 33: for e\u2032 E new do 34: ADD(a, e\u2032) 35: end for 36: ADD(c, e) 37: end while One way of viewing the training process is that it pushes gold-standard edges towards the top of the agenda, and, crucially, pushes them above non-gold edges (Zhang and Clark 2011). Given a positive example e+ and a negative example e−, a perceptronstyle update is used to penalize the score for ϕ(e−) and reward the score of ϕ(e+): θ\u20d7+- \u20d7θ0 + ϕ(e+) − ϕ(e−) Here \u20d7θ0 and θ\u20d7 denote the parameter vectors before and after the update, respectively. This method proved effective empirically (Zhang and Clark 2011), but it did not 515 Computational Linguistics Volume 41, Number 3 converge well when an n-gram language model was integrated into the system (Zhang, Blackwood, and Clark 2012). Hence we applied an alternative method for score updates that proved more effective than the ","@endWordPosition":"6170","@position":"37697","annotationId":"T80","@startWordPosition":"6167","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"goldstandard). In the second situation, the highest-scored non-gold edge in the chart is taken as the negative example, and removed from the chart after the update. In summary, there are two main differences between Algorithms 2 and 3. First, line 14 in Algorithm 2, which skips the expansion of negative examples, is removed in Algorithm 3. Second, lines 16\u201320 and 42\u201346 are added in Algorithm 3, which correspond to the updating of parameters when a gold-standard edge is removed from the chart. In addition, the definitions of UPDATEPARAMETERS are different for the perceptron training algorithm (Zhang and Clark 2011), the large-margin training algorithm (Zhang, Blackwood, and Clark 2012), and the large-margin algorithm of this article, as explained earlier. 4. Dependency-Based Word Ordering and Tree Linearization As well as CCG, the same approach can be applied to the word ordering problem using other grammar formalisms. In this section, we present a dependency-based word ordering system, where the input is again a multi-set of words with gold-standard POS, and the output is an ordered sentence together with its dependency parse. Except for necessary changes to the edge data structure and edge expansion, ","@endWordPosition":"7250","@position":"43962","annotationId":"T81","@startWordPosition":"7247","@citStr":"Zhang and Clark 2011"},{"#tail":"\n","#text":"taking as base NPs those NPs that do not recursively contain other NPs. These base NPs mostly correspond to the base NPs from the Penn Treebank: In the training data, there are 242,813 Penn Treebank base NPs with an average size of 1.09, and 216,670 CCGBank base NPs with an average size of 1.19. 5.1 Convergence of Training The plots in Figure 4 show the development test scores of three CCG models by the number of training iterations. The three curves represent the scaled model of this article, the online large-margin model from Zhang, Blackwood, and Clark (2012), and the perceptron model from Zhang and Clark (2011), respectively. For each curve, the BLEU score generally increases as the number of training iterations increases, until it reaches its maximum at a particular iteration. We use the number of training iterations 2 http://w3.msi.vxu.se/~nivre/research/Penn2Malt.html. 523 Computational Linguistics Volume 41, Number 3 Figure 4 BLEU scores of the perceptron, large-margin, and scaled large-margin CCG models by the number of training iterations. that gives the best development test scores for the training of our model when testing on the test data. Another way to observe the convergence of training ","@endWordPosition":"9654","@position":"57813","annotationId":"T82","@startWordPosition":"9651","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"model without expansion of negative examples was used in this set of experiments. 5.4 Example Outputs Example output for sentences in the development set is shown in Tables 5 and 6, grouped by sentence length. The CCG systems of our previous conference papers and this article are compared, all with the timeout value set to 5 sec. All three systems perform relatively better with smaller sentences. For longer sentences, the fluency of 526 Zhang and Clark Discriminative Syntax-Based Word Ordering Table 5 Example development output for the CCG-based systems and sentences with fewer than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) . A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman A Lorillard spokewoman said This is an old story, said, This is an old story. said, This is an old story. said, \u201c This is an old story. It today has no bearing on It today has no bearing on It has no bearing on our It has no bearing on our our work force. our work force. work force today. work force today. No price for the new No price for the new No price has been set for No price for the new shares shares has been set. shares has been set. the new shares. has been","@endWordPosition":"10565","@position":"63514","annotationId":"T83","@startWordPosition":"10562","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"a. competition. the hoopla. competition. Pamela Sebastian Pamela Sebastian in Pamela Sebastian in New Pamela Sebastian in New contributed to New York New York contributed to York contributed to this York contributed to this in this article. this article. article. article. painted oils in by Lighthouse II was the oils in Lighthouse II was Lighthouse II was painted Lighthouse II was the playwright in 1901 ... in painted by the playwright in oils by the playwright in playwright in 1901 ... oils in 1901 ... 1901 ... Example output for the CCG-based systems and sentences with fewer than ten words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Mr. Vinken is Elsevier N.V., Mr. Vinken is chairman of Mr. Vinken is chairman of Mr. Vinken is chairman of chairman of the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch Elsevier N.V., the Dutch publishing group. publishing group. publishing group. publishing group. asbestos-related diseases have Four, including three of the five surviving workers with recently diagnosed cancer. , interest rates expect to slide amid further declines in Yields on money-market mutual funds that portfolio managers continued. signs The thrift hold","@endWordPosition":"10918","@position":"65566","annotationId":"T84","@startWordPosition":"10915","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Finmeccanica is an Italian state-owned holding company with interests in the mechanical engineering industry. Example output for the CCG-based systems and sentences between 11 and 20 words. 527 Computational Linguistics Volume 41, Number 3 Table 6 Example development output for the CCG-based systems and sentences with more than 20 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) Dr. Talcott from Boston the medical schools from researchers led Dr. Talcott Dr. Talcott led a team of University and a team led Dr. Talcott and Harvard of Harvard University and researchers from the researchers and of the University of the National the National Cancer National Cancer Institute National Cancer Institute Cancer Institute and a Institute and a team of the and the medical schools of of the medical schools team of led Boston medical schools from Harvard University and Harvard University University Boston University. Boston","@endWordPosition":"11271","@position":"68050","annotationId":"T85","@startWordPosition":"11268","@citStr":"Zhang and Clark (2011)"},{"#tail":"\n","#text":"id by Toronto shareholders Financial Corp. approved Pacific First Financial Pacific First Financial said Pacific First Financial its acquisition of Royal Corp. said shareholders Corp. approved $ 27 or a Corp. approved its Trustco Ltd. for approved its acquisition by share, for its acquisition of acquisition of Royal shareholders by $ 212 Royal Trustco Ltd. of shareholders by Toronto. Trustco Ltd. for $ 212 million, or $ 27 a share. Toronto for $ 27 a share, or $ 212 million million, or $ 27 a share. $ 212 million. Example output for the CCG-based systems and sentences between 21 and 40 words. Zhang and Clark (2011) Zhang, Blackwood, and this article reference Clark (2012) European history, an European history, only when an Albuquerque, It\u2019s as if France decided to educational research French history questions, N.M., psychiatrist, say an give only French history organization, the test and an educational research educational research questions to students in a only French history organization, John Cannell, organization decided to European history class, questions, Education, a Education, France and a give students and a and when everybody aces European history class, European history class European histo","@endWordPosition":"11571","@position":"69977","annotationId":"T86","@startWordPosition":"11568","@citStr":"Zhang and Clark (2011)"}]},"title":{"#tail":"\n","#text":"Syntactic processing using the generalized perceptron and beam search."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Yue Zhang"},{"#tail":"\n","#text":"Stephen Clark"}]}}]}}}}
