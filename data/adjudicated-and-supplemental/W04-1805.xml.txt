sical statistical methods used for collocation acquisition. Moreover, the inferred patterns yield interesting clues on which structures are more likely to convey the target semantic link. 1 Introduction Recent literature in computational terminology has shown an increasing interest in identifying various semantic relationships between terms. Different strategies have been developed in order to identify pairs of terms that share a specific semantic relationship (such as hyperonymy or meronymy) or to build classes of terms. However, most strategies are based on internal or external methods (Grabar and Zweigenbaum, 2002), i.e. methods that rely on the form of terms or on the information gathered from contexts. (In some cases, an additional resource, such as a dictionary or a thesaurus, is used during the identification process.) The work reported here infers specific semantic relationships based on sets of examples and counterexamples. In this paper, the method is applied to a French corpus on computing to find noun-verb combinations in which verbs convey a meaning of realization. The work is carried out in order to assist terminographers in the enrichment of a dictionary on computing that includes collocatio
at rely on the form of terms or on the information gathered from contexts. (In some cases, an additional resource, such as a dictionary or a thesaurus, is used during the identification process.) The work reported here infers specific semantic relationships based on sets of examples and counterexamples. In this paper, the method is applied to a French corpus on computing to find noun-verb combinations in which verbs convey a meaning of realization. The work is carried out in order to assist terminographers in the enrichment of a dictionary on computing that includes collocational information (L'Homme, 2004). Even though this work is carried out for terminographical and lexicographical purposes, it can certainly be of use in other applications, namely information retrieval. Indeed, such rich semantic links can be used to extend indices or reformulate queries (similar to the work by Voorhees (1994) with WordNet relations). 2 Objectives The noun-verb combinations we aim to identify have the following characteristics. They share: ? A syntactic relationship : nouns can be subjects (e.g., ordinateur tourne; computer runs); direct objects (e.g., configurer l'application; configure the applicatio
rexamples. In this paper, the method is applied to a French corpus on computing to find noun-verb combinations in which verbs convey a meaning of realization. The work is carried out in order to assist terminographers in the enrichment of a dictionary on computing that includes collocational information (L'Homme, 2004). Even though this work is carried out for terminographical and lexicographical purposes, it can certainly be of use in other applications, namely information retrieval. Indeed, such rich semantic links can be used to extend indices or reformulate queries (similar to the work by Voorhees (1994) with WordNet relations). 2 Objectives The noun-verb combinations we aim to identify have the following characteristics. They share: ? A syntactic relationship : nouns can be subjects (e.g., ordinateur tourne; computer runs); direct objects (e.g., configurer l'application; configure the application); or second complement (e.g., charger x dans la m?moire;  load x into memory); ? A valid semantic relationship. The following semantic relationships are sought: 1. verbs that refer to activities carried out by the nouns (e.g., serveur d?marre; server starts); 2. verbs that refer to u
port verbs represented by the LFs Funci, Operi, Laborij (e.g., cr?er un fichier; create a file; definir une variable; define a variable).). Realization verbs (and verbs denoting the preparation of nouns) were chosen since they are believed to be frequent in technical corpora, such as the corpus of computing used in this experiment. However, this is seen as a first step in order to validate an acquisition process for semantically-related V-N pairs. Other semantic relationships could be sought in the future. 3 Related work A number of applications have relied on distributional analysis (Harris, 1971) in order to build classes of semantically related terms. This approach, which uses words that appear in the context of terms to formulate hypotheses on their semantic relatedness (Habert et al, 1996, for example), does not specify the relationship itself. Hence, synonyms, co-hyponyms, hyperonyms, etc. are not differentiated. More recent work on terminology structuring has focussed on formal similarity to develop hypotheses on the semantic relationships between terms: Daille (2003) uses derivational morphology; Grabar and Zweigenbaum (2002) use, as a starting point, a number of identical chara
aration of nouns) were chosen since they are believed to be frequent in technical corpora, such as the corpus of computing used in this experiment. However, this is seen as a first step in order to validate an acquisition process for semantically-related V-N pairs. Other semantic relationships could be sought in the future. 3 Related work A number of applications have relied on distributional analysis (Harris, 1971) in order to build classes of semantically related terms. This approach, which uses words that appear in the context of terms to formulate hypotheses on their semantic relatedness (Habert et al, 1996, for example), does not specify the relationship itself. Hence, synonyms, co-hyponyms, hyperonyms, etc. are not differentiated. More recent work on terminology structuring has focussed on formal similarity to develop hypotheses on the semantic relationships between terms: Daille (2003) uses derivational morphology; Grabar and Zweigenbaum (2002) use, as a starting point, a number of identical characters. Up to now, the focus has been on nouns and adjectives, since these structuring methods have been applied to lists of extracted candidate terms (Habert et al, 1996; Daille, 2003) or to lists of
ps could be sought in the future. 3 Related work A number of applications have relied on distributional analysis (Harris, 1971) in order to build classes of semantically related terms. This approach, which uses words that appear in the context of terms to formulate hypotheses on their semantic relatedness (Habert et al, 1996, for example), does not specify the relationship itself. Hence, synonyms, co-hyponyms, hyperonyms, etc. are not differentiated. More recent work on terminology structuring has focussed on formal similarity to develop hypotheses on the semantic relationships between terms: Daille (2003) uses derivational morphology; Grabar and Zweigenbaum (2002) use, as a starting point, a number of identical characters. Up to now, the focus has been on nouns and adjectives, since these structuring methods have been applied to lists of extracted candidate terms (Habert et al, 1996; Daille, 2003) or to lists of admitted terms (Grabar and Zweigenbaum, 2002). As a consequence, relationships considered have been mostly synonymic or taxonomic, or defined as term variations. On the other hand, other work has been carried out in order to acquire collocations. Most of these endeavours have focused o
work A number of applications have relied on distributional analysis (Harris, 1971) in order to build classes of semantically related terms. This approach, which uses words that appear in the context of terms to formulate hypotheses on their semantic relatedness (Habert et al, 1996, for example), does not specify the relationship itself. Hence, synonyms, co-hyponyms, hyperonyms, etc. are not differentiated. More recent work on terminology structuring has focussed on formal similarity to develop hypotheses on the semantic relationships between terms: Daille (2003) uses derivational morphology; Grabar and Zweigenbaum (2002) use, as a starting point, a number of identical characters. Up to now, the focus has been on nouns and adjectives, since these structuring methods have been applied to lists of extracted candidate terms (Habert et al, 1996; Daille, 2003) or to lists of admitted terms (Grabar and Zweigenbaum, 2002). As a consequence, relationships considered have been mostly synonymic or taxonomic, or defined as term variations. On the other hand, other work has been carried out in order to acquire collocations. Most of these endeavours have focused on purely statistical acquisition techniques (Church and Hank
mic, or defined as term variations. On the other hand, other work has been carried out in order to acquire collocations. Most of these endeavours have focused on purely statistical acquisition techniques (Church and Hanks, 1 However, our interpretation of LFs in this work is much looser, since we admitted verbs that would not be considered to be members of true collocations as Mel'?uk et al (1984 1999) define them, i.e. groups of lexical units that share a restricted cooccurrence relationship. 1990), on linguisitic acquisition (by the use of Part-of-Speech filters hand-crafted by a linguist) (Oueslati, 1999) or, more frequently, on a combination of the two (Smadja, 1993; Kilgarriff and Tugwell, 2001, for example). It is worth noting that although these techniques are able to identify N-V pairs, they do not specify the relationship between N and V, nor are they capable of focusing on a subset of N-V pairs. The original acquisition methodology we present in the next section will allow us to overcome this limitation. 4 Methodology for finding valid noun-verb pairs This section is devoted to the description of the methodology and the data we use to acquire semantically related noun-verb pairs. We fir
has been carried out in order to acquire collocations. Most of these endeavours have focused on purely statistical acquisition techniques (Church and Hanks, 1 However, our interpretation of LFs in this work is much looser, since we admitted verbs that would not be considered to be members of true collocations as Mel'?uk et al (1984 1999) define them, i.e. groups of lexical units that share a restricted cooccurrence relationship. 1990), on linguisitic acquisition (by the use of Part-of-Speech filters hand-crafted by a linguist) (Oueslati, 1999) or, more frequently, on a combination of the two (Smadja, 1993; Kilgarriff and Tugwell, 2001, for example). It is worth noting that although these techniques are able to identify N-V pairs, they do not specify the relationship between N and V, nor are they capable of focusing on a subset of N-V pairs. The original acquisition methodology we present in the next section will allow us to overcome this limitation. 4 Methodology for finding valid noun-verb pairs This section is devoted to the description of the methodology and the data we use to acquire semantically related noun-verb pairs. We first describe the specialized corpus used in this experiment. The
ed out in order to acquire collocations. Most of these endeavours have focused on purely statistical acquisition techniques (Church and Hanks, 1 However, our interpretation of LFs in this work is much looser, since we admitted verbs that would not be considered to be members of true collocations as Mel'?uk et al (1984 1999) define them, i.e. groups of lexical units that share a restricted cooccurrence relationship. 1990), on linguisitic acquisition (by the use of Part-of-Speech filters hand-crafted by a linguist) (Oueslati, 1999) or, more frequently, on a combination of the two (Smadja, 1993; Kilgarriff and Tugwell, 2001, for example). It is worth noting that although these techniques are able to identify N-V pairs, they do not specify the relationship between N and V, nor are they capable of focusing on a subset of N-V pairs. The original acquisition methodology we present in the next section will allow us to overcome this limitation. 4 Methodology for finding valid noun-verb pairs This section is devoted to the description of the methodology and the data we use to acquire semantically related noun-verb pairs. We first describe the specialized corpus used in this experiment. Then, we briefly present asares, 
sub-domains (networking, managing Unix computers, webcams...) and comprises 600,000 words. Segmentation, morpho-syntactic tagging and lemmatization have been carried out using the tool cordial 2 . Each word is accompanied by its lemma and Part-of-Speech tag (noun, verb, adjective). Also, the tool indicates inflection (gender and number for nouns, tense and person for verbs) and gives syntactic information (head-modifier) for noun phrases. 4.2 Overview of asares The method used for the acquisition of N-V pairs relies mainly on asares, a pattern inference tool. Asares is presented in detail in (Claveau et al, 2003). We simply give a short account of its basic principles herein. Asares is based on a Machine Learning technique, Inductive Logic Programming (ILP) (Muggleton and De-Raedt, 1994), which infers general morpho-syntactic patterns from a set of examples (this set is noted E+ hereafter) and counter-examples (E?) of the elements one 2 Cordial is a commercial product of SynapseD?veloppement. CompuTerm 2004 - 3rd International Workshop on Computational Terminology40 wants to acquire and their context. The contextual patterns produced can then be applied to the corpus in order to retrieve new elements.
 using the tool cordial 2 . Each word is accompanied by its lemma and Part-of-Speech tag (noun, verb, adjective). Also, the tool indicates inflection (gender and number for nouns, tense and person for verbs) and gives syntactic information (head-modifier) for noun phrases. 4.2 Overview of asares The method used for the acquisition of N-V pairs relies mainly on asares, a pattern inference tool. Asares is presented in detail in (Claveau et al, 2003). We simply give a short account of its basic principles herein. Asares is based on a Machine Learning technique, Inductive Logic Programming (ILP) (Muggleton and De-Raedt, 1994), which infers general morpho-syntactic patterns from a set of examples (this set is noted E+ hereafter) and counter-examples (E?) of the elements one 2 Cordial is a commercial product of SynapseD?veloppement. CompuTerm 2004 - 3rd International Workshop on Computational Terminology40 wants to acquire and their context. The contextual patterns produced can then be applied to the corpus in order to retrieve new elements. The acquisition process can be summarized in 3 steps: 1. construction of the sets of examples (and counter-examples); 2. inference of extraction patterns with asares; and 3. ext
ent. CompuTerm 2004 - 3rd International Workshop on Computational Terminology40 wants to acquire and their context. The contextual patterns produced can then be applied to the corpus in order to retrieve new elements. The acquisition process can be summarized in 3 steps: 1. construction of the sets of examples (and counter-examples); 2. inference of extraction patterns with asares; and 3. extraction of N-V pairs from the corpus with the inferred patterns. Asares has been previously applied to the acquisition of word pairs sharing semantic relations defined in the Generative Lexicon framework (Pustejovsky, 1995) and called qualia relations (Bouillon et al, 2001). Here, we propose to use asares in a quite similar way to retrieve our valid N-V pairs. However, the N-V combinations sought are more specific than those that were identified in these previous experiments. Formally, ILP aims at inferring logic programs (sets of Horn clauses, notedH) from a set of facts (examples and counter-examples of the concept to be learnt) and background knowledge (B), such that the program H logically entails the examples with respect to the background knowledge and rejects (most of) the counterexamples. This is transcr
 on Computational Terminology40 wants to acquire and their context. The contextual patterns produced can then be applied to the corpus in order to retrieve new elements. The acquisition process can be summarized in 3 steps: 1. construction of the sets of examples (and counter-examples); 2. inference of extraction patterns with asares; and 3. extraction of N-V pairs from the corpus with the inferred patterns. Asares has been previously applied to the acquisition of word pairs sharing semantic relations defined in the Generative Lexicon framework (Pustejovsky, 1995) and called qualia relations (Bouillon et al, 2001). Here, we propose to use asares in a quite similar way to retrieve our valid N-V pairs. However, the N-V combinations sought are more specific than those that were identified in these previous experiments. Formally, ILP aims at inferring logic programs (sets of Horn clauses, notedH) from a set of facts (examples and counter-examples of the concept to be learnt) and background knowledge (B), such that the program H logically entails the examples with respect to the background knowledge and rejects (most of) the counterexamples. This is transcribed by the two logical formulae B ?H |= E+, B ?H 6
s expressing morpho-syntactic patterns that generalize the structures of sentences containing the target element (examples) but not the structures of the sentences containing counter-examples. The background knowledge encodes information about each word occurring in the example or counter-example, namely the meaning of its tag (e.g., adjective in plural form, infinitive verb). The main benefits of this acquisition technique lie in the inferred patterns. Indeed, contrary to the more classical statistical methods (Mutual Information, Loglike..., see below) used for collocation acquisition (see (Pearce, 2002) for a review), these patterns allow: 1. understanding of the results, that is, why a specific element has been retrieved or not; 2. highlighting of the corpus-specific structures conveying the target element. In addition to its explanatory capacity, this symbolic acquisition technique has obtained good results for other acquisition tasks when compared to existing statistical techniques (Bouillon et al, 2002). 4.3 Acquisition process To infer extraction patterns, asares needs a set of examples (E+) and a set of counter-examples (E?) of the elements we want to retrieve. In our case, E+ must thu
s acquisition technique lie in the inferred patterns. Indeed, contrary to the more classical statistical methods (Mutual Information, Loglike..., see below) used for collocation acquisition (see (Pearce, 2002) for a review), these patterns allow: 1. understanding of the results, that is, why a specific element has been retrieved or not; 2. highlighting of the corpus-specific structures conveying the target element. In addition to its explanatory capacity, this symbolic acquisition technique has obtained good results for other acquisition tasks when compared to existing statistical techniques (Bouillon et al, 2002). 4.3 Acquisition process To infer extraction patterns, asares needs a set of examples (E+) and a set of counter-examples (E?) of the elements we want to retrieve. In our case, E+ must thus be composed of (POStagged) sentences containing valid N-V pairs; conversely, E? must be composed of sentences containing non-valid N-V pairs. While this step is tedious and usually carried out manually, the originality of our work lies in the fact that E+ and E? are obtained automatically. To produce the positive examples, we use the existing entries of a terminological database we are currently developing.
n a list of invalid N-V pairs, we acquire them from our corpus using a statistical technique. This produces a list of all N-V pairs that appear in the same sentence, and assigns each a score. Many statistical coefficients exist (Manning and Sch?tze, 1999); most of them can be easily expressed with the help of a contingency table similar to that reproduced in Table 1 and by noting S = a + b + c + d. For example, the Vj Vk, k 6= j Ni a b Nl, l 6= i c d Table 1: Contingency table for the pair Ni-Vj Mutual Information coefficient is defined as: MI = log2 a(a+ b)(a+ c) and the loglike coefficient (Dunning, 1993) as: Log = a log a + b log b + c log c + d log d ? (a + CompuTerm 2004 - 3rd International Workshop on Computational Terminology 41 b) log(a+ b)? (a+ c) log(a+ c)? (b+ d) log(b+ d)? (c+ d) log(c+ d) + S log S. In the work presented here, we have adopted the Loglike coefficient. From the N-V pair list produced with this method, we have chosen the pairs that obtained the lower Loglike scores. As for the positive examples, we consider that each sentence containing one of the pairs is a counterexample and is added to E?. Finally, asares is launched with these E+ and E? sets; each containing about 
respect to the total number of retrieved pairs; this is the precision rate (defined below). These two rates were evaluated using a test sample containing all this information. CompuTerm 2004 - 3rd International Workshop on Computational Terminology42 To construct this test set, we have focused our attention on ten domain-specific terms: commande (command), configuration, fichier (file), Internet, logiciel (software), option, ordinateur (computer), serveur (server), syst?me (system), utilisateur (user). The terms have been identified as the most specific to our corpus by a program developed by Drouin (2003) and called TermoStat. The ten most specific nouns have been produced by comparing our corpus of computing to the French corpus Le Monde, composed of newspaper articles (Lemay et al, 2004). Note that to prevent any bias in the results, none of these terms were used as positive examples during the pattern inference step. (They were removed from the example set.) For each of these 10 nouns, a manual identification of valid and invalid pairs was carried out. Linguists were asked to analyze the sentences and decide whether the highlighted pairs were valid N-V pairs. Examples of the sentences produ
rm 2004 - 3rd International Workshop on Computational Terminology42 To construct this test set, we have focused our attention on ten domain-specific terms: commande (command), configuration, fichier (file), Internet, logiciel (software), option, ordinateur (computer), serveur (server), syst?me (system), utilisateur (user). The terms have been identified as the most specific to our corpus by a program developed by Drouin (2003) and called TermoStat. The ten most specific nouns have been produced by comparing our corpus of computing to the French corpus Le Monde, composed of newspaper articles (Lemay et al, 2004). Note that to prevent any bias in the results, none of these terms were used as positive examples during the pattern inference step. (They were removed from the example set.) For each of these 10 nouns, a manual identification of valid and invalid pairs was carried out. Linguists were asked to analyze the sentences and decide whether the highlighted pairs were valid N-V pairs. Examples of the sentences produced are given in Table 2 for the term utilisateur (user). A pair is considered as valid if at least one of its occurrences has the desired semantic (and syntactic) relationship (cf. sectio
