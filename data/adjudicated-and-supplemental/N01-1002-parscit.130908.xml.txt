ted and analysed the NP modifiers in a corpus of museum descriptions to discover rules for the selection and realisation of such modifiers, in particular non-referring ones. We implemented the regularities into an extension of the ILEX system to generate complex NPs capable of serving multiple communicative goals. 1 Introduction and Motivation 1.1 Generating Complex NPs In addition to a referring function, noun phrases (NP) can also serve communicative goals such as providing new information about the referent and expressing the speaker's emotional attitude towards the referent (Appelt, 1985; Jordan, 2000). In Example (1) below, the part in italics refers to an object in a museum, and the part in boldface provides additional information about it. (1) This example from the time of the Qianlong Emperor 1736-95 is made of lacquered wood with decoration in gold and red. Such complex NPs appear frequently in human written texts. A natural language generation (NLG) system must be able to produce complex NPs serving multiple goals in order to write texts as humans do. We divide the components of an NP into two parts based on the different functions/communicative goals they serve: a referring part : in
r types of modifiers have been given much less attention, although proposals concerning their realisation are included in grammars such as NIGEL (Mann and Matthiessen, 1985). Work on aggregation is satisfied with devising a few rules to allow some degrees of embedding to generate subordinate NP components. There is no in-depth discussion of the problem of generating non-referring modifiers in general. It has been argued that generating such modifiers is not a trivial decision because it interferes with the planning of both local and global coherence (in the sense of (Grosz and Sidner, 1986)) (Cheng and Mellish, 2000a). NP subordination, as an alternative to sententialisation, is a major way to achieve conciseness as it reduces the number of sentences in generated texts. However, generating arbitrarily complex NPs is not often desirable. Therefore, achieving coherence and conciseness are two conflicting considerations and conciseness should only be satisfied under coherence constraints. 1.2 Corpus Analysis for NLG Corpus analysis has often been used for devising rules for modifier generation, e.g. (Mann and Matthiessen, 1985; Robin, 1994; Shaw and McKeown, 1997). The proposals in NIGEL, in particular, wer
ity of a given piece of information occupying a given syntactic position (a value of type) on the basis of the semantic and pragmatic properties of that information and relevant NP features, for example, whether a certain color attribute should be expressed by means of a prenominal adjective or a prepositional phrase in a definite NP. Notice that it is not possible to use corpus annotation to determine the likelihood of a given property to be chosen, unless we know in advance all of the properties that can be attributed to a given object, as in the case of Jordan's work on the COCONUT domain (Jordan, 2000). Below we briefly introduce the major values of the three modifier features. Pragm We observed three modifier functions in NPs. Firstly, a modifier may specify properties that uniquely identify the objects or concepts denoted by an NP, i.e. components of the referring part of an NP. We call such modifiers uniq modifiers; most modifiers in generic references are of this type. Secondly, a modifier may not be used to constrain a unique or unambiguous concept out of an NP which is either already unique or not required to have a unique interpretation, but may be important to the situation presente
These values mainly target prepositional phrases and nouns, not adjectives. For an adjective, we use WordNet to derive its category rather than directly assigning a predefined value. In WordNet, if an adjective ascribes a value to a noun concept, e.g. round gives a value of shape, WordNet will contain a pointer between the adjective and the noun by which the appropriate attribute is lexicalised, e.g. between round and shape. Using WordNet, annotating the sem feature of an adjective involves first choosing the correct sense for the adjective 2Some descriptions of int modifiers can be found in (Cheng and Mellish, 2000b). and then mapping the word sense to a noun concept in the WordNet ontology. Satisfactory agreement among human subjects on choosing senses for words has been recorded (Fellbaum, 1998) and the mapping to nouns can be done automatically. So this approach is considerably better than manually assigning values. There is a tradeoff between the number of values and the achievable agreement on feature annotation because the more values a feature has, the less agreement the annotation can expect to achieve. To avoid having too many categories, we use more general concepts like one of the following (
