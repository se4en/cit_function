{"algorithms":{"#text":"\n","@version":"110505","algorithm":{"#tail":"\n","@name":"ParsCit","#text":"\n","@version":"110505","citationList":{"#tail":"\n","#text":"\n","citation":[{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Miguel B. Almeida and Andre F. T. Martins. 2013. Fast and robust compressive summarization with dual decomposition and multi-task learning. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Almeida, Martins, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"s since they can remove insignificant sentence constituents and make space for more salient information that is otherwise dropped due to the summary length constraint. Two general strategies have been used for compressive summarization. One is a pipeline approach, where sentencebased extractive summarization is followed or proceeded by sentence compression (Lin, 2003; Zajic et al., 2007; Vanderwende et al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constit","@endWordPosition":"381","@position":"2649","annotationId":"T1","@startWordPosition":"377","@citStr":"Almeida and Martins, 2013"},{"#tail":"\n","#text":"i ILP solver6 does all ILP decoding. 5.2 Summarization Results We compare our summarization system against four recent studies, which have reported some of the highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R","@endWordPosition":"4199","@position":"25249","annotationId":"T2","@startWordPosition":"4196","@citStr":"Almeida and Martins (2013)"}]},"title":{"#tail":"\n","#text":"Fast and robust compressive summarization with dual decomposition and multi-task learning."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Miguel B Almeida"},{"#tail":"\n","#text":"Andre F T Martins"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Miguel B. Almeida and Andre F. T. Martins. 2013. Fast and robust compressive summarization with dual decomposition and multi-task learning. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Almeida, Martins, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"s since they can remove insignificant sentence constituents and make space for more salient information that is otherwise dropped due to the summary length constraint. Two general strategies have been used for compressive summarization. One is a pipeline approach, where sentencebased extractive summarization is followed or proceeded by sentence compression (Lin, 2003; Zajic et al., 2007; Vanderwende et al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constit","@endWordPosition":"381","@position":"2649","annotationId":"T3","@startWordPosition":"377","@citStr":"Almeida and Martins, 2013"},{"#tail":"\n","#text":"i ILP solver6 does all ILP decoding. 5.2 Summarization Results We compare our summarization system against four recent studies, which have reported some of the highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R","@endWordPosition":"4199","@position":"25249","annotationId":"T4","@startWordPosition":"4196","@citStr":"Almeida and Martins (2013)"}]},"title":{"#tail":"\n","#text":"Fast and robust compressive summarization with dual decomposition and multi-task learning."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Miguel B Almeida"},{"#tail":"\n","#text":"Andre F T Martins"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2011"},"rawString":{"#tail":"\n","#text":"Taylor Berg-Kirkpatrick, Dan Gillick, and Dan Klein. 2011. Jointly learning to extract and compress. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Berg-Kirkpatrick, Gillick, Klein, 2011"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":" and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP problem. Berg-Kirkpatrick et al. (2011) proposed an approach to score the candidate summaries according to a combined linear model of extractive sentence selection and compression. They trained the model using a margin-based objective whose loss captures the final summary quality. Woodsend and Lapata (2012) presented another method where the summary\u2019s informativeness, succinctness, and grammaticality are learned separately from data but optimized jointly using an ILP setup. Yoshikawa et al. (2012) incorporated semantic role information in the ILP model. Our work is closely related with the pipeline approach, where sentence-based ex","@endWordPosition":"855","@position":"5752","annotationId":"T5","@startWordPosition":"852","@citStr":"Berg-Kirkpatrick et al. (2011)"}},"title":{"#tail":"\n","#text":"Jointly learning to extract and compress."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Taylor Berg-Kirkpatrick"},{"#tail":"\n","#text":"Dan Gillick"},{"#tail":"\n","#text":"Dan Klein"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2002"},"rawString":{"#tail":"\n","#text":"Michael Collins. 2002. Discriminative training methods for hidden markov models: Theory and experiments with perceptron algorithms. In Proceedings ofEMNLP."},"#text":"\n","marker":{"#tail":"\n","#text":"Collins, 2002"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":" 1. word itself and concatenation of two words 2. POS and concatenation of two words\u2019 POS 3. whether the word is a stopword 4. node\u2019s named entity tag 5. dependency relationship between two leaves Table 2: Features used in our system besides those used in (Clarke and Lapata, 2008). 3.5 Learning To learn the feature weights during training, we perform ILP decoding on every sentence in the training set, to find the best hypothesis for each node in the expanded constituent parse tree. If the hypothesis is incorrect, we update the feature weights using the structured perceptron learning strategy (Collins, 2002). The reference label for every node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summa","@endWordPosition":"3481","@position":"20655","annotationId":"T6","@startWordPosition":"3480","@citStr":"Collins, 2002"}},"title":{"#tail":"\n","#text":"Discriminative training methods for hidden markov models: Theory and experiments with perceptron algorithms."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofEMNLP."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Michael Collins"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2003"},"rawString":{"#tail":"\n","#text":"Bonnie Dorr, David Zajic, and Richard Schwartz. 2003. Hedge trimmer: A parse-and-trim approach to headline generation. In Proceedings ofNAACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Dorr, Zajic, Schwartz, 2003"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compression system against four other models. HedgeTrimmer in Dorr et al. (2003) applied a variety of linguisticallymotivated heuristics to guide the sentences comSystem C Rate (%) Uni-F1 Rel-F1 HedgeTrimmer 57.64 0.64 0.50 McDonald (2006) 70.95 0.77 0.55 Martins (2009) 71.35 0.77 0.56 Wang (2013) 68.06 0.79 0.59 Our System 71.19 0.77 0.58 Table 4: Sentence compression results. The human compression rate of the test set is 69%. pression; McDonald (2006) used the output of two parsers as features in a discriminative model that decomposes over pairs of consecutive words; Martins and Smith (2009) built the compression model in the dependency parse and utilized the relationsh","@endWordPosition":"4821","@position":"29001","annotationId":"T7","@startWordPosition":"4818","@citStr":"Dorr et al. (2003)"}},"title":{"#tail":"\n","#text":"Hedge trimmer: A parse-and-trim approach to headline generation."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofNAACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Bonnie Dorr"},{"#tail":"\n","#text":"David Zajic"},{"#tail":"\n","#text":"Richard Schwartz"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2007"},"rawString":{"#tail":"\n","#text":"Michel Galley and Kathleen McKeown. 2007. Lexicalized markov grammars for sentence compression. In Processings ofNAACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Galley, McKeown, 2007"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human e","@endWordPosition":"497","@position":"3372","annotationId":"T8","@startWordPosition":"494","@citStr":"Galley and McKeown, 2007"}},"title":{"#tail":"\n","#text":"Lexicalized markov grammars for sentence compression."},"booktitle":{"#tail":"\n","#text":"In Processings ofNAACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Michel Galley"},{"#tail":"\n","#text":"Kathleen McKeown"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Fei Liu, Fuliang Weng, and Yang Liu. 2013a. Document summarization via guided sentence compression. In Proceedings of the EMNLP."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Liu, Weng, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T9","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T10","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T11","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T12","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T13","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T14","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T15","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T16","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Document summarization via guided sentence compression."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the EMNLP."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Fei Liu"},{"#tail":"\n","#text":"Fuliang Weng"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Fei Liu, Fuliang Weng, and Yang Liu. 2013a. Document summarization via guided sentence compression. In Proceedings of the EMNLP."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Liu, Weng, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T17","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T18","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T19","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T20","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T21","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T22","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T23","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T24","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Document summarization via guided sentence compression."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the EMNLP."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Fei Liu"},{"#tail":"\n","#text":"Fuliang Weng"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Fei Liu, Fuliang Weng, and Yang Liu. 2013a. Document summarization via guided sentence compression. In Proceedings of the EMNLP."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Liu, Weng, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T25","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T26","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T27","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T28","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T29","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T30","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T31","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T32","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Document summarization via guided sentence compression."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the EMNLP."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Fei Liu"},{"#tail":"\n","#text":"Fuliang Weng"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Fei Liu, Fuliang Weng, and Yang Liu. 2013a. Document summarization via guided sentence compression. In Proceedings of the EMNLP."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Liu, Weng, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T33","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T34","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T35","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T36","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T37","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T38","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T39","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T40","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Document summarization via guided sentence compression."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the EMNLP."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Fei Liu"},{"#tail":"\n","#text":"Fuliang Weng"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Xian Qian, and Yang Liu. 2013b. Using supervised bigram-based ilp for extractive summarization. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Qian, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T41","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T42","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T43","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T44","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T45","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T46","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T47","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T48","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Using supervised bigram-based ilp for extractive summarization."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Xian Qian"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Xian Qian, and Yang Liu. 2013b. Using supervised bigram-based ilp for extractive summarization. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Qian, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T49","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T50","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T51","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T52","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T53","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T54","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T55","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T56","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Using supervised bigram-based ilp for extractive summarization."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Xian Qian"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Xian Qian, and Yang Liu. 2013b. Using supervised bigram-based ilp for extractive summarization. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Qian, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T57","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T58","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T59","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T60","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T61","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T62","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T63","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T64","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Using supervised bigram-based ilp for extractive summarization."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Xian Qian"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Chen Li, Xian Qian, and Yang Liu. 2013b. Using supervised bigram-based ilp for extractive summarization. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Li, Qian, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results ","@endWordPosition":"507","@position":"3421","annotationId":"T65","@startWordPosition":"504","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"alient and nonredundant sentences from the given document set. Both unsupervised and supervised approaches have been explored for sentence selection. Supervised approaches include the Bayesian classifier (Kupiec et al., 1995), maximum entropy (Osborne, 2002), skip-chain CRF (Galley, 2006), discriminative reranking (Aker et al., 2010), among others. The extractive summary sentence selection problem can also be formulated in an optimization framework. Previous methods include using integer linear programming (ILP) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP pro","@endWordPosition":"763","@position":"5116","annotationId":"T66","@startWordPosition":"760","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ery node in the expanded constituent parse tree is obtained automatically from the bottom to the top of the tree. Since every leaf node (word) is human annotated (removed or retain), we annotate the internal nodes as removed if all of its children are removed. Otherwise, the node is annotated as retained. During perceptron training, a fixed learning rate is used and parameters are averaged to prevent overfitting. In our experiment, we observe stable convergence using the held-out development corpus, with best performance usually obtained around 10-20 epochs. 4 Summarization System Similar to (Li et al., 2013a), our summarization system is , which consists of three key components: an initial sentence pre-selection module to select some important sentence candidates; the above compression model to generate n-best compressions for each sentence; and then an ILP summarization method to select the best summary sentences from the multiple compressed sentences. The sentence pre-selection model is a simple supervised support vector regression (SVR) model that predicts a salience score for each sentence and selects the top ranked sentences for further processing (compression and summarization). The target","@endWordPosition":"3583","@position":"21298","annotationId":"T67","@startWordPosition":"3580","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"me after getting one solution. 5 Experimental Results 5.1 Experimental Setup Summarization Data For summarization experiments, we use the standard TAC data sets1, which have been used in the NIST competitions. In particular, we used the TAC 2010 data set as training data for the SVR sentence pre-selection model, TAC 2009 data set as development set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adop","@endWordPosition":"3932","@position":"23445","annotationId":"T68","@startWordPosition":"3929","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system","@endWordPosition":"4222","@position":"25398","annotationId":"T69","@startWordPosition":"4219","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"ntence a grammar score and a coherence score for 4http://sourceforge.net/projects/pocket-crf-1/ 5http://svmlight.joachims.org/ 6http://www.gurobi.com 7We chose to evaluate the linguistic quality for this system because of two reasons: one is that we have an implementation of that method; the other more important one is that it has the highest reported ROUGE results among the compared methods. 697 System R-2 R-SU4 Gram Cohere TAC\u201908 Best System 11.03 13.96 n/a n/a (Berg-Kirk et al., 2011) 11.70 14.38 n/a n/a (Woodsend et al., 2012) 11.37 14.47 n/a n/a (Almeida et al.,2013) 12.30 15.18 n/a n/a (Li et al., 2013a) 12.35 15.27 3.81 3.41 Our System 12.23 15.47 4.29 4.11 TAC\u201911 Best System 13.44 16.51 n/a n/a (Ng et al., 2012) 13.93 16.83 n/a n/a (Li et al., 2013a) 14.40 16.89 3.67 3.32 Our System 14.04 16.67 4.18 4.07 Table 3: Summarization results on the TAC 2008 and 2011 data sets. each topic. The score is scaled and ranges from 1 (bad) to 5 (good). Therefore, in table 3, the grammar score is the average score for each sentence and coherence score is the average for each topic. We measure annotators\u2019 agreement in the following way: we consider the scores from each annotator as a distribution and we f","@endWordPosition":"4495","@position":"27085","annotationId":"T70","@startWordPosition":"4492","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":"butions are not statistically significantly different each other (p > 0.05 based on paired t-test). We can see from the table that in general, our system achieves better ROUGE results than most previous work except (Li et al., 2013a) on both TAC 2008 and TAC 2011 data. However, our system\u2019s linguistic quality is better than (Li et al., 2013a). The CRF-based compression model used in (Li et al., 2013a) can not well model the grammar. Particularly, our results (ROUGE-2) are statistically significantly (p < 0.05) higher than TAC08 Best system, but are not statistically significant compared with (Li et al., 2013a) (p > 0.05). The pattern is similar in TAC 2011 data. Our result (R-2) is statistically significantly (p < 0.05) better than TAC11 Best system, but not statistically (p > 0.05) significantly different from (Li et al., 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compre","@endWordPosition":"4713","@position":"28327","annotationId":"T71","@startWordPosition":"4710","@citStr":"Li et al., 2013"},{"#tail":"\n","#text":", similar to the state-of-the-art systems. To evaluate the power of using the expanded parse tree in our model, we conducted another experiment where we only consider the bottom level of the constituent parse tree. In some sense, this could be considered as the system in (Clarke and Lapata, 2008). Furthermore, we use two different setups: one uses the lexical features (about the words) and the other does not. Table 5 shows the results using the data in (Clarke and Lapata, 2008). For a comparison, we also include the results using the CRF-based compression model (the one used in (Nomoto, 2007; Li et al., 2013a)). We report results using both the automatically calculated compression metrics and the linguistic quality score. Three English native speaker annotators were asked to judge two aspects of the compressed sentence compared with the gold result: one is the content that looks at whether the important words are kept and the other is the grammar score which evaluates the sentence\u2019s readability. Each of these 698 two scores ranges from 1(bad) to 5(good). Table 5 shows that when using lexical features, our system has statistically significantly (p < 0.05) higher Grammar value and content importanc","@endWordPosition":"5146","@position":"30949","annotationId":"T72","@startWordPosition":"5143","@citStr":"Li et al., 2013"}]},"title":{"#tail":"\n","#text":"Using supervised bigram-based ilp for extractive summarization."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Chen Li"},{"#tail":"\n","#text":"Xian Qian"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2003"},"rawString":{"#tail":"\n","#text":"Chin-Yew Lin. 2003. Improving summarization performance by sentence compression - A pilot study. In Proceeding of the Sixth International Workshop on Information Retrieval with Asian Language."},"#text":"\n","marker":{"#tail":"\n","#text":"Lin, 2003"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" has been a surge of interest in recent years on generating compressed document summaries as a viable step towards abstractive summarization. These compressive summaries often contain more information than sentence-based extractive summaries since they can remove insignificant sentence constituents and make space for more salient information that is otherwise dropped due to the summary length constraint. Two general strategies have been used for compressive summarization. One is a pipeline approach, where sentencebased extractive summarization is followed or proceeded by sentence compression (Lin, 2003; Zajic et al., 2007; Vanderwende et al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminati","@endWordPosition":"339","@position":"2393","annotationId":"T73","@startWordPosition":"338","@citStr":"Lin, 2003"},{"#tail":"\n","#text":"iscriminative sentence compression that jointly produces sequential and syntactic representations for output text. Filippova and Altun (2013) presented a method to automatically build a sentence compression corpus with hundreds of thousands of instances on which deletion-based compression algorithms can be trained. In addition to the work on sentence compression as a stand-alone task, prior studies have also investigated compression for the summarization task. Knight and Marcu (2000) utilized the noisy channel and decision tree method to perform sentence compression in the summarization task. Lin (2003) showed that pure syntactic-based compression may not significantly improve the summarization performance. Zajic et al. (2007) compared two sentence compression approaches for multidocument summarization, including a \u2018parse-andtrim\u2019 and a noisy-channel approach. Galanis and Androutsopoulos (2010) used the maximum entropy model to generate the candidate compressions by removing branches from the source sentences. Woodsend and Lapata (2010) presented a joint content selection and compression model for single-document summarization. They operated over a phrase-based representation of the source d","@endWordPosition":"1125","@position":"7593","annotationId":"T74","@startWordPosition":"1124","@citStr":"Lin (2003)"}]},"title":{"#tail":"\n","#text":"Improving summarization performance by sentence compression - A pilot study."},"booktitle":{"#tail":"\n","#text":"In Proceeding of the Sixth International Workshop on Information Retrieval with Asian Language."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Chin-Yew Lin"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2004"},"rawString":{"#tail":"\n","#text":"Chin-Yew Lin. 2004. Rouge: a package for automatic evaluation of summaries. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Lin, 2004"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"lley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691\u2013701, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics based summarization model is used to select the final compressed sentences. We evaluate our proposed method on the TAC 2008 and 2011 data sets using the standard ROUGE metric (Lin, 2004) and human evaluation of the linguistic quality. Our results show that using our proposed sentence compression model in the summarization system can yield significant performance gain in linguistic quality, without losing much performance on the ROUGE metric. 2 Related Work Summarization research has seen great development over the last fifty years (Nenkova and McKeown, 2011). Compared to the abstractive counterpart, extractive summarization has received considerable attention due to its clear problem formulation: to extract a set of salient and nonredundant sentences from the given document s","@endWordPosition":"587","@position":"3960","annotationId":"T75","@startWordPosition":"586","@citStr":"Lin, 2004"},{"#tail":"\n","#text":"ploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC competitions. Table 3 shows the summarization results of our method and others. The top part contains the results for TAC 2008 data and bottom part is for TAC 2011 data. We use the ROUGE evaluation metrics (Lin, 2004), with R-2 measuring the bigram overlap between the system and reference summaries and R-SU4 measuring the skip-bigram with the maximum gap length of 4. In addition, we evaluate the linguistic quality (LQ) of the summaries for our system and (Li et al., 2013a).7 The linguistic quality consists of two parts. One evaluates the grammar quality within a sentence. For this, annotators marked if a compressed sentence is grammatically correct. Typical grammar errors include lack of verb or subordinate clause. The other evaluates the coherence between sentences, including the order of sentences and ir","@endWordPosition":"4287","@position":"25761","annotationId":"T76","@startWordPosition":"4286","@citStr":"Lin, 2004"}]},"title":{"#tail":"\n","#text":"Rouge: a package for automatic evaluation of summaries."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Chin-Yew Lin"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2009"},"rawString":{"#tail":"\n","#text":"Andre F. T. Martins and Noah A. Smith. 2009. Summarization with a joint model for sentence extraction and compression. In Proceedings of the ACL Workshop on Integer Linear Programmingfor Natural Language Processing."},"#text":"\n","marker":{"#tail":"\n","#text":"Martins, Smith, 2009"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"P) and submodular functions to solve the optimization problem (Gillick et al., 2009; Li et al., 2013b; Lin and Bilmes, 2010). Compressive summarization receives increasing attention in recent years, since it offers a viable step towards abstractive summarization. The compressed summaries can be generated through a joint model of the sentence selection and compression processes, or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP problem. Berg-Kirkpatrick et al. (2011) proposed an approach to score the candidate summaries according to a combined linear model of extractive sentence selection and compression. They trained the model using a margin-based objective whose loss captures the final summary quality. Woodsend and Lapata (2012) presented another method where the summary\u2019s informativeness, succinctness, and grammaticality are learned separately from data but optimized jointly using an ILP setup. Yoshikawa et al. (2012) incorporated semantic ro","@endWordPosition":"838","@position":"5640","annotationId":"T77","@startWordPosition":"835","@citStr":"Martins and Smith (2009)"},{"#tail":"\n","#text":" set for parameter tuning, and the TAC 2008 and 2011 data as the test set for reporting the final summarization results. The training data for the sentence compression module in the summarization system is summary guided compression corpus annotated by (Li et al., 2013a) using TAC2010 data. In the compression module, for each word we also used its document level feature.2 Compression Data We also evaluate our compression model using the data set from (Clarke and Lapata, 2008). It includes 82 newswire articles with manually produced compression for each sentence. We use the same partitions as (Martins and Smith, 2009), i.e., 1,188 sentences for training and 441 for testing. Data Processing We use Stanford CoreNLP toolkit3 to tokenize the sentences, extract name entity tags, and generate the dependency parse tree. Berkeley Parser (Petrov et al., 2006) is adopted to obtain the constituent parse tree for every sentence and POS tag for every token. We use Pocket 1http://www.nist.gov/tac/data/index.html 2Document level features for a word include information such as the word\u2019s document frequency in a topic. These features cannot be extracted from a single sentence, as in the standard sentence compression task, ","@endWordPosition":"3991","@position":"23800","annotationId":"T78","@startWordPosition":"3988","@citStr":"Martins and Smith, 2009"},{"#tail":"\n","#text":" method. We compare our compression system against four other models. HedgeTrimmer in Dorr et al. (2003) applied a variety of linguisticallymotivated heuristics to guide the sentences comSystem C Rate (%) Uni-F1 Rel-F1 HedgeTrimmer 57.64 0.64 0.50 McDonald (2006) 70.95 0.77 0.55 Martins (2009) 71.35 0.77 0.56 Wang (2013) 68.06 0.79 0.59 Our System 71.19 0.77 0.58 Table 4: Sentence compression results. The human compression rate of the test set is 69%. pression; McDonald (2006) used the output of two parsers as features in a discriminative model that decomposes over pairs of consecutive words; Martins and Smith (2009) built the compression model in the dependency parse and utilized the relationship between the head and modifier to preserve the grammar relationship; Wang et al. (2013) developed a novel beam search decoder using the treebased compression model on the constituent parse tree, which could find the most probable compression efficiently. Table 4 shows the compression results of various systems, along with the compression ratio (C Rate) of the system output. We adopt the compression metrics as used in (Martins and Smith, 2009) that measures the macro F-measure for the retained unigrams (Uni-F1), a","@endWordPosition":"4906","@position":"29521","annotationId":"T79","@startWordPosition":"4902","@citStr":"Martins and Smith (2009)"}]},"title":{"#tail":"\n","#text":"Summarization with a joint model for sentence extraction and compression."},"booktitle":{"#tail":"\n","#text":"In Proceedings of the ACL Workshop on Integer Linear Programmingfor Natural Language Processing."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Andre F T Martins"},{"#tail":"\n","#text":"Noah A Smith"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2006"},"rawString":{"#tail":"\n","#text":"Ryan McDonald. 2006. Discriminative sentence compression with soft syntactic evidence. In Proceedings of EACL."},"#text":"\n","marker":{"#tail":"\n","#text":"McDonald, 2006"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natur","@endWordPosition":"442","@position":"3044","annotationId":"T80","@startWordPosition":"441","@citStr":"McDonald, 2006"},{"#tail":"\n","#text":"sing a margin-based objective whose loss captures the final summary quality. Woodsend and Lapata (2012) presented another method where the summary\u2019s informativeness, succinctness, and grammaticality are learned separately from data but optimized jointly using an ILP setup. Yoshikawa et al. (2012) incorporated semantic role information in the ILP model. Our work is closely related with the pipeline approach, where sentence-based extractive summarization is followed or proceeded by sentence compression. There have been many studies on sentence compression, independent of the summarization task. McDonald (2006) firstly introduced a discriminative sentence compression model to directly optimize the quality of the compressed sentences produced. Clarke and Lapata (2008) improved the above discriminative model by using ILP in decoding, making it convenient to add constraints to preserve grammatical structure. Nomoto (2007) treated the compression task as a sequence labeling problem and used CRF for it. Thadani and McKeown (2013) presented an approach for discriminative sentence compression that jointly produces sequential and syntactic representations for output text. Filippova and Altun (2013) presente","@endWordPosition":"971","@position":"6533","annotationId":"T81","@startWordPosition":"970","@citStr":"McDonald (2006)"},{"#tail":"\n","#text":" single word. 3 Sentence Compression Method Sentence compression is a task of producing a summary for a single sentence. The compressed sentence should be shorter, contain important content from the original sentence, and be grammatical. In some sense, sentence compression can be described as a \u2018scaled down version of the text summarization problem\u2019 (Knight and Marcu, 2002). Here similar to much previous work on sentence compression, we just focus on how to remove/select words in the original sentence without using operation like rewriting sentence. 3.1 Discriminative Compression Model by ILP McDonald (2006) presented a discriminative compression model, and Clarke and Lapata (2008) improved it by using ILP for decoding. Since our proposed method is based upon this model, in the following we briefly describe it first. Details can be found in (Clarke and Lapata, 2008). In this model, the following score function is used to evaluate each compression candidate: |y| s(x, y) = X s(x, L(yj−1), L(yj)) (1) j=2 where x = x1x2, ..., xn represents an original sentence and y = y1y2,..., ym denotes a compressed sentence. Because the sentence compression problem is defined as a word deletion task, yj must occur","@endWordPosition":"1390","@position":"9338","annotationId":"T82","@startWordPosition":"1389","@citStr":"McDonald (2006)"},{"#tail":"\n","#text":", 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compression system against four other models. HedgeTrimmer in Dorr et al. (2003) applied a variety of linguisticallymotivated heuristics to guide the sentences comSystem C Rate (%) Uni-F1 Rel-F1 HedgeTrimmer 57.64 0.64 0.50 McDonald (2006) 70.95 0.77 0.55 Martins (2009) 71.35 0.77 0.56 Wang (2013) 68.06 0.79 0.59 Our System 71.19 0.77 0.58 Table 4: Sentence compression results. The human compression rate of the test set is 69%. pression; McDonald (2006) used the output of two parsers as features in a discriminative model that decomposes over pairs of consecutive words; Martins and Smith (2009) built the compression model in the dependency parse and utilized the relationship between the head and modifier to preserve the grammar relationship; Wang et al. (2013) developed a novel beam search decoder using the treebased compression","@endWordPosition":"4845","@position":"29160","annotationId":"T83","@startWordPosition":"4844","@citStr":"McDonald (2006)"}]},"title":{"#tail":"\n","#text":"Discriminative sentence compression with soft syntactic evidence."},"booktitle":{"#tail":"\n","#text":"In Proceedings of EACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Ryan McDonald"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2006"},"rawString":{"#tail":"\n","#text":"Ryan McDonald. 2006. Discriminative sentence compression with soft syntactic evidence. In Proceedings of EACL."},"#text":"\n","marker":{"#tail":"\n","#text":"McDonald, 2006"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":" al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. This is an advantage of treebased compression technique (Knight and Marcu, 2000; Galley and McKeown, 2007; Wang et al., 2013). Similar to (Li et al., 2013a), we use a pipeline summarization framework where multiple compression candidates are generated for each pre-selected important sentence, and then an ILP691 Proceedings of the 2014 Conference on Empirical Methods in Natur","@endWordPosition":"442","@position":"3044","annotationId":"T84","@startWordPosition":"441","@citStr":"McDonald, 2006"},{"#tail":"\n","#text":"sing a margin-based objective whose loss captures the final summary quality. Woodsend and Lapata (2012) presented another method where the summary\u2019s informativeness, succinctness, and grammaticality are learned separately from data but optimized jointly using an ILP setup. Yoshikawa et al. (2012) incorporated semantic role information in the ILP model. Our work is closely related with the pipeline approach, where sentence-based extractive summarization is followed or proceeded by sentence compression. There have been many studies on sentence compression, independent of the summarization task. McDonald (2006) firstly introduced a discriminative sentence compression model to directly optimize the quality of the compressed sentences produced. Clarke and Lapata (2008) improved the above discriminative model by using ILP in decoding, making it convenient to add constraints to preserve grammatical structure. Nomoto (2007) treated the compression task as a sequence labeling problem and used CRF for it. Thadani and McKeown (2013) presented an approach for discriminative sentence compression that jointly produces sequential and syntactic representations for output text. Filippova and Altun (2013) presente","@endWordPosition":"971","@position":"6533","annotationId":"T85","@startWordPosition":"970","@citStr":"McDonald (2006)"},{"#tail":"\n","#text":" single word. 3 Sentence Compression Method Sentence compression is a task of producing a summary for a single sentence. The compressed sentence should be shorter, contain important content from the original sentence, and be grammatical. In some sense, sentence compression can be described as a \u2018scaled down version of the text summarization problem\u2019 (Knight and Marcu, 2002). Here similar to much previous work on sentence compression, we just focus on how to remove/select words in the original sentence without using operation like rewriting sentence. 3.1 Discriminative Compression Model by ILP McDonald (2006) presented a discriminative compression model, and Clarke and Lapata (2008) improved it by using ILP for decoding. Since our proposed method is based upon this model, in the following we briefly describe it first. Details can be found in (Clarke and Lapata, 2008). In this model, the following score function is used to evaluate each compression candidate: |y| s(x, y) = X s(x, L(yj−1), L(yj)) (1) j=2 where x = x1x2, ..., xn represents an original sentence and y = y1y2,..., ym denotes a compressed sentence. Because the sentence compression problem is defined as a word deletion task, yj must occur","@endWordPosition":"1390","@position":"9338","annotationId":"T86","@startWordPosition":"1389","@citStr":"McDonald (2006)"},{"#tail":"\n","#text":", 2013a). However, for the grammar and coherence score, our results are statistically significantly (p < 0.05) than (Li et al., 2013a). All the above statistics are based on paired t-test. 5.3 Compression Results The results above show that our summarization system is competitive. In this section we focus on the evaluation of our proposed compression method. We compare our compression system against four other models. HedgeTrimmer in Dorr et al. (2003) applied a variety of linguisticallymotivated heuristics to guide the sentences comSystem C Rate (%) Uni-F1 Rel-F1 HedgeTrimmer 57.64 0.64 0.50 McDonald (2006) 70.95 0.77 0.55 Martins (2009) 71.35 0.77 0.56 Wang (2013) 68.06 0.79 0.59 Our System 71.19 0.77 0.58 Table 4: Sentence compression results. The human compression rate of the test set is 69%. pression; McDonald (2006) used the output of two parsers as features in a discriminative model that decomposes over pairs of consecutive words; Martins and Smith (2009) built the compression model in the dependency parse and utilized the relationship between the head and modifier to preserve the grammar relationship; Wang et al. (2013) developed a novel beam search decoder using the treebased compression","@endWordPosition":"4845","@position":"29160","annotationId":"T87","@startWordPosition":"4844","@citStr":"McDonald (2006)"}]},"title":{"#tail":"\n","#text":"Discriminative sentence compression with soft syntactic evidence."},"booktitle":{"#tail":"\n","#text":"In Proceedings of EACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":{"#tail":"\n","#text":"Ryan McDonald"}}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Xian Qian and Yang Liu. 2013. Fast joint compression and summarization via graph cuts. In Proceedings ofEMNLP."},"#text":"\n","marker":{"#tail":"\n","#text":"Qian, Liu, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":"ignificant sentence constituents and make space for more salient information that is otherwise dropped due to the summary length constraint. Two general strategies have been used for compressive summarization. One is a pipeline approach, where sentencebased extractive summarization is followed or proceeded by sentence compression (Lin, 2003; Zajic et al., 2007; Vanderwende et al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke and Lapata, 2008), but our method uses an expanded constituent parse tree rather than only the leaf nodes in previous work. Therefore we can extract rich features for every node in the constituent parser tree. Thi","@endWordPosition":"385","@position":"2670","annotationId":"T88","@startWordPosition":"382","@citStr":"Qian and Liu, 2013"}},"title":{"#tail":"\n","#text":"Fast joint compression and summarization via graph cuts."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofEMNLP."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Xian Qian"},{"#tail":"\n","#text":"Yang Liu"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Lu Wang, Hema Raghavan, Vittorio Castelli, Radu Florian, and Claire Cardie. 2013. A sentence compression based framework to query-focused multidocument summarization. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Wang, Raghavan, Castelli, Florian, Cardie, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ng compressed document summaries as a viable step towards abstractive summarization. These compressive summaries often contain more information than sentence-based extractive summaries since they can remove insignificant sentence constituents and make space for more salient information that is otherwise dropped due to the summary length constraint. Two general strategies have been used for compressive summarization. One is a pipeline approach, where sentencebased extractive summarization is followed or proceeded by sentence compression (Lin, 2003; Zajic et al., 2007; Vanderwende et al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke an","@endWordPosition":"351","@position":"2459","annotationId":"T89","@startWordPosition":"348","@citStr":"Wang et al., 2013"},{"#tail":"\n","#text":"ving branches from the source sentences. Woodsend and Lapata (2010) presented a joint content selection and compression model for single-document summarization. They operated over a phrase-based representation of the source document which they obtained by merging information from PCFG parse trees and dependency graphs. Liu and Liu (2013) adopted the CRFbased sentence compression approach for summa692 rizing spoken documents. Unlike the word-based operation, some of these models e.g (Knight and Marcu, 2000; Siddharthan et al., 2004; Turner and Charniak, 2005; Galanis and Androutsopoulos, 2010; Wang et al., 2013), are tree-based approaches that operate on the parse trees and thus the compression decision can be made for a constituent, instead of a single word. 3 Sentence Compression Method Sentence compression is a task of producing a summary for a single sentence. The compressed sentence should be shorter, contain important content from the original sentence, and be grammatical. In some sense, sentence compression can be described as a \u2018scaled down version of the text summarization problem\u2019 (Knight and Marcu, 2002). Here similar to much previous work on sentence compression, we just focus on how to r","@endWordPosition":"1270","@position":"8586","annotationId":"T90","@startWordPosition":"1267","@citStr":"Wang et al., 2013"},{"#tail":"\n","#text":"entences comSystem C Rate (%) Uni-F1 Rel-F1 HedgeTrimmer 57.64 0.64 0.50 McDonald (2006) 70.95 0.77 0.55 Martins (2009) 71.35 0.77 0.56 Wang (2013) 68.06 0.79 0.59 Our System 71.19 0.77 0.58 Table 4: Sentence compression results. The human compression rate of the test set is 69%. pression; McDonald (2006) used the output of two parsers as features in a discriminative model that decomposes over pairs of consecutive words; Martins and Smith (2009) built the compression model in the dependency parse and utilized the relationship between the head and modifier to preserve the grammar relationship; Wang et al. (2013) developed a novel beam search decoder using the treebased compression model on the constituent parse tree, which could find the most probable compression efficiently. Table 4 shows the compression results of various systems, along with the compression ratio (C Rate) of the system output. We adopt the compression metrics as used in (Martins and Smith, 2009) that measures the macro F-measure for the retained unigrams (Uni-F1), and the one used in (Clarke and Lapata, 2008) that calculates the F1 score of the grammatical relations labeled by (Briscoe and Carroll, 2002) (Rel-F1). We can see that o","@endWordPosition":"4933","@position":"29690","annotationId":"T91","@startWordPosition":"4930","@citStr":"Wang et al. (2013)"}]},"title":{"#tail":"\n","#text":"A sentence compression based framework to query-focused multidocument summarization."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Lu Wang"},{"#tail":"\n","#text":"Hema Raghavan"},{"#tail":"\n","#text":"Vittorio Castelli"},{"#tail":"\n","#text":"Radu Florian"},{"#tail":"\n","#text":"Claire Cardie"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2013"},"rawString":{"#tail":"\n","#text":"Lu Wang, Hema Raghavan, Vittorio Castelli, Radu Florian, and Claire Cardie. 2013. A sentence compression based framework to query-focused multidocument summarization. In Proceedings ofACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Wang, Raghavan, Castelli, Florian, Cardie, 2013"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":"ng compressed document summaries as a viable step towards abstractive summarization. These compressive summaries often contain more information than sentence-based extractive summaries since they can remove insignificant sentence constituents and make space for more salient information that is otherwise dropped due to the summary length constraint. Two general strategies have been used for compressive summarization. One is a pipeline approach, where sentencebased extractive summarization is followed or proceeded by sentence compression (Lin, 2003; Zajic et al., 2007; Vanderwende et al., 2007; Wang et al., 2013). Another line of work uses joint compression and summarization. Such methods have been shown to achieve promising performance (Daum´e, 2006; Chali and Hasan, 2012; Almeida and Martins, 2013; Qian and Liu, 2013), but they are typically computationally expensive. In this study, we propose an innovative sentence compression model based on expanded constituent parse trees. Our model uses integer linear programming (ILP) to search the entire space of compression, and is discriminatively trained. It is built based on the discriminative sentence compression model from (McDonald, 2006) and (Clarke an","@endWordPosition":"351","@position":"2459","annotationId":"T92","@startWordPosition":"348","@citStr":"Wang et al., 2013"},{"#tail":"\n","#text":"ving branches from the source sentences. Woodsend and Lapata (2010) presented a joint content selection and compression model for single-document summarization. They operated over a phrase-based representation of the source document which they obtained by merging information from PCFG parse trees and dependency graphs. Liu and Liu (2013) adopted the CRFbased sentence compression approach for summa692 rizing spoken documents. Unlike the word-based operation, some of these models e.g (Knight and Marcu, 2000; Siddharthan et al., 2004; Turner and Charniak, 2005; Galanis and Androutsopoulos, 2010; Wang et al., 2013), are tree-based approaches that operate on the parse trees and thus the compression decision can be made for a constituent, instead of a single word. 3 Sentence Compression Method Sentence compression is a task of producing a summary for a single sentence. The compressed sentence should be shorter, contain important content from the original sentence, and be grammatical. In some sense, sentence compression can be described as a \u2018scaled down version of the text summarization problem\u2019 (Knight and Marcu, 2002). Here similar to much previous work on sentence compression, we just focus on how to r","@endWordPosition":"1270","@position":"8586","annotationId":"T93","@startWordPosition":"1267","@citStr":"Wang et al., 2013"},{"#tail":"\n","#text":"entences comSystem C Rate (%) Uni-F1 Rel-F1 HedgeTrimmer 57.64 0.64 0.50 McDonald (2006) 70.95 0.77 0.55 Martins (2009) 71.35 0.77 0.56 Wang (2013) 68.06 0.79 0.59 Our System 71.19 0.77 0.58 Table 4: Sentence compression results. The human compression rate of the test set is 69%. pression; McDonald (2006) used the output of two parsers as features in a discriminative model that decomposes over pairs of consecutive words; Martins and Smith (2009) built the compression model in the dependency parse and utilized the relationship between the head and modifier to preserve the grammar relationship; Wang et al. (2013) developed a novel beam search decoder using the treebased compression model on the constituent parse tree, which could find the most probable compression efficiently. Table 4 shows the compression results of various systems, along with the compression ratio (C Rate) of the system output. We adopt the compression metrics as used in (Martins and Smith, 2009) that measures the macro F-measure for the retained unigrams (Uni-F1), and the one used in (Clarke and Lapata, 2008) that calculates the F1 score of the grammatical relations labeled by (Briscoe and Carroll, 2002) (Rel-F1). We can see that o","@endWordPosition":"4933","@position":"29690","annotationId":"T94","@startWordPosition":"4930","@citStr":"Wang et al. (2013)"}]},"title":{"#tail":"\n","#text":"A sentence compression based framework to query-focused multidocument summarization."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Lu Wang"},{"#tail":"\n","#text":"Hema Raghavan"},{"#tail":"\n","#text":"Vittorio Castelli"},{"#tail":"\n","#text":"Radu Florian"},{"#tail":"\n","#text":"Claire Cardie"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2012"},"rawString":{"#tail":"\n","#text":"Kristian Woodsend and Mirella Lapata. 2012. Multiple aspect summarization using integer linear programming. In Proceedings ofEMNLP-CoNLL."},"#text":"\n","marker":{"#tail":"\n","#text":"Woodsend, Lapata, 2012"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":", or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP problem. Berg-Kirkpatrick et al. (2011) proposed an approach to score the candidate summaries according to a combined linear model of extractive sentence selection and compression. They trained the model using a margin-based objective whose loss captures the final summary quality. Woodsend and Lapata (2012) presented another method where the summary\u2019s informativeness, succinctness, and grammaticality are learned separately from data but optimized jointly using an ILP setup. Yoshikawa et al. (2012) incorporated semantic role information in the ILP model. Our work is closely related with the pipeline approach, where sentence-based extractive summarization is followed or proceeded by sentence compression. There have been many studies on sentence compression, independent of the summarization task. McDonald (2006) firstly introduced a discriminative sentence compression model to directly optimize the","@endWordPosition":"898","@position":"6021","annotationId":"T95","@startWordPosition":"895","@citStr":"Woodsend and Lapata (2012)"},{"#tail":"\n","#text":" extracted from a single sentence, as in the standard sentence compression task, and are related to the document summarization task. 3http://nlp.stanford.edu/software/corenlp.shtml CRF4 to implement the CRF sentence compression model. SVMlight5 is used for the summary sentence pre-selection model. Gurobi ILP solver6 does all ILP decoding. 5.2 Summarization Results We compare our summarization system against four recent studies, which have reported some of the highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC c","@endWordPosition":"4160","@position":"24945","annotationId":"T96","@startWordPosition":"4156","@citStr":"Woodsend and Lapata (2012)"}]},"title":{"#tail":"\n","#text":"Multiple aspect summarization using integer linear programming."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofEMNLP-CoNLL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Kristian Woodsend"},{"#tail":"\n","#text":"Mirella Lapata"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2012"},"rawString":{"#tail":"\n","#text":"Kristian Woodsend and Mirella Lapata. 2012. Multiple aspect summarization using integer linear programming. In Proceedings ofEMNLP-CoNLL."},"#text":"\n","marker":{"#tail":"\n","#text":"Woodsend, Lapata, 2012"},"contexts":{"#tail":"\n","#text":"\n","context":[{"#tail":"\n","#text":", or through a pipeline approach that integrates a sentence compression model with a summary sentence pre-selection or post-selection step. Many studies have explored the joint sentence compression and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP problem. Berg-Kirkpatrick et al. (2011) proposed an approach to score the candidate summaries according to a combined linear model of extractive sentence selection and compression. They trained the model using a margin-based objective whose loss captures the final summary quality. Woodsend and Lapata (2012) presented another method where the summary\u2019s informativeness, succinctness, and grammaticality are learned separately from data but optimized jointly using an ILP setup. Yoshikawa et al. (2012) incorporated semantic role information in the ILP model. Our work is closely related with the pipeline approach, where sentence-based extractive summarization is followed or proceeded by sentence compression. There have been many studies on sentence compression, independent of the summarization task. McDonald (2006) firstly introduced a discriminative sentence compression model to directly optimize the","@endWordPosition":"898","@position":"6021","annotationId":"T97","@startWordPosition":"895","@citStr":"Woodsend and Lapata (2012)"},{"#tail":"\n","#text":" extracted from a single sentence, as in the standard sentence compression task, and are related to the document summarization task. 3http://nlp.stanford.edu/software/corenlp.shtml CRF4 to implement the CRF sentence compression model. SVMlight5 is used for the summary sentence pre-selection model. Gurobi ILP solver6 does all ILP decoding. 5.2 Summarization Results We compare our summarization system against four recent studies, which have reported some of the highest published results on this task. BergKirkpatrick et al. (2011) introduced a joint model for sentence extraction and compression. Woodsend and Lapata (2012) learned individual summary aspects from data, e.g., informativeness, succinctness, grammaticalness, stylistic writing conventions, and jointly optimized the outcome in an ILP framework. Ng et al. (2012) exploited category-specific information for multi-document summarization. Almeida and Martins (2013) proposed compressive summarization method by dual decomposition and multi-task learning. Our summarization framework is the same as (Li et al., 2013a), except they used a CRF-based compression model. In addition to the four previous studies, we also report the best achieved results in the TAC c","@endWordPosition":"4160","@position":"24945","annotationId":"T98","@startWordPosition":"4156","@citStr":"Woodsend and Lapata (2012)"}]},"title":{"#tail":"\n","#text":"Multiple aspect summarization using integer linear programming."},"booktitle":{"#tail":"\n","#text":"In Proceedings ofEMNLP-CoNLL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Kristian Woodsend"},{"#tail":"\n","#text":"Mirella Lapata"}]}},{"#tail":"\n","date":{"#tail":"\n","#text":"2012"},"rawString":{"#tail":"\n","#text":"Katsumasa Yoshikawa, Tsutomu Hirao, Ryu Iida, and Manabu Okumura. 2012. Sentence compression with semantic role constraints. In Proceedings of ACL."},"#text":"\n","marker":{"#tail":"\n","#text":"Yoshikawa, Hirao, Iida, Okumura, 2012"},"contexts":{"#tail":"\n","#text":"\n","context":{"#tail":"\n","#text":" and selection setting. Martins and Smith (2009) jointly performed sentence extraction and compression by solving an ILP problem. Berg-Kirkpatrick et al. (2011) proposed an approach to score the candidate summaries according to a combined linear model of extractive sentence selection and compression. They trained the model using a margin-based objective whose loss captures the final summary quality. Woodsend and Lapata (2012) presented another method where the summary\u2019s informativeness, succinctness, and grammaticality are learned separately from data but optimized jointly using an ILP setup. Yoshikawa et al. (2012) incorporated semantic role information in the ILP model. Our work is closely related with the pipeline approach, where sentence-based extractive summarization is followed or proceeded by sentence compression. There have been many studies on sentence compression, independent of the summarization task. McDonald (2006) firstly introduced a discriminative sentence compression model to directly optimize the quality of the compressed sentences produced. Clarke and Lapata (2008) improved the above discriminative model by using ILP in decoding, making it convenient to add constraints to preserve gram","@endWordPosition":"926","@position":"6215","annotationId":"T99","@startWordPosition":"923","@citStr":"Yoshikawa et al. (2012)"}},"title":{"#tail":"\n","#text":"Sentence compression with semantic role constraints."},"booktitle":{"#tail":"\n","#text":"In Proceedings of ACL."},"@valid":"true","authors":{"#tail":"\n","#text":"\n","author":[{"#tail":"\n","#text":"Katsumasa Yoshikawa"},{"#tail":"\n","#text":"Tsutomu Hirao"},{"#tail":"\n","#text":"Ryu Iida"},{"#tail":"\n","#text":"Manabu Okumura"}]}}]}}}}
